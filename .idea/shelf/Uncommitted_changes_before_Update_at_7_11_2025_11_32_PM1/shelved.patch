Index: infrastructure/kafka/kafka-producer/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n\r\n    <artifactId>kafka-producer</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>kafka-config-data</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.avro</groupId>\r\n            <artifactId>avro</artifactId>\r\n            <version>1.12.0</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.kafka</groupId>\r\n            <artifactId>spring-kafka</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.28</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-producer/pom.xml b/infrastructure/kafka/kafka-producer/pom.xml
--- a/infrastructure/kafka/kafka-producer/pom.xml	
+++ b/infrastructure/kafka/kafka-producer/pom.xml	
@@ -2,40 +2,48 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
     <parent>
+        <artifactId>kafka</artifactId>
         <groupId>com.online.medicine.application</groupId>
-        <artifactId>kafka</artifactId>
         <version>1.0-SNAPSHOT</version>
     </parent>
+    <modelVersion>4.0.0</modelVersion>
 
     <artifactId>kafka-producer</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
     <dependencies>
+
+        <dependency>
+            <groupId>com.online.medicine.application</groupId>
+            <artifactId>kafka-model</artifactId>
+        </dependency>
         <dependency>
             <groupId>com.online.medicine.application</groupId>
             <artifactId>kafka-config-data</artifactId>
         </dependency>
         <dependency>
-            <groupId>org.apache.avro</groupId>
-            <artifactId>avro</artifactId>
-            <version>1.12.0</version>
-            <scope>compile</scope>
+            <groupId>com.online.medicine.application</groupId>
+            <artifactId>order-domain-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.online.medicine.application</groupId>
+            <artifactId>common-domain</artifactId>
         </dependency>
         <dependency>
             <groupId>org.springframework.kafka</groupId>
             <artifactId>spring-kafka</artifactId>
         </dependency>
         <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <version>1.18.28</version>
-            <scope>compile</scope>
+            <groupId>io.confluent</groupId>
+            <artifactId>kafka-avro-serializer</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.online.medicine.application</groupId>
+            <artifactId>kafka-config-data</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.online.medicine.application</groupId>
+            <artifactId>kafka-config-data</artifactId>
         </dependency>
     </dependencies>
 
Index: infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/KafkaConsumer.java
===================================================================
diff --git a/infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/KafkaConsumer.java b/infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/KafkaConsumer.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/KafkaConsumer.java	
+++ /dev/null	
@@ -1,10 +0,0 @@
-package com.online.medicine.kafka.consumer;
-
-import org.apache.avro.specific.SpecificRecordBase;
-
-import java.util.List;
-
-public interface KafkaConsumer<T extends SpecificRecordBase> {
-    void receive(List<T> messages, List<String> keys, List<Integer> partitions, List<Long> offsets);
-}
-
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentResponseAvroModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n\r\nimport org.apache.avro.specific.SpecificData;\r\nimport org.apache.avro.message.BinaryMessageEncoder;\r\nimport org.apache.avro.message.BinaryMessageDecoder;\r\nimport org.apache.avro.message.SchemaStore;\r\n\r\n@org.apache.avro.specific.AvroGenerated\r\npublic class PaymentResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {\r\n  private static final long serialVersionUID = -2126784712017759782L;\r\n\r\n\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"PaymentResponseAvroModel\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"sagaId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"paymentId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"customerId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"orderId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"price\\\",\\\"type\\\":{\\\"type\\\":\\\"bytes\\\",\\\"logicalType\\\":\\\"decimal\\\",\\\"precision\\\":10,\\\"scale\\\":2}},{\\\"name\\\":\\\"createdAt\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"logicalType\\\":\\\"timestamp-millis\\\"}},{\\\"name\\\":\\\"paymentStatus\\\",\\\"type\\\":{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"PaymentStatus\\\",\\\"symbols\\\":[\\\"COMPLETED\\\",\\\"CANCELLED\\\",\\\"FAILED\\\"]}},{\\\"name\\\":\\\"failureMessages\\\",\\\"type\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"}}}]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n\r\n  private static final SpecificData MODEL$ = new SpecificData();\r\n  static {\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());\r\n  }\r\n\r\n  private static final BinaryMessageEncoder<PaymentResponseAvroModel> ENCODER =\r\n      new BinaryMessageEncoder<PaymentResponseAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  private static final BinaryMessageDecoder<PaymentResponseAvroModel> DECODER =\r\n      new BinaryMessageDecoder<PaymentResponseAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  /**\r\n   * Return the BinaryMessageEncoder instance used by this class.\r\n   * @return the message encoder used by this class\r\n   */\r\n  public static BinaryMessageEncoder<PaymentResponseAvroModel> getEncoder() {\r\n    return ENCODER;\r\n  }\r\n\r\n  /**\r\n   * Return the BinaryMessageDecoder instance used by this class.\r\n   * @return the message decoder used by this class\r\n   */\r\n  public static BinaryMessageDecoder<PaymentResponseAvroModel> getDecoder() {\r\n    return DECODER;\r\n  }\r\n\r\n  /**\r\n   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.\r\n   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint\r\n   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore\r\n   */\r\n  public static BinaryMessageDecoder<PaymentResponseAvroModel> createDecoder(SchemaStore resolver) {\r\n    return new BinaryMessageDecoder<PaymentResponseAvroModel>(MODEL$, SCHEMA$, resolver);\r\n  }\r\n\r\n  /**\r\n   * Serializes this PaymentResponseAvroModel to a ByteBuffer.\r\n   * @return a buffer holding the serialized data for this instance\r\n   * @throws java.io.IOException if this instance could not be serialized\r\n   */\r\n  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {\r\n    return ENCODER.encode(this);\r\n  }\r\n\r\n  /**\r\n   * Deserializes a PaymentResponseAvroModel from a ByteBuffer.\r\n   * @param b a byte buffer holding serialized data for an instance of this class\r\n   * @return a PaymentResponseAvroModel instance decoded from the given buffer\r\n   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class\r\n   */\r\n  public static PaymentResponseAvroModel fromByteBuffer(\r\n      java.nio.ByteBuffer b) throws java.io.IOException {\r\n    return DECODER.decode(b);\r\n  }\r\n\r\n  private java.lang.String id;\r\n  private java.lang.String sagaId;\r\n  private java.lang.String paymentId;\r\n  private java.lang.String customerId;\r\n  private java.lang.String orderId;\r\n  private java.math.BigDecimal price;\r\n  private java.time.Instant createdAt;\r\n  private PaymentStatus paymentStatus;\r\n  private java.util.List<java.lang.String> failureMessages;\r\n\r\n  /**\r\n   * Default constructor.  Note that this does not initialize fields\r\n   * to their default values from the schema.  If that is desired then\r\n   * one should use <code>newBuilder()</code>.\r\n   */\r\n  public PaymentResponseAvroModel() {}\r\n\r\n  /**\r\n   * All-args constructor.\r\n   * @param id The new value for id\r\n   * @param sagaId The new value for sagaId\r\n   * @param paymentId The new value for paymentId\r\n   * @param customerId The new value for customerId\r\n   * @param orderId The new value for orderId\r\n   * @param price The new value for price\r\n   * @param createdAt The new value for createdAt\r\n   * @param paymentStatus The new value for paymentStatus\r\n   * @param failureMessages The new value for failureMessages\r\n   */\r\n  public PaymentResponseAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String paymentId, java.lang.String customerId, java.lang.String orderId, java.math.BigDecimal price, java.time.Instant createdAt, PaymentStatus paymentStatus, java.util.List<java.lang.String> failureMessages) {\r\n    this.id = id;\r\n    this.sagaId = sagaId;\r\n    this.paymentId = paymentId;\r\n    this.customerId = customerId;\r\n    this.orderId = orderId;\r\n    this.price = price;\r\n    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n    this.paymentStatus = paymentStatus;\r\n    this.failureMessages = failureMessages;\r\n  }\r\n\r\n  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n  // Used by DatumWriter.  Applications should not call.\r\n  public java.lang.Object get(int field$) {\r\n    switch (field$) {\r\n    case 0: return id;\r\n    case 1: return sagaId;\r\n    case 2: return paymentId;\r\n    case 3: return customerId;\r\n    case 4: return orderId;\r\n    case 5: return price;\r\n    case 6: return createdAt;\r\n    case 7: return paymentStatus;\r\n    case 8: return failureMessages;\r\n    default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  private static final org.apache.avro.Conversion<?>[] conversions =\r\n      new org.apache.avro.Conversion<?>[] {\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      new org.apache.avro.Conversions.DecimalConversion(),\r\n      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),\r\n      null,\r\n      null,\r\n      null\r\n  };\r\n\r\n  @Override\r\n  public org.apache.avro.Conversion<?> getConversion(int field) {\r\n    return conversions[field];\r\n  }\r\n\r\n  // Used by DatumReader.  Applications should not call.\r\n  @SuppressWarnings(value=\"unchecked\")\r\n  public void put(int field$, java.lang.Object value$) {\r\n    switch (field$) {\r\n    case 0: id = value$ != null ? value$.toString() : null; break;\r\n    case 1: sagaId = value$ != null ? value$.toString() : null; break;\r\n    case 2: paymentId = value$ != null ? value$.toString() : null; break;\r\n    case 3: customerId = value$ != null ? value$.toString() : null; break;\r\n    case 4: orderId = value$ != null ? value$.toString() : null; break;\r\n    case 5: price = (java.math.BigDecimal)value$; break;\r\n    case 6: createdAt = (java.time.Instant)value$; break;\r\n    case 7: paymentStatus = (PaymentStatus)value$; break;\r\n    case 8: failureMessages = (java.util.List<java.lang.String>)value$; break;\r\n    default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'id' field.\r\n   * @return The value of the 'id' field.\r\n   */\r\n  public java.lang.String getId() {\r\n    return id;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'id' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setId(java.lang.String value) {\r\n    this.id = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'sagaId' field.\r\n   * @return The value of the 'sagaId' field.\r\n   */\r\n  public java.lang.String getSagaId() {\r\n    return sagaId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'sagaId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setSagaId(java.lang.String value) {\r\n    this.sagaId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'paymentId' field.\r\n   * @return The value of the 'paymentId' field.\r\n   */\r\n  public java.lang.String getPaymentId() {\r\n    return paymentId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'paymentId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPaymentId(java.lang.String value) {\r\n    this.paymentId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'customerId' field.\r\n   * @return The value of the 'customerId' field.\r\n   */\r\n  public java.lang.String getCustomerId() {\r\n    return customerId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'customerId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setCustomerId(java.lang.String value) {\r\n    this.customerId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'orderId' field.\r\n   * @return The value of the 'orderId' field.\r\n   */\r\n  public java.lang.String getOrderId() {\r\n    return orderId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'orderId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setOrderId(java.lang.String value) {\r\n    this.orderId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'price' field.\r\n   * @return The value of the 'price' field.\r\n   */\r\n  public java.math.BigDecimal getPrice() {\r\n    return price;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'price' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPrice(java.math.BigDecimal value) {\r\n    this.price = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'createdAt' field.\r\n   * @return The value of the 'createdAt' field.\r\n   */\r\n  public java.time.Instant getCreatedAt() {\r\n    return createdAt;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'createdAt' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setCreatedAt(java.time.Instant value) {\r\n    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'paymentStatus' field.\r\n   * @return The value of the 'paymentStatus' field.\r\n   */\r\n  public PaymentStatus getPaymentStatus() {\r\n    return paymentStatus;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'paymentStatus' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPaymentStatus(PaymentStatus value) {\r\n    this.paymentStatus = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'failureMessages' field.\r\n   * @return The value of the 'failureMessages' field.\r\n   */\r\n  public java.util.List<java.lang.String> getFailureMessages() {\r\n    return failureMessages;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'failureMessages' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setFailureMessages(java.util.List<java.lang.String> value) {\r\n    this.failureMessages = value;\r\n  }\r\n\r\n  /**\r\n   * Creates a new PaymentResponseAvroModel RecordBuilder.\r\n   * @return A new PaymentResponseAvroModel RecordBuilder\r\n   */\r\n  public static PaymentResponseAvroModel.Builder newBuilder() {\r\n    return new PaymentResponseAvroModel.Builder();\r\n  }\r\n\r\n  /**\r\n   * Creates a new PaymentResponseAvroModel RecordBuilder by copying an existing Builder.\r\n   * @param other The existing builder to copy.\r\n   * @return A new PaymentResponseAvroModel RecordBuilder\r\n   */\r\n  public static PaymentResponseAvroModel.Builder newBuilder(PaymentResponseAvroModel.Builder other) {\r\n    if (other == null) {\r\n      return new PaymentResponseAvroModel.Builder();\r\n    } else {\r\n      return new PaymentResponseAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new PaymentResponseAvroModel RecordBuilder by copying an existing PaymentResponseAvroModel instance.\r\n   * @param other The existing instance to copy.\r\n   * @return A new PaymentResponseAvroModel RecordBuilder\r\n   */\r\n  public static PaymentResponseAvroModel.Builder newBuilder(PaymentResponseAvroModel other) {\r\n    if (other == null) {\r\n      return new PaymentResponseAvroModel.Builder();\r\n    } else {\r\n      return new PaymentResponseAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * RecordBuilder for PaymentResponseAvroModel instances.\r\n   */\r\n  @org.apache.avro.specific.AvroGenerated\r\n  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentResponseAvroModel>\r\n    implements org.apache.avro.data.RecordBuilder<PaymentResponseAvroModel> {\r\n\r\n    private java.lang.String id;\r\n    private java.lang.String sagaId;\r\n    private java.lang.String paymentId;\r\n    private java.lang.String customerId;\r\n    private java.lang.String orderId;\r\n    private java.math.BigDecimal price;\r\n    private java.time.Instant createdAt;\r\n    private PaymentStatus paymentStatus;\r\n    private java.util.List<java.lang.String> failureMessages;\r\n\r\n    /** Creates a new Builder */\r\n    private Builder() {\r\n      super(SCHEMA$, MODEL$);\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing Builder.\r\n     * @param other The existing Builder to copy.\r\n     */\r\n    private Builder(PaymentResponseAvroModel.Builder other) {\r\n      super(other);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = other.fieldSetFlags()[0];\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = other.fieldSetFlags()[1];\r\n      }\r\n      if (isValidValue(fields()[2], other.paymentId)) {\r\n        this.paymentId = data().deepCopy(fields()[2].schema(), other.paymentId);\r\n        fieldSetFlags()[2] = other.fieldSetFlags()[2];\r\n      }\r\n      if (isValidValue(fields()[3], other.customerId)) {\r\n        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);\r\n        fieldSetFlags()[3] = other.fieldSetFlags()[3];\r\n      }\r\n      if (isValidValue(fields()[4], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[4].schema(), other.orderId);\r\n        fieldSetFlags()[4] = other.fieldSetFlags()[4];\r\n      }\r\n      if (isValidValue(fields()[5], other.price)) {\r\n        this.price = data().deepCopy(fields()[5].schema(), other.price);\r\n        fieldSetFlags()[5] = other.fieldSetFlags()[5];\r\n      }\r\n      if (isValidValue(fields()[6], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[6].schema(), other.createdAt);\r\n        fieldSetFlags()[6] = other.fieldSetFlags()[6];\r\n      }\r\n      if (isValidValue(fields()[7], other.paymentStatus)) {\r\n        this.paymentStatus = data().deepCopy(fields()[7].schema(), other.paymentStatus);\r\n        fieldSetFlags()[7] = other.fieldSetFlags()[7];\r\n      }\r\n      if (isValidValue(fields()[8], other.failureMessages)) {\r\n        this.failureMessages = data().deepCopy(fields()[8].schema(), other.failureMessages);\r\n        fieldSetFlags()[8] = other.fieldSetFlags()[8];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing PaymentResponseAvroModel instance\r\n     * @param other The existing instance to copy.\r\n     */\r\n    private Builder(PaymentResponseAvroModel other) {\r\n      super(SCHEMA$, MODEL$);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = true;\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = true;\r\n      }\r\n      if (isValidValue(fields()[2], other.paymentId)) {\r\n        this.paymentId = data().deepCopy(fields()[2].schema(), other.paymentId);\r\n        fieldSetFlags()[2] = true;\r\n      }\r\n      if (isValidValue(fields()[3], other.customerId)) {\r\n        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);\r\n        fieldSetFlags()[3] = true;\r\n      }\r\n      if (isValidValue(fields()[4], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[4].schema(), other.orderId);\r\n        fieldSetFlags()[4] = true;\r\n      }\r\n      if (isValidValue(fields()[5], other.price)) {\r\n        this.price = data().deepCopy(fields()[5].schema(), other.price);\r\n        fieldSetFlags()[5] = true;\r\n      }\r\n      if (isValidValue(fields()[6], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[6].schema(), other.createdAt);\r\n        fieldSetFlags()[6] = true;\r\n      }\r\n      if (isValidValue(fields()[7], other.paymentStatus)) {\r\n        this.paymentStatus = data().deepCopy(fields()[7].schema(), other.paymentStatus);\r\n        fieldSetFlags()[7] = true;\r\n      }\r\n      if (isValidValue(fields()[8], other.failureMessages)) {\r\n        this.failureMessages = data().deepCopy(fields()[8].schema(), other.failureMessages);\r\n        fieldSetFlags()[8] = true;\r\n      }\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'id' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getId() {\r\n      return id;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'id' field.\r\n      * @param value The value of 'id'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setId(java.lang.String value) {\r\n      validate(fields()[0], value);\r\n      this.id = value;\r\n      fieldSetFlags()[0] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'id' field has been set.\r\n      * @return True if the 'id' field has been set, false otherwise.\r\n      */\r\n    public boolean hasId() {\r\n      return fieldSetFlags()[0];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'id' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearId() {\r\n      id = null;\r\n      fieldSetFlags()[0] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'sagaId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getSagaId() {\r\n      return sagaId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'sagaId' field.\r\n      * @param value The value of 'sagaId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setSagaId(java.lang.String value) {\r\n      validate(fields()[1], value);\r\n      this.sagaId = value;\r\n      fieldSetFlags()[1] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'sagaId' field has been set.\r\n      * @return True if the 'sagaId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasSagaId() {\r\n      return fieldSetFlags()[1];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'sagaId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearSagaId() {\r\n      sagaId = null;\r\n      fieldSetFlags()[1] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'paymentId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getPaymentId() {\r\n      return paymentId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'paymentId' field.\r\n      * @param value The value of 'paymentId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setPaymentId(java.lang.String value) {\r\n      validate(fields()[2], value);\r\n      this.paymentId = value;\r\n      fieldSetFlags()[2] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'paymentId' field has been set.\r\n      * @return True if the 'paymentId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPaymentId() {\r\n      return fieldSetFlags()[2];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'paymentId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearPaymentId() {\r\n      paymentId = null;\r\n      fieldSetFlags()[2] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'customerId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getCustomerId() {\r\n      return customerId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'customerId' field.\r\n      * @param value The value of 'customerId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setCustomerId(java.lang.String value) {\r\n      validate(fields()[3], value);\r\n      this.customerId = value;\r\n      fieldSetFlags()[3] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'customerId' field has been set.\r\n      * @return True if the 'customerId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasCustomerId() {\r\n      return fieldSetFlags()[3];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'customerId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearCustomerId() {\r\n      customerId = null;\r\n      fieldSetFlags()[3] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'orderId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getOrderId() {\r\n      return orderId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'orderId' field.\r\n      * @param value The value of 'orderId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setOrderId(java.lang.String value) {\r\n      validate(fields()[4], value);\r\n      this.orderId = value;\r\n      fieldSetFlags()[4] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'orderId' field has been set.\r\n      * @return True if the 'orderId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasOrderId() {\r\n      return fieldSetFlags()[4];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'orderId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearOrderId() {\r\n      orderId = null;\r\n      fieldSetFlags()[4] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'price' field.\r\n      * @return The value.\r\n      */\r\n    public java.math.BigDecimal getPrice() {\r\n      return price;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'price' field.\r\n      * @param value The value of 'price'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setPrice(java.math.BigDecimal value) {\r\n      validate(fields()[5], value);\r\n      this.price = value;\r\n      fieldSetFlags()[5] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'price' field has been set.\r\n      * @return True if the 'price' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPrice() {\r\n      return fieldSetFlags()[5];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'price' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearPrice() {\r\n      price = null;\r\n      fieldSetFlags()[5] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'createdAt' field.\r\n      * @return The value.\r\n      */\r\n    public java.time.Instant getCreatedAt() {\r\n      return createdAt;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'createdAt' field.\r\n      * @param value The value of 'createdAt'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setCreatedAt(java.time.Instant value) {\r\n      validate(fields()[6], value);\r\n      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n      fieldSetFlags()[6] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'createdAt' field has been set.\r\n      * @return True if the 'createdAt' field has been set, false otherwise.\r\n      */\r\n    public boolean hasCreatedAt() {\r\n      return fieldSetFlags()[6];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'createdAt' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearCreatedAt() {\r\n      fieldSetFlags()[6] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'paymentStatus' field.\r\n      * @return The value.\r\n      */\r\n    public PaymentStatus getPaymentStatus() {\r\n      return paymentStatus;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'paymentStatus' field.\r\n      * @param value The value of 'paymentStatus'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setPaymentStatus(PaymentStatus value) {\r\n      validate(fields()[7], value);\r\n      this.paymentStatus = value;\r\n      fieldSetFlags()[7] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'paymentStatus' field has been set.\r\n      * @return True if the 'paymentStatus' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPaymentStatus() {\r\n      return fieldSetFlags()[7];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'paymentStatus' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearPaymentStatus() {\r\n      paymentStatus = null;\r\n      fieldSetFlags()[7] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'failureMessages' field.\r\n      * @return The value.\r\n      */\r\n    public java.util.List<java.lang.String> getFailureMessages() {\r\n      return failureMessages;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'failureMessages' field.\r\n      * @param value The value of 'failureMessages'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder setFailureMessages(java.util.List<java.lang.String> value) {\r\n      validate(fields()[8], value);\r\n      this.failureMessages = value;\r\n      fieldSetFlags()[8] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'failureMessages' field has been set.\r\n      * @return True if the 'failureMessages' field has been set, false otherwise.\r\n      */\r\n    public boolean hasFailureMessages() {\r\n      return fieldSetFlags()[8];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'failureMessages' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentResponseAvroModel.Builder clearFailureMessages() {\r\n      failureMessages = null;\r\n      fieldSetFlags()[8] = false;\r\n      return this;\r\n    }\r\n\r\n    @Override\r\n    @SuppressWarnings(\"unchecked\")\r\n    public PaymentResponseAvroModel build() {\r\n      try {\r\n        PaymentResponseAvroModel record = new PaymentResponseAvroModel();\r\n        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);\r\n        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);\r\n        record.paymentId = fieldSetFlags()[2] ? this.paymentId : (java.lang.String) defaultValue(fields()[2]);\r\n        record.customerId = fieldSetFlags()[3] ? this.customerId : (java.lang.String) defaultValue(fields()[3]);\r\n        record.orderId = fieldSetFlags()[4] ? this.orderId : (java.lang.String) defaultValue(fields()[4]);\r\n        record.price = fieldSetFlags()[5] ? this.price : (java.math.BigDecimal) defaultValue(fields()[5]);\r\n        record.createdAt = fieldSetFlags()[6] ? this.createdAt : (java.time.Instant) defaultValue(fields()[6]);\r\n        record.paymentStatus = fieldSetFlags()[7] ? this.paymentStatus : (PaymentStatus) defaultValue(fields()[7]);\r\n        record.failureMessages = fieldSetFlags()[8] ? this.failureMessages : (java.util.List<java.lang.String>) defaultValue(fields()[8]);\r\n        return record;\r\n      } catch (org.apache.avro.AvroMissingFieldException e) {\r\n        throw e;\r\n      } catch (java.lang.Exception e) {\r\n        throw new org.apache.avro.AvroRuntimeException(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumWriter<PaymentResponseAvroModel>\r\n    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);\r\n\r\n  @Override public void writeExternal(java.io.ObjectOutput out)\r\n    throws java.io.IOException {\r\n    WRITER$.write(this, SpecificData.getEncoder(out));\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumReader<PaymentResponseAvroModel>\r\n    READER$ = (org.apache.avro.io.DatumReader<PaymentResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);\r\n\r\n  @Override public void readExternal(java.io.ObjectInput in)\r\n    throws java.io.IOException {\r\n    READER$.read(this, SpecificData.getDecoder(in));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentResponseAvroModel.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentResponseAvroModel.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentResponseAvroModel.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentResponseAvroModel.java	
@@ -5,17 +5,19 @@
  */
 package com.online.medicine.application.kafka.order.avro.model;
 
+import org.apache.avro.generic.GenericArray;
 import org.apache.avro.specific.SpecificData;
+import org.apache.avro.util.Utf8;
 import org.apache.avro.message.BinaryMessageEncoder;
 import org.apache.avro.message.BinaryMessageDecoder;
 import org.apache.avro.message.SchemaStore;
 
 @org.apache.avro.specific.AvroGenerated
 public class PaymentResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
-  private static final long serialVersionUID = -2126784712017759782L;
+  private static final long serialVersionUID = -250158184486124094L;
 
 
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentResponseAvroModel\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"paymentId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"paymentStatus\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentStatus\",\"symbols\":[\"COMPLETED\",\"CANCELLED\",\"FAILED\"]}},{\"name\":\"failureMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentResponseAvroModel\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"paymentId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"paymentStatus\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentStatus\",\"symbols\":[\"COMPLETED\",\"CANCELLED\",\"FAILED\"]}},{\"name\":\"failureMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
 
   private static final SpecificData MODEL$ = new SpecificData();
@@ -82,7 +84,7 @@
   private java.lang.String orderId;
   private java.math.BigDecimal price;
   private java.time.Instant createdAt;
-  private PaymentStatus paymentStatus;
+  private com.online.medicine.application.kafka.order.avro.model.PaymentStatus paymentStatus;
   private java.util.List<java.lang.String> failureMessages;
 
   /**
@@ -104,7 +106,7 @@
    * @param paymentStatus The new value for paymentStatus
    * @param failureMessages The new value for failureMessages
    */
-  public PaymentResponseAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String paymentId, java.lang.String customerId, java.lang.String orderId, java.math.BigDecimal price, java.time.Instant createdAt, PaymentStatus paymentStatus, java.util.List<java.lang.String> failureMessages) {
+  public PaymentResponseAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String paymentId, java.lang.String customerId, java.lang.String orderId, java.math.BigDecimal price, java.time.Instant createdAt, com.online.medicine.application.kafka.order.avro.model.PaymentStatus paymentStatus, java.util.List<java.lang.String> failureMessages) {
     this.id = id;
     this.sagaId = sagaId;
     this.paymentId = paymentId;
@@ -164,7 +166,7 @@
     case 4: orderId = value$ != null ? value$.toString() : null; break;
     case 5: price = (java.math.BigDecimal)value$; break;
     case 6: createdAt = (java.time.Instant)value$; break;
-    case 7: paymentStatus = (PaymentStatus)value$; break;
+    case 7: paymentStatus = (com.online.medicine.application.kafka.order.avro.model.PaymentStatus)value$; break;
     case 8: failureMessages = (java.util.List<java.lang.String>)value$; break;
     default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
     }
@@ -293,7 +295,7 @@
    * Gets the value of the 'paymentStatus' field.
    * @return The value of the 'paymentStatus' field.
    */
-  public PaymentStatus getPaymentStatus() {
+  public com.online.medicine.application.kafka.order.avro.model.PaymentStatus getPaymentStatus() {
     return paymentStatus;
   }
 
@@ -302,7 +304,7 @@
    * Sets the value of the 'paymentStatus' field.
    * @param value the value to set.
    */
-  public void setPaymentStatus(PaymentStatus value) {
+  public void setPaymentStatus(com.online.medicine.application.kafka.order.avro.model.PaymentStatus value) {
     this.paymentStatus = value;
   }
 
@@ -327,8 +329,8 @@
    * Creates a new PaymentResponseAvroModel RecordBuilder.
    * @return A new PaymentResponseAvroModel RecordBuilder
    */
-  public static PaymentResponseAvroModel.Builder newBuilder() {
-    return new PaymentResponseAvroModel.Builder();
+  public static com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder newBuilder() {
+    return new com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder();
   }
 
   /**
@@ -336,11 +338,11 @@
    * @param other The existing builder to copy.
    * @return A new PaymentResponseAvroModel RecordBuilder
    */
-  public static PaymentResponseAvroModel.Builder newBuilder(PaymentResponseAvroModel.Builder other) {
+  public static com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder other) {
     if (other == null) {
-      return new PaymentResponseAvroModel.Builder();
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder();
     } else {
-      return new PaymentResponseAvroModel.Builder(other);
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder(other);
     }
   }
 
@@ -349,11 +351,11 @@
    * @param other The existing instance to copy.
    * @return A new PaymentResponseAvroModel RecordBuilder
    */
-  public static PaymentResponseAvroModel.Builder newBuilder(PaymentResponseAvroModel other) {
+  public static com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel other) {
     if (other == null) {
-      return new PaymentResponseAvroModel.Builder();
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder();
     } else {
-      return new PaymentResponseAvroModel.Builder(other);
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder(other);
     }
   }
 
@@ -371,7 +373,7 @@
     private java.lang.String orderId;
     private java.math.BigDecimal price;
     private java.time.Instant createdAt;
-    private PaymentStatus paymentStatus;
+    private com.online.medicine.application.kafka.order.avro.model.PaymentStatus paymentStatus;
     private java.util.List<java.lang.String> failureMessages;
 
     /** Creates a new Builder */
@@ -383,7 +385,7 @@
      * Creates a Builder by copying an existing Builder.
      * @param other The existing Builder to copy.
      */
-    private Builder(PaymentResponseAvroModel.Builder other) {
+    private Builder(com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder other) {
       super(other);
       if (isValidValue(fields()[0], other.id)) {
         this.id = data().deepCopy(fields()[0].schema(), other.id);
@@ -427,7 +429,7 @@
      * Creates a Builder by copying an existing PaymentResponseAvroModel instance
      * @param other The existing instance to copy.
      */
-    private Builder(PaymentResponseAvroModel other) {
+    private Builder(com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel other) {
       super(SCHEMA$, MODEL$);
       if (isValidValue(fields()[0], other.id)) {
         this.id = data().deepCopy(fields()[0].schema(), other.id);
@@ -481,7 +483,7 @@
       * @param value The value of 'id'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setId(java.lang.String value) {
       validate(fields()[0], value);
       this.id = value;
       fieldSetFlags()[0] = true;
@@ -501,7 +503,7 @@
       * Clears the value of the 'id' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearId() {
       id = null;
       fieldSetFlags()[0] = false;
       return this;
@@ -521,7 +523,7 @@
       * @param value The value of 'sagaId'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setSagaId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setSagaId(java.lang.String value) {
       validate(fields()[1], value);
       this.sagaId = value;
       fieldSetFlags()[1] = true;
@@ -541,7 +543,7 @@
       * Clears the value of the 'sagaId' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearSagaId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearSagaId() {
       sagaId = null;
       fieldSetFlags()[1] = false;
       return this;
@@ -561,7 +563,7 @@
       * @param value The value of 'paymentId'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setPaymentId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setPaymentId(java.lang.String value) {
       validate(fields()[2], value);
       this.paymentId = value;
       fieldSetFlags()[2] = true;
@@ -581,7 +583,7 @@
       * Clears the value of the 'paymentId' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearPaymentId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearPaymentId() {
       paymentId = null;
       fieldSetFlags()[2] = false;
       return this;
@@ -601,7 +603,7 @@
       * @param value The value of 'customerId'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setCustomerId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setCustomerId(java.lang.String value) {
       validate(fields()[3], value);
       this.customerId = value;
       fieldSetFlags()[3] = true;
@@ -621,7 +623,7 @@
       * Clears the value of the 'customerId' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearCustomerId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearCustomerId() {
       customerId = null;
       fieldSetFlags()[3] = false;
       return this;
@@ -641,7 +643,7 @@
       * @param value The value of 'orderId'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setOrderId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setOrderId(java.lang.String value) {
       validate(fields()[4], value);
       this.orderId = value;
       fieldSetFlags()[4] = true;
@@ -661,7 +663,7 @@
       * Clears the value of the 'orderId' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearOrderId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearOrderId() {
       orderId = null;
       fieldSetFlags()[4] = false;
       return this;
@@ -681,7 +683,7 @@
       * @param value The value of 'price'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setPrice(java.math.BigDecimal value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setPrice(java.math.BigDecimal value) {
       validate(fields()[5], value);
       this.price = value;
       fieldSetFlags()[5] = true;
@@ -701,7 +703,7 @@
       * Clears the value of the 'price' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearPrice() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearPrice() {
       price = null;
       fieldSetFlags()[5] = false;
       return this;
@@ -721,7 +723,7 @@
       * @param value The value of 'createdAt'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setCreatedAt(java.time.Instant value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setCreatedAt(java.time.Instant value) {
       validate(fields()[6], value);
       this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
       fieldSetFlags()[6] = true;
@@ -741,7 +743,7 @@
       * Clears the value of the 'createdAt' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearCreatedAt() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearCreatedAt() {
       fieldSetFlags()[6] = false;
       return this;
     }
@@ -750,7 +752,7 @@
       * Gets the value of the 'paymentStatus' field.
       * @return The value.
       */
-    public PaymentStatus getPaymentStatus() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentStatus getPaymentStatus() {
       return paymentStatus;
     }
 
@@ -760,7 +762,7 @@
       * @param value The value of 'paymentStatus'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setPaymentStatus(PaymentStatus value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setPaymentStatus(com.online.medicine.application.kafka.order.avro.model.PaymentStatus value) {
       validate(fields()[7], value);
       this.paymentStatus = value;
       fieldSetFlags()[7] = true;
@@ -780,7 +782,7 @@
       * Clears the value of the 'paymentStatus' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearPaymentStatus() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearPaymentStatus() {
       paymentStatus = null;
       fieldSetFlags()[7] = false;
       return this;
@@ -800,7 +802,7 @@
       * @param value The value of 'failureMessages'.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder setFailureMessages(java.util.List<java.lang.String> value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder setFailureMessages(java.util.List<java.lang.String> value) {
       validate(fields()[8], value);
       this.failureMessages = value;
       fieldSetFlags()[8] = true;
@@ -820,7 +822,7 @@
       * Clears the value of the 'failureMessages' field.
       * @return This builder.
       */
-    public PaymentResponseAvroModel.Builder clearFailureMessages() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel.Builder clearFailureMessages() {
       failureMessages = null;
       fieldSetFlags()[8] = false;
       return this;
@@ -838,7 +840,7 @@
         record.orderId = fieldSetFlags()[4] ? this.orderId : (java.lang.String) defaultValue(fields()[4]);
         record.price = fieldSetFlags()[5] ? this.price : (java.math.BigDecimal) defaultValue(fields()[5]);
         record.createdAt = fieldSetFlags()[6] ? this.createdAt : (java.time.Instant) defaultValue(fields()[6]);
-        record.paymentStatus = fieldSetFlags()[7] ? this.paymentStatus : (PaymentStatus) defaultValue(fields()[7]);
+        record.paymentStatus = fieldSetFlags()[7] ? this.paymentStatus : (com.online.medicine.application.kafka.order.avro.model.PaymentStatus) defaultValue(fields()[7]);
         record.failureMessages = fieldSetFlags()[8] ? this.failureMessages : (java.util.List<java.lang.String>) defaultValue(fields()[8]);
         return record;
       } catch (org.apache.avro.AvroMissingFieldException e) {
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/Remedy.java
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/Remedy.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/Remedy.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/Remedy.java	
+++ /dev/null	
@@ -1,390 +0,0 @@
-/**
- * Autogenerated by Avro
- *
- * DO NOT EDIT DIRECTLY
- */
-package com.online.medicine.application.kafka.order.avro.model;
-
-import org.apache.avro.specific.SpecificData;
-import org.apache.avro.message.BinaryMessageEncoder;
-import org.apache.avro.message.BinaryMessageDecoder;
-import org.apache.avro.message.SchemaStore;
-
-@org.apache.avro.specific.AvroGenerated
-public class Remedy extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
-  private static final long serialVersionUID = -6511580554663840009L;
-
-
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Product\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"logicalType\":\"uuid\"},{\"name\":\"quantity\",\"type\":\"int\"}]}");
-  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
-
-  private static final SpecificData MODEL$ = new SpecificData();
-
-  private static final BinaryMessageEncoder<Remedy> ENCODER =
-      new BinaryMessageEncoder<Remedy>(MODEL$, SCHEMA$);
-
-  private static final BinaryMessageDecoder<Remedy> DECODER =
-      new BinaryMessageDecoder<Remedy>(MODEL$, SCHEMA$);
-
-  /**
-   * Return the BinaryMessageEncoder instance used by this class.
-   * @return the message encoder used by this class
-   */
-  public static BinaryMessageEncoder<Remedy> getEncoder() {
-    return ENCODER;
-  }
-
-  /**
-   * Return the BinaryMessageDecoder instance used by this class.
-   * @return the message decoder used by this class
-   */
-  public static BinaryMessageDecoder<Remedy> getDecoder() {
-    return DECODER;
-  }
-
-  /**
-   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
-   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
-   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
-   */
-  public static BinaryMessageDecoder<Remedy> createDecoder(SchemaStore resolver) {
-    return new BinaryMessageDecoder<Remedy>(MODEL$, SCHEMA$, resolver);
-  }
-
-  /**
-   * Serializes this Product to a ByteBuffer.
-   * @return a buffer holding the serialized data for this instance
-   * @throws java.io.IOException if this instance could not be serialized
-   */
-  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
-    return ENCODER.encode(this);
-  }
-
-  /**
-   * Deserializes a Product from a ByteBuffer.
-   * @param b a byte buffer holding serialized data for an instance of this class
-   * @return a Product instance decoded from the given buffer
-   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
-   */
-  public static Remedy fromByteBuffer(
-      java.nio.ByteBuffer b) throws java.io.IOException {
-    return DECODER.decode(b);
-  }
-
-  private java.lang.String id;
-  private int quantity;
-
-  /**
-   * Default constructor.  Note that this does not initialize fields
-   * to their default values from the schema.  If that is desired then
-   * one should use <code>newBuilder()</code>.
-   */
-  public Remedy() {}
-
-  /**
-   * All-args constructor.
-   * @param id The new value for id
-   * @param quantity The new value for quantity
-   */
-  public Remedy(java.lang.String id, java.lang.Integer quantity) {
-    this.id = id;
-    this.quantity = quantity;
-  }
-
-  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
-  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
-  // Used by DatumWriter.  Applications should not call.
-  public java.lang.Object get(int field$) {
-    switch (field$) {
-    case 0: return id;
-    case 1: return quantity;
-    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
-    }
-  }
-
-  // Used by DatumReader.  Applications should not call.
-  @SuppressWarnings(value="unchecked")
-  public void put(int field$, java.lang.Object value$) {
-    switch (field$) {
-    case 0: id = value$ != null ? value$.toString() : null; break;
-    case 1: quantity = (java.lang.Integer)value$; break;
-    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
-    }
-  }
-
-  /**
-   * Gets the value of the 'id' field.
-   * @return The value of the 'id' field.
-   */
-  public java.lang.String getId() {
-    return id;
-  }
-
-
-  /**
-   * Sets the value of the 'id' field.
-   * @param value the value to set.
-   */
-  public void setId(java.lang.String value) {
-    this.id = value;
-  }
-
-  /**
-   * Gets the value of the 'quantity' field.
-   * @return The value of the 'quantity' field.
-   */
-  public int getQuantity() {
-    return quantity;
-  }
-
-
-  /**
-   * Sets the value of the 'quantity' field.
-   * @param value the value to set.
-   */
-  public void setQuantity(int value) {
-    this.quantity = value;
-  }
-
-  /**
-   * Creates a new Product RecordBuilder.
-   * @return A new Product RecordBuilder
-   */
-  public static Remedy.Builder newBuilder() {
-    return new Remedy.Builder();
-  }
-
-  /**
-   * Creates a new Product RecordBuilder by copying an existing Builder.
-   * @param other The existing builder to copy.
-   * @return A new Product RecordBuilder
-   */
-  public static Remedy.Builder newBuilder(Remedy.Builder other) {
-    if (other == null) {
-      return new Remedy.Builder();
-    } else {
-      return new Remedy.Builder(other);
-    }
-  }
-
-  /**
-   * Creates a new Product RecordBuilder by copying an existing Product instance.
-   * @param other The existing instance to copy.
-   * @return A new Product RecordBuilder
-   */
-  public static Remedy.Builder newBuilder(Remedy other) {
-    if (other == null) {
-      return new Remedy.Builder();
-    } else {
-      return new Remedy.Builder(other);
-    }
-  }
-
-  /**
-   * RecordBuilder for Product instances.
-   */
-  @org.apache.avro.specific.AvroGenerated
-  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Remedy>
-    implements org.apache.avro.data.RecordBuilder<Remedy> {
-
-    private java.lang.String id;
-    private int quantity;
-
-    /** Creates a new Builder */
-    private Builder() {
-      super(SCHEMA$, MODEL$);
-    }
-
-    /**
-     * Creates a Builder by copying an existing Builder.
-     * @param other The existing Builder to copy.
-     */
-    private Builder(Remedy.Builder other) {
-      super(other);
-      if (isValidValue(fields()[0], other.id)) {
-        this.id = data().deepCopy(fields()[0].schema(), other.id);
-        fieldSetFlags()[0] = other.fieldSetFlags()[0];
-      }
-      if (isValidValue(fields()[1], other.quantity)) {
-        this.quantity = data().deepCopy(fields()[1].schema(), other.quantity);
-        fieldSetFlags()[1] = other.fieldSetFlags()[1];
-      }
-    }
-
-    /**
-     * Creates a Builder by copying an existing Product instance
-     * @param other The existing instance to copy.
-     */
-    private Builder(Remedy other) {
-      super(SCHEMA$, MODEL$);
-      if (isValidValue(fields()[0], other.id)) {
-        this.id = data().deepCopy(fields()[0].schema(), other.id);
-        fieldSetFlags()[0] = true;
-      }
-      if (isValidValue(fields()[1], other.quantity)) {
-        this.quantity = data().deepCopy(fields()[1].schema(), other.quantity);
-        fieldSetFlags()[1] = true;
-      }
-    }
-
-    /**
-      * Gets the value of the 'id' field.
-      * @return The value.
-      */
-    public java.lang.String getId() {
-      return id;
-    }
-
-
-    /**
-      * Sets the value of the 'id' field.
-      * @param value The value of 'id'.
-      * @return This builder.
-      */
-    public Remedy.Builder setId(java.lang.String value) {
-      validate(fields()[0], value);
-      this.id = value;
-      fieldSetFlags()[0] = true;
-      return this;
-    }
-
-    /**
-      * Checks whether the 'id' field has been set.
-      * @return True if the 'id' field has been set, false otherwise.
-      */
-    public boolean hasId() {
-      return fieldSetFlags()[0];
-    }
-
-
-    /**
-      * Clears the value of the 'id' field.
-      * @return This builder.
-      */
-    public Remedy.Builder clearId() {
-      id = null;
-      fieldSetFlags()[0] = false;
-      return this;
-    }
-
-    /**
-      * Gets the value of the 'quantity' field.
-      * @return The value.
-      */
-    public int getQuantity() {
-      return quantity;
-    }
-
-
-    /**
-      * Sets the value of the 'quantity' field.
-      * @param value The value of 'quantity'.
-      * @return This builder.
-      */
-    public Remedy.Builder setQuantity(int value) {
-      validate(fields()[1], value);
-      this.quantity = value;
-      fieldSetFlags()[1] = true;
-      return this;
-    }
-
-    /**
-      * Checks whether the 'quantity' field has been set.
-      * @return True if the 'quantity' field has been set, false otherwise.
-      */
-    public boolean hasQuantity() {
-      return fieldSetFlags()[1];
-    }
-
-
-    /**
-      * Clears the value of the 'quantity' field.
-      * @return This builder.
-      */
-    public Remedy.Builder clearQuantity() {
-      fieldSetFlags()[1] = false;
-      return this;
-    }
-
-    @Override
-    @SuppressWarnings("unchecked")
-    public Remedy build() {
-      try {
-        Remedy record = new Remedy();
-        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
-        record.quantity = fieldSetFlags()[1] ? this.quantity : (java.lang.Integer) defaultValue(fields()[1]);
-        return record;
-      } catch (org.apache.avro.AvroMissingFieldException e) {
-        throw e;
-      } catch (java.lang.Exception e) {
-        throw new org.apache.avro.AvroRuntimeException(e);
-      }
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  private static final org.apache.avro.io.DatumWriter<Remedy>
-    WRITER$ = (org.apache.avro.io.DatumWriter<Remedy>)MODEL$.createDatumWriter(SCHEMA$);
-
-  @Override public void writeExternal(java.io.ObjectOutput out)
-    throws java.io.IOException {
-    WRITER$.write(this, SpecificData.getEncoder(out));
-  }
-
-  @SuppressWarnings("unchecked")
-  private static final org.apache.avro.io.DatumReader<Remedy>
-    READER$ = (org.apache.avro.io.DatumReader<Remedy>)MODEL$.createDatumReader(SCHEMA$);
-
-  @Override public void readExternal(java.io.ObjectInput in)
-    throws java.io.IOException {
-    READER$.read(this, SpecificData.getDecoder(in));
-  }
-
-  @Override protected boolean hasCustomCoders() { return true; }
-
-  @Override public void customEncode(org.apache.avro.io.Encoder out)
-    throws java.io.IOException
-  {
-    out.writeString(this.id);
-
-    out.writeInt(this.quantity);
-
-  }
-
-  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
-    throws java.io.IOException
-  {
-    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
-    if (fieldOrder == null) {
-      this.id = in.readString();
-
-      this.quantity = in.readInt();
-
-    } else {
-      for (int i = 0; i < 2; i++) {
-        switch (fieldOrder[i].pos()) {
-        case 0:
-          this.id = in.readString();
-          break;
-
-        case 1:
-          this.quantity = in.readInt();
-          break;
-
-        default:
-          throw new java.io.IOException("Corrupt ResolvingDecoder.");
-        }
-      }
-    }
-  }
-}
-
-
-
-
-
-
-
-
-
-
Index: order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/order/mapper/OrderDataAccessMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.dataaccess.order.mapper;\r\n\r\nimport com.online.medicine.application.order.service.dataaccess.order.entity.OrderAddressEntity;\r\nimport com.online.medicine.application.order.service.dataaccess.order.entity.OrderEntity;\r\nimport com.online.medicine.application.order.service.dataaccess.order.entity.OrderItemEntity;\r\nimport com.online.medicine.application.order.service.domain.valueobject.*;\r\nimport com.online.medicine.domain.order.service.domain.entity.Order;\r\nimport com.online.medicine.domain.order.service.domain.entity.OrderItem;\r\nimport com.online.medicine.domain.order.service.domain.entity.Remedy;\r\nimport com.online.medicine.domain.order.service.domain.valueobject.OrderItemId;\r\nimport com.online.medicine.domain.order.service.domain.valueobject.StreetAddress;\r\nimport com.online.medicine.domain.order.service.domain.valueobject.TrackingId;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static com.online.medicine.domain.order.service.domain.entity.Order.FAILURE_MESSAGE_DELIMITER;\r\n\r\n@Component\r\npublic class OrderDataAccessMapper {\r\n    public OrderEntity orderToOrderEntity(Order order){\r\n        OrderEntity orderEntity=OrderEntity.builder()\r\n                .id(order.getId().getValue())\r\n                .customerId(order.getCustomerId().getValue())\r\n                .pharmacyId(order.getPharmacyId().getValue())\r\n                .trackingId(order.getTrackingId().getValue())\r\n                .address(deliveryAddressToAddressEntity(order.getDeliveryAddress()))\r\n                .price(order.getPrice().getAmount())\r\n                .items(orderItemsToOrderItemEntities(order.getItems()))\r\n                .status(order.getOrderStatus())\r\n                .failureMessages(order.getFailureMessages()!=null ?\r\n                String.join(FAILURE_MESSAGE_DELIMITER, order.getFailureMessages()):\"\")\r\n                .build();\r\n        orderEntity.getAddress().setOrder(orderEntity);\r\n        orderEntity.getItems().forEach(orderItemEntity -> orderItemEntity.setOrder(orderEntity));\r\n     return orderEntity;\r\n    }\r\n    public Order orderEntityToOrder(OrderEntity orderEntity){\r\n        return Order.builder()\r\n               .orderId(new OrderId(orderEntity.getId()))\r\n               .customerId(new CustomerId(orderEntity.getCustomerId()))\r\n               .pharmacyId(new PharmacyId(orderEntity.getPharmacyId()))\r\n\r\n                        .price(new Money(orderEntity.getPrice()))\r\n                        .items(orderItemEntitiesToOrderItems(orderEntity.getItems()))\r\n                        .trackingId(new TrackingId(orderEntity.getTrackingId()))\r\n                        .orderStatus(orderEntity.getStatus())\r\n                        .failureMessages(orderEntity.getFailureMessages().isEmpty() ? new ArrayList<>() :\r\n                                new ArrayList<>(Arrays.asList(orderEntity.getFailureMessages()\r\n                                        .split(FAILURE_MESSAGE_DELIMITER))))\r\n                        .build();\r\n    }\r\n    private List<OrderItem> orderItemEntitiesToOrderItems(List<OrderItemEntity> items) {\r\n        return items.stream()\r\n                .map(orderItemEntity -> OrderItem.builder()\r\n                        .orderItemId(new OrderItemId(orderItemEntity.getId()))\r\n                        .remedy(new Remedy(new RemedyId(orderItemEntity.getRemedyId())))\r\n                        .price(new Money(orderItemEntity.getPrice()))\r\n                        .quantity(orderItemEntity.getQuantity())\r\n                        .subTotal(new Money(orderItemEntity.getSubTotal()))\r\n                        .build())\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    private StreetAddress addressEntityToDeliveryAddress(OrderAddressEntity address) {\r\n        return new StreetAddress(\r\n                address.getId(),\r\n                address.getStreet(),\r\n                address.getPostalCode(),\r\n                address.getCity()\r\n        );\r\n    }\r\n\r\n    private List<OrderItemEntity> orderItemsToOrderItemEntities(List<OrderItem> items) {\r\n        return items.stream()\r\n                .map(orderItem -> OrderItemEntity.builder()\r\n                        .id(orderItem.getId().getValue())\r\n                        .remedyId(orderItem.getRemedy().getId().getValue())\r\n                        .price(orderItem.getPrice().getAmount())\r\n                        .quantity(orderItem.getQuantity())\r\n                        .subTotal(orderItem.getSubTotal().getAmount())\r\n                        .build())\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    private OrderAddressEntity deliveryAddressToAddressEntity(StreetAddress deliveryAddress) {\r\n        return OrderAddressEntity.builder()\r\n               .id(deliveryAddress.getId())\r\n               .street(deliveryAddress.getStreet())\r\n               .postalCode(deliveryAddress.getPostalCode())\r\n               .city(deliveryAddress.getCity())\r\n               .build();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/order/mapper/OrderDataAccessMapper.java b/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/order/mapper/OrderDataAccessMapper.java
--- a/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/order/mapper/OrderDataAccessMapper.java	
+++ b/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/order/mapper/OrderDataAccessMapper.java	
@@ -6,7 +6,7 @@
 import com.online.medicine.application.order.service.domain.valueobject.*;
 import com.online.medicine.domain.order.service.domain.entity.Order;
 import com.online.medicine.domain.order.service.domain.entity.OrderItem;
-import com.online.medicine.domain.order.service.domain.entity.Remedy;
+import com.online.medicine.domain.order.service.domain.entity.Medicine;
 import com.online.medicine.domain.order.service.domain.valueobject.OrderItemId;
 import com.online.medicine.domain.order.service.domain.valueobject.StreetAddress;
 import com.online.medicine.domain.order.service.domain.valueobject.TrackingId;
@@ -57,7 +57,7 @@
         return items.stream()
                 .map(orderItemEntity -> OrderItem.builder()
                         .orderItemId(new OrderItemId(orderItemEntity.getId()))
-                        .remedy(new Remedy(new RemedyId(orderItemEntity.getRemedyId())))
+                        .remedy(new Medicine(new MedicineId(orderItemEntity.getRemedyId())))
                         .price(new Money(orderItemEntity.getPrice()))
                         .quantity(orderItemEntity.getQuantity())
                         .subTotal(new Money(orderItemEntity.getSubTotal()))
Index: infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConsumerConfigData.java
===================================================================
diff --git a/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConsumerConfigData.java b/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConsumerConfigData.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConsumerConfigData.java	
+++ /dev/null	
@@ -1,28 +0,0 @@
-package com.online.medicine.kafka.config.data;
-
-import lombok.Data;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.stereotype.Component;
-
-@Data
-@Configuration
-@ConfigurationProperties(prefix = "kafka-consumer-config")
-public class KafkaConsumerConfigData {
-    private String keyDeserializer;
-    private String valueDeserializer;
-    private String autoOffsetReset;
-    private String specificAvroReaderKey;
-    private String specificAvroReader;
-    private Boolean batchListener;
-    private Boolean autoStartup;
-    private Integer concurrencyLevel;
-    private Integer sessionTimeoutMs;
-    private Integer heartbeatIntervalMs;
-    private Integer maxPollIntervalMs;
-    private Long pollTimeoutMs;
-    private Integer maxPollRecords;
-    private Integer maxPartitionFetchBytesDefault;
-    private Integer maxPartitionFetchBytesBoostFactor;
-}
-
Index: infrastructure/kafka/kafka-consumer/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n\r\n    <artifactId>kafka-consumer</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>kafka-config-data</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.kafka</groupId>\r\n            <artifactId>spring-kafka</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.avro</groupId>\r\n            <artifactId>avro</artifactId>\r\n            <version>1.11.0</version>\r\n\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.avro</groupId>\r\n            <artifactId>avro</artifactId>\r\n            <version>1.12.0</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.28</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-consumer/pom.xml b/infrastructure/kafka/kafka-consumer/pom.xml
--- a/infrastructure/kafka/kafka-consumer/pom.xml	
+++ b/infrastructure/kafka/kafka-consumer/pom.xml	
@@ -2,20 +2,15 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
     <parent>
+        <artifactId>kafka</artifactId>
         <groupId>com.online.medicine.application</groupId>
-        <artifactId>kafka</artifactId>
         <version>1.0-SNAPSHOT</version>
     </parent>
+    <modelVersion>4.0.0</modelVersion>
 
     <artifactId>kafka-consumer</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
     <dependencies>
         <dependency>
             <groupId>com.online.medicine.application</groupId>
@@ -28,20 +23,6 @@
         <dependency>
             <groupId>org.apache.avro</groupId>
             <artifactId>avro</artifactId>
-            <version>1.11.0</version>
-
-        </dependency>
-        <dependency>
-            <groupId>org.apache.avro</groupId>
-            <artifactId>avro</artifactId>
-            <version>1.12.0</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <version>1.18.28</version>
-            <scope>compile</scope>
         </dependency>
     </dependencies>
 
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent><groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.6.7</version>\r\n    </parent>\r\n\r\n    <groupId>com.online.medicine.application</groupId>\r\n    <artifactId>online-medicine-application</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n  <packaging>pom</packaging>\r\n    <modules>\r\n        <module>order-service</module>\r\n        <module>common</module>\r\n        <module>infrastructure</module>\r\n    </modules>\r\n    <properties>\r\n     <maven.compiler.source>17</maven.compiler.source>\r\n       <maven.compiler.target>17</maven.compiler.target>\r\n<!--        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->\r\n        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>\r\n        <mockito.version>4.3.1</mockito.version>\r\n        <spring-kafka.version>2.8.2</spring-kafka.version>\r\n        <kafka-avro-serializer.version>7.0.1</kafka-avro-serializer.version>\r\n        <avro.version>1.11.0</avro.version>\r\n    </properties>\r\n    <dependencyManagement>\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.mockito</groupId>\r\n        <artifactId>mockito-core</artifactId>\r\n        <version>${mockito.version}</version>\r\n        <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>order-domain-core</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>order-application-service</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>order-dataaccess</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>order-messaging</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>common-domain</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.projectlombok</groupId>\r\n        <artifactId>lombok</artifactId>\r\n        <scope>provided</scope>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-logging</artifactId>\r\n        <scope>provided</scope>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka-producer</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka-consumer</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>common-application</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka-model</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka-config-data</artifactId>\r\n        <version>${project.version}</version>\r\n    </dependency>\r\n\r\n</dependencies>\r\n\r\n    </dependencyManagement>\r\n    <dependencies>\r\n\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin><groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.13.0</version>\r\n                <configuration><release>17</release></configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -16,6 +16,7 @@
         <module>order-service</module>
         <module>common</module>
         <module>infrastructure</module>
+        <module>customer-service</module>
     </modules>
     <properties>
      <maven.compiler.source>17</maven.compiler.source>
Index: infrastructure/kafka/kafka-model/src/main/resources/avro/pharmacy_approval_response.avsc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"namespace\": \"com.food.ordering.system.kafka.order.avro.model\",\r\n    \"type\": \"record\",\r\n    \"name\": \"RestaurantApprovalResponseAvroModel\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"id\",\r\n            \"type\": {\r\n                \"type\": \"string\",\r\n                \"logicalType\": \"uuid\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"sagaId\",\r\n            \"type\": {\r\n                \"type\": \"string\",\r\n                \"logicalType\": \"uuid\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"restaurantId\",\r\n            \"type\": {\r\n                \"type\": \"string\",\r\n                \"logicalType\": \"uuid\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"orderId\",\r\n            \"type\": {\r\n                \"type\": \"string\",\r\n                \"logicalType\": \"uuid\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"createdAt\",\r\n            \"type\": {\r\n                \"type\": \"long\",\r\n                \"logicalType\": \"timestamp-millis\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"orderApprovalStatus\",\r\n            \"type\": {\r\n                  \"type\": \"enum\",\r\n                  \"name\": \"OrderApprovalStatus\",\r\n                  \"symbols\": [\"APPROVED\", \"REJECTED\"]\r\n               }\r\n        },\r\n        {\r\n            \"name\": \"failureMessages\",\r\n            \"type\": {\r\n                \"type\": \"array\",\r\n                \"items\":{\r\n                  \"type\":\"string\"\r\n               }\r\n            }\r\n        }\r\n    ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/resources/avro/pharmacy_approval_response.avsc b/infrastructure/kafka/kafka-model/src/main/resources/avro/pharmacy_approval_response.avsc
--- a/infrastructure/kafka/kafka-model/src/main/resources/avro/pharmacy_approval_response.avsc	
+++ b/infrastructure/kafka/kafka-model/src/main/resources/avro/pharmacy_approval_response.avsc	
@@ -1,7 +1,7 @@
 {
-    "namespace": "com.food.ordering.system.kafka.order.avro.model",
+    "namespace": "com.online.medicine.application.kafka.order.avro.model",
     "type": "record",
-    "name": "RestaurantApprovalResponseAvroModel",
+    "name": "PharmacyApprovalResponseAvroModel",
     "fields": [
         {
             "name": "id",
@@ -18,7 +18,7 @@
             }
         },
         {
-            "name": "restaurantId",
+            "name": "pharmacyId",
             "type": {
                 "type": "string",
                 "logicalType": "uuid"
Index: order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PharmacyApprovalResponseKafkaListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.messaging.listener.kafka;\r\n\r\nimport com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus;\r\nimport com.online.medicine.application.kafka.order.avro.model.PaymentStatus;\r\nimport com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel;\r\nimport com.online.medicine.application.order.service.domain.ports.input.message.listener.pharmacyapproval.PharmacyApprovalResponseMessageListener;\r\nimport com.online.medicine.application.order.service.messaging.mapper.OrderMessagingDataMapper;\r\nimport com.online.medicine.kafka.consumer.KafkaConsumer;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.kafka.annotation.KafkaListener;\r\nimport org.springframework.kafka.support.KafkaHeaders;\r\nimport org.springframework.messaging.handler.annotation.Header;\r\nimport org.springframework.messaging.handler.annotation.Payload;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.List;\r\n\r\nimport static com.online.medicine.domain.order.service.domain.entity.Order.FAILURE_MESSAGE_DELIMITER;\r\n\r\n@Slf4j\r\n@Component\r\npublic class PharmacyApprovalResponseKafkaListener implements KafkaConsumer<PharmacyApprovalResponseAvroModel> {\r\n    private final PharmacyApprovalResponseMessageListener pharmacyResponseMessageListener;\r\n    private final OrderMessagingDataMapper orderMessagingDataMapper;\r\n\r\n    public PharmacyApprovalResponseKafkaListener(PharmacyApprovalResponseMessageListener pharmacyResponseMessageListener,\r\n                                                 OrderMessagingDataMapper orderMessagingDataMapper) {\r\n        this.pharmacyResponseMessageListener = pharmacyResponseMessageListener;\r\n        this.orderMessagingDataMapper = orderMessagingDataMapper;\r\n    }\r\n\r\n    @Override\r\n    @KafkaListener(id=\"${kafka-consumer-config.pharmacy-approval-consumer-group-id}\",\r\n    topics=\"${order-service.pharmacy-approval-response-topic-name}\")\r\n    public void receive(@Payload List<PharmacyApprovalResponseAvroModel> messages,\r\n                        @Header(KafkaHeaders.RECEIVED_MESSAGE_KEY) List<String> keys,\r\n                        @Header(KafkaHeaders.RECEIVED_PARTITION_ID)List<Integer> partitions,\r\n                        @Header(KafkaHeaders.OFFSET) List<Long> offsets) {\r\n        log.info(\"{} number of payment responses received with keys:{}, partitions:{} and offsets: {}\",\r\n                messages.size(),\r\n                keys,\r\n                partitions,\r\n                offsets);\r\n\r\n        messages.forEach(pharmacyApprovalResponseAvroModel ->  {\r\n            if (OrderApprovalStatus.APPROVED == pharmacyApprovalResponseAvroModel.getOrderApprovalStatus()) {\r\n                log.info(\"Processing successful payment for order id: {}\", pharmacyApprovalResponseAvroModel.getOrderId());\r\n                pharmacyResponseMessageListener.orderApproved(orderMessagingDataMapper\r\n                        .approvalResponseAvroModelToApprovalResponse(pharmacyApprovalResponseAvroModel));\r\n\r\n            }else if(OrderApprovalStatus.REJECTED==pharmacyApprovalResponseAvroModel.getOrderApprovalStatus()){\r\n                log.info(\"Processing unsuccessful payment for order id: {}\",\r\n                        pharmacyApprovalResponseAvroModel.getOrderId(),\r\n                        String.join(FAILURE_MESSAGE_DELIMITER, PharmacyApprovalResponseAvroModel.getFailureMessages()));\r\n                pharmacyResponseMessageListener.orderRejected(orderMessagingDataMapper\r\n                       .approvalResponseAvroModelToApprovalResponse(pharmacyApprovalResponseAvroModel));\r\n            }\r\n        });\r\n    }\r\n\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PharmacyApprovalResponseKafkaListener.java b/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PharmacyApprovalResponseKafkaListener.java
--- a/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PharmacyApprovalResponseKafkaListener.java	
+++ b/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PharmacyApprovalResponseKafkaListener.java	
@@ -1,11 +1,11 @@
 package com.online.medicine.application.order.service.messaging.listener.kafka;
 
+import com.online.medicine.application.kafka.consumer.KafkaConsumer;
 import com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus;
-import com.online.medicine.application.kafka.order.avro.model.PaymentStatus;
 import com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel;
 import com.online.medicine.application.order.service.domain.ports.input.message.listener.pharmacyapproval.PharmacyApprovalResponseMessageListener;
 import com.online.medicine.application.order.service.messaging.mapper.OrderMessagingDataMapper;
-import com.online.medicine.kafka.consumer.KafkaConsumer;
+
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.kafka.annotation.KafkaListener;
 import org.springframework.kafka.support.KafkaHeaders;
@@ -49,11 +49,10 @@
                         .approvalResponseAvroModelToApprovalResponse(pharmacyApprovalResponseAvroModel));
 
             }else if(OrderApprovalStatus.REJECTED==pharmacyApprovalResponseAvroModel.getOrderApprovalStatus()){
-                log.info("Processing unsuccessful payment for order id: {}",
+                log.info("Processing unsuccessful payment for order id: {}, failure messages: {}",
                         pharmacyApprovalResponseAvroModel.getOrderId(),
-                        String.join(FAILURE_MESSAGE_DELIMITER, PharmacyApprovalResponseAvroModel.getFailureMessages()));
-                pharmacyResponseMessageListener.orderRejected(orderMessagingDataMapper
-                       .approvalResponseAvroModelToApprovalResponse(pharmacyApprovalResponseAvroModel));
+                        String.join(FAILURE_MESSAGE_DELIMITER, pharmacyApprovalResponseAvroModel.getFailureMessages()));
+
             }
         });
     }
Index: infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/KafkaProducerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.kafka.producer;\r\n\r\nimport com.online.medicine.kafka.config.data.KafkaConfigData;\r\nimport com.online.medicine.kafka.config.data.KafkaProducerConfigData;\r\nimport org.apache.avro.specific.SpecificRecordBase;\r\nimport org.apache.kafka.clients.producer.ProducerConfig;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\r\nimport org.springframework.kafka.core.KafkaTemplate;\r\nimport org.springframework.kafka.core.ProducerFactory;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n@Configuration\r\npublic class KafkaProducerConfig <K extends Serializable, V extends SpecificRecordBase >{\r\n    private final KafkaConfigData kafkaConfigData;\r\n    private final KafkaProducerConfigData kafkaProducerConfigData;\r\n\r\n    public KafkaProducerConfig(KafkaConfigData kafkaConfigData, KafkaProducerConfigData kafkaProducerConfigData) {\r\n        this.kafkaConfigData = kafkaConfigData;\r\n\r\n        this.kafkaProducerConfigData = kafkaProducerConfigData;\r\n    }\r\n    @Bean\r\n    public Map<String, Object> producerConfig() {\r\n        Map<String, Object> props = new HashMap<>();\r\n        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaConfigData.getBootstrapServers());\r\n        props.put(kafkaConfigData.getSchemaRegistryUrlKey(), kafkaConfigData.getSchemaRegistryUrl());\r\n        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, kafkaProducerConfigData.getKeySerializerClass());\r\n        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, kafkaProducerConfigData.getValueSerializerClass());\r\n        props.put(ProducerConfig.BATCH_SIZE_CONFIG, kafkaProducerConfigData.getBatchSize() *\r\n                kafkaProducerConfigData.getBatchSizeBoostFactor());\r\n        props.put(ProducerConfig.LINGER_MS_CONFIG, kafkaProducerConfigData.getLingerMs());\r\n        props.put(ProducerConfig.COMPRESSION_TYPE_CONFIG, kafkaProducerConfigData.getCompressionType());\r\n        props.put(ProducerConfig.ACKS_CONFIG, kafkaProducerConfigData.getAcks());\r\n        props.put(ProducerConfig.REQUEST_TIMEOUT_MS_CONFIG, kafkaProducerConfigData.getRequestTimeoutMs());\r\n        props.put(ProducerConfig.RETRIES_CONFIG, kafkaProducerConfigData.getRetryCount());\r\n        return props;\r\n    }\r\n\r\n    @Bean\r\n    public ProducerFactory<K, V> producerFactory() {\r\n        return new DefaultKafkaProducerFactory<>(producerConfig());\r\n    }\r\n\r\n    @Bean\r\n    public KafkaTemplate<K, V> kafkaTemplate() {\r\n        return new KafkaTemplate<>(producerFactory());\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/KafkaProducerConfig.java b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/KafkaProducerConfig.java
--- a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/KafkaProducerConfig.java	
+++ b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/KafkaProducerConfig.java	
@@ -1,7 +1,7 @@
 package com.online.medicine.application.kafka.producer;
 
-import com.online.medicine.kafka.config.data.KafkaConfigData;
-import com.online.medicine.kafka.config.data.KafkaProducerConfigData;
+import com.online.medicine.application.kafka.config.data.KafkaConfigData;
+import com.online.medicine.application.kafka.config.data.KafkaProducerConfigData;
 import org.apache.avro.specific.SpecificRecordBase;
 import org.apache.kafka.clients.producer.ProducerConfig;
 import org.springframework.context.annotation.Bean;
@@ -15,15 +15,17 @@
 import java.util.Map;
 
 @Configuration
-public class KafkaProducerConfig <K extends Serializable, V extends SpecificRecordBase >{
+public class KafkaProducerConfig<K extends Serializable, V extends SpecificRecordBase> {
+
     private final KafkaConfigData kafkaConfigData;
     private final KafkaProducerConfigData kafkaProducerConfigData;
 
-    public KafkaProducerConfig(KafkaConfigData kafkaConfigData, KafkaProducerConfigData kafkaProducerConfigData) {
+    public KafkaProducerConfig(KafkaConfigData kafkaConfigData,
+                               KafkaProducerConfigData kafkaProducerConfigData) {
         this.kafkaConfigData = kafkaConfigData;
-
         this.kafkaProducerConfigData = kafkaProducerConfigData;
     }
+
     @Bean
     public Map<String, Object> producerConfig() {
         Map<String, Object> props = new HashMap<>();
@@ -51,5 +53,3 @@
         return new KafkaTemplate<>(producerFactory());
     }
 }
-
-
Index: infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConfigData.java
===================================================================
diff --git a/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConfigData.java b/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConfigData.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaConfigData.java	
+++ /dev/null	
@@ -1,20 +0,0 @@
-package com.online.medicine.kafka.config.data;
-
-import lombok.Data;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-import org.springframework.context.annotation.Configuration;
-
-
-@Data
-@Configuration
-@ConfigurationProperties(prefix = "kafka-caonfig")
-public class KafkaConfigData {
-    private String bootstrapServers;
-    private String schemaRegistryUrlKey;
-    private String schemaRegistryUrl;
-    private Integer numOfPartitions;
-    private Short replicationFactor;
-
-}
-
Index: order-service/order-container/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>order-service</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n\r\n    <artifactId>order-container</artifactId>\r\n\r\n    <properties>\r\n<!--        <maven.compiler.source>17</maven.compiler.source>-->\r\n<!--        <maven.compiler.target>17</maven.compiler.target>-->\r\n<!--        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>order-domain-core</artifactId>\r\n            <version>${project.version}</version>\r\n\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>order-application-service</artifactId>\r\n            <version>${project.version}</version>\r\n\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>order-application</artifactId>\r\n            <version>${project.version}</version>\r\n\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>order-dataaccess</artifactId>\r\n            <version>${project.version}</version>\r\n\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.online.medicine.application</groupId>\r\n            <artifactId>order-messaging</artifactId>\r\n            <version>${project.version}</version>\r\n\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-container/pom.xml b/order-service/order-container/pom.xml
--- a/order-service/order-container/pom.xml	
+++ b/order-service/order-container/pom.xml	
@@ -47,6 +47,13 @@
             <version>${project.version}</version>
 
         </dependency>
+
+        <dependency>
+            <groupId>com.online.medicine.application</groupId>
+            <artifactId>kafka-config-data</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+
     </dependencies>
 
 </project>
\ No newline at end of file
Index: order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/OrderDomainServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.domain.order.service.domain;\r\n\r\nimport com.online.medicine.domain.order.service.domain.entity.Pharmacy;\r\nimport com.online.medicine.domain.order.service.domain.entity.Remedy;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderCancelledEvent;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderCreatedEvent;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderPaidEvent;\r\nimport com.online.medicine.domain.order.service.domain.exception.OrderDomainException;\r\nimport com.online.medicine.domain.order.service.domain.entity.Order;\r\nimport lombok.extern.slf4j.Slf4j;\r\n\r\nimport java.time.OffsetDateTime;\r\nimport java.util.List;\r\n@Slf4j\r\npublic class OrderDomainServiceImpl implements OrderDomainService {\r\n\r\n    @Override\r\n    public OrderCreatedEvent validateAndInitiateOrder(Order order, Pharmacy pharmacy) {\r\n        validatePharmacy(pharmacy);\r\n        setOrderMedicineInformation(order, pharmacy);\r\n        order.validateOrder();\r\n        order.initializeOrder();\r\n        log.info(\"Order with id: {} is initiated,\", order.getId().getValue());\r\n        return new OrderCreatedEvent(order, OffsetDateTime.now());\r\n\r\n    }\r\n\r\n    private void setOrderMedicineInformation(Order order, Pharmacy pharmacy) {\r\n        order.getItems().forEach(orderItem -> pharmacy.getRemedies().forEach(pharmacyRemedy->{\r\n            Remedy currentRemedy=orderItem.getRemedy();\r\n            if (currentRemedy.equals(pharmacyRemedy)) {\r\n                currentRemedy.updateWithConfirmedNameAndPrice(pharmacyRemedy.getName(),\r\n                        pharmacyRemedy.getPrice());\r\n            }\r\n        }));\r\n    }\r\n\r\n    private void validatePharmacy(Pharmacy pharmacy) {\r\n        if (!pharmacy.isActive()) {\r\n            throw new OrderDomainException(\"Pharmacy is not active!\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public OrderPaidEvent payOrder(Order order) {\r\n        order.pay();\r\n        log.info(\"Order with id: {} is paid\", order.getId().getValue());\r\n        return new OrderPaidEvent(order, OffsetDateTime.now());\r\n    }\r\n\r\n    @Override\r\n    public void approveOrder(Order order) {\r\n        order.approve();\r\n        log.info(\"Order with id: {} is approved\", order.getId().getValue());\r\n    }\r\n\r\n    @Override\r\n    public OrderCancelledEvent cancelOrderPayment(Order order, List<String> failureMessages) {\r\n        order.initCancel(failureMessages);\r\n        log.info(\"Order payment is cancelling for order id  {}\", order.getId().getValue());\r\n        return new OrderCancelledEvent(order, OffsetDateTime.now());\r\n    }\r\n\r\n    @Override\r\n    public void cancelOrder(Order order, List<String> failureMessages) {\r\n        order.cancel(failureMessages);\r\n        log.info(\"Order with id: {} is cancelled\", order.getId().getValue());\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/OrderDomainServiceImpl.java b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/OrderDomainServiceImpl.java
--- a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/OrderDomainServiceImpl.java	
+++ b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/OrderDomainServiceImpl.java	
@@ -1,7 +1,7 @@
 package com.online.medicine.domain.order.service.domain;
 
 import com.online.medicine.domain.order.service.domain.entity.Pharmacy;
-import com.online.medicine.domain.order.service.domain.entity.Remedy;
+import com.online.medicine.domain.order.service.domain.entity.Medicine;
 import com.online.medicine.domain.order.service.domain.event.OrderCancelledEvent;
 import com.online.medicine.domain.order.service.domain.event.OrderCreatedEvent;
 import com.online.medicine.domain.order.service.domain.event.OrderPaidEvent;
@@ -27,9 +27,9 @@
 
     private void setOrderMedicineInformation(Order order, Pharmacy pharmacy) {
         order.getItems().forEach(orderItem -> pharmacy.getRemedies().forEach(pharmacyRemedy->{
-            Remedy currentRemedy=orderItem.getRemedy();
-            if (currentRemedy.equals(pharmacyRemedy)) {
-                currentRemedy.updateWithConfirmedNameAndPrice(pharmacyRemedy.getName(),
+            Medicine currentMedicine =orderItem.getRemedy();
+            if (currentMedicine.equals(pharmacyRemedy)) {
+                currentMedicine.updateWithConfirmedNameAndPrice(pharmacyRemedy.getName(),
                         pharmacyRemedy.getPrice());
             }
         }));
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalRequestAvroModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n\r\nimport org.apache.avro.specific.SpecificData;\r\nimport org.apache.avro.message.BinaryMessageEncoder;\r\nimport org.apache.avro.message.BinaryMessageDecoder;\r\nimport org.apache.avro.message.SchemaStore;\r\n\r\n@org.apache.avro.specific.AvroGenerated\r\npublic class PharmacyApprovalRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {\r\n  private static final long serialVersionUID = -3917361261016430486L;\r\n\r\n\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"RestaurantApprovalRequestAvroModel\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"sagaId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"restaurantId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"orderId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"restaurantOrderStatus\\\",\\\"type\\\":{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"RestaurantOrderStatus\\\",\\\"symbols\\\":[\\\"PAID\\\"]}},{\\\"name\\\":\\\"products\\\",\\\"type\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Product\\\",\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"},\\\"logicalType\\\":\\\"uuid\\\"},{\\\"name\\\":\\\"quantity\\\",\\\"type\\\":\\\"int\\\"}]}}},{\\\"name\\\":\\\"price\\\",\\\"type\\\":{\\\"type\\\":\\\"bytes\\\",\\\"logicalType\\\":\\\"decimal\\\",\\\"precision\\\":10,\\\"scale\\\":2}},{\\\"name\\\":\\\"createdAt\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"logicalType\\\":\\\"timestamp-millis\\\"}}]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n\r\n  private static final SpecificData MODEL$ = new SpecificData();\r\n  static {\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());\r\n  }\r\n\r\n  private static final BinaryMessageEncoder<PharmacyApprovalRequestAvroModel> ENCODER =\r\n      new BinaryMessageEncoder<PharmacyApprovalRequestAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  private static final BinaryMessageDecoder<PharmacyApprovalRequestAvroModel> DECODER =\r\n      new BinaryMessageDecoder<PharmacyApprovalRequestAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  /**\r\n   * Return the BinaryMessageEncoder instance used by this class.\r\n   * @return the message encoder used by this class\r\n   */\r\n  public static BinaryMessageEncoder<PharmacyApprovalRequestAvroModel> getEncoder() {\r\n    return ENCODER;\r\n  }\r\n\r\n  /**\r\n   * Return the BinaryMessageDecoder instance used by this class.\r\n   * @return the message decoder used by this class\r\n   */\r\n  public static BinaryMessageDecoder<PharmacyApprovalRequestAvroModel> getDecoder() {\r\n    return DECODER;\r\n  }\r\n\r\n  /**\r\n   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.\r\n   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint\r\n   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore\r\n   */\r\n  public static BinaryMessageDecoder<PharmacyApprovalRequestAvroModel> createDecoder(SchemaStore resolver) {\r\n    return new BinaryMessageDecoder<PharmacyApprovalRequestAvroModel>(MODEL$, SCHEMA$, resolver);\r\n  }\r\n\r\n  /**\r\n   * Serializes this PharmacyApprovalRequestAvroModel to a ByteBuffer.\r\n   * @return a buffer holding the serialized data for this instance\r\n   * @throws java.io.IOException if this instance could not be serialized\r\n   */\r\n  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {\r\n    return ENCODER.encode(this);\r\n  }\r\n\r\n  /**\r\n   * Deserializes a PharmacyApprovalRequestAvroModel from a ByteBuffer.\r\n   * @param b a byte buffer holding serialized data for an instance of this class\r\n   * @return a PharmacyApprovalRequestAvroModel instance decoded from the given buffer\r\n   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class\r\n   */\r\n  public static PharmacyApprovalRequestAvroModel fromByteBuffer(\r\n      java.nio.ByteBuffer b) throws java.io.IOException {\r\n    return DECODER.decode(b);\r\n  }\r\n\r\n  private java.lang.String id;\r\n  private java.lang.String sagaId;\r\n  private java.lang.String pharmacyId;\r\n  private java.lang.String orderId;\r\n  private PharmacyOrderStatus pharmacyOrderStatus;\r\n  private java.util.List<Remedy> remedies;\r\n  private java.math.BigDecimal price;\r\n  private java.time.Instant createdAt;\r\n\r\n  /**\r\n   * Default constructor.  Note that this does not initialize fields\r\n   * to their default values from the schema.  If that is desired then\r\n   * one should use <code>newBuilder()</code>.\r\n   */\r\n  public PharmacyApprovalRequestAvroModel() {}\r\n\r\n  /**\r\n   * All-args constructor.\r\n   * @param id The new value for id\r\n   * @param sagaId The new value for sagaId\r\n   * @param pharmacyId The new value for restaurantId\r\n   * @param orderId The new value for orderId\r\n   * @param pharmacyOrderStatus The new value for restaurantOrderStatus\r\n   * @param remedies The new value for products\r\n   * @param price The new value for price\r\n   * @param createdAt The new value for createdAt\r\n   */\r\n  public PharmacyApprovalRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String pharmacyId, java.lang.String orderId, PharmacyOrderStatus pharmacyOrderStatus, java.util.List<Remedy> remedies, java.math.BigDecimal price, java.time.Instant createdAt) {\r\n    this.id = id;\r\n    this.sagaId = sagaId;\r\n    this.pharmacyId=pharmacyId;\r\n    this.orderId = orderId;\r\n    this.pharmacyOrderStatus = pharmacyOrderStatus;\r\n    this.remedies = remedies;\r\n    this.price = price;\r\n    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n  }\r\n\r\n  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n  // Used by DatumWriter.  Applications should not call.\r\n  public java.lang.Object get(int field$) {\r\n    switch (field$) {\r\n    case 0: return id;\r\n    case 1: return sagaId;\r\n    case 2: return pharmacyId;\r\n    case 3: return orderId;\r\n    case 4: return pharmacyOrderStatus;\r\n    case 5: return remedies;\r\n    case 6: return price;\r\n    case 7: return createdAt;\r\n    default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  private static final org.apache.avro.Conversion<?>[] conversions =\r\n      new org.apache.avro.Conversion<?>[] {\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      new org.apache.avro.Conversions.DecimalConversion(),\r\n      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),\r\n      null\r\n  };\r\n\r\n  @Override\r\n  public org.apache.avro.Conversion<?> getConversion(int field) {\r\n    return conversions[field];\r\n  }\r\n\r\n  // Used by DatumReader.  Applications should not call.\r\n  @SuppressWarnings(value=\"unchecked\")\r\n  public void put(int field$, java.lang.Object value$) {\r\n    switch (field$) {\r\n    case 0: id = value$ != null ? value$.toString() : null; break;\r\n    case 1: sagaId = value$ != null ? value$.toString() : null; break;\r\n    case 2: pharmacyId = value$ != null ? value$.toString() : null; break;\r\n    case 3: orderId = value$ != null ? value$.toString() : null; break;\r\n    case 4: pharmacyOrderStatus = (PharmacyOrderStatus)value$; break;\r\n    case 5: remedies = (java.util.List<Remedy>)value$; break;\r\n    case 6: price = (java.math.BigDecimal)value$; break;\r\n    case 7: createdAt = (java.time.Instant)value$; break;\r\n    default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'id' field.\r\n   * @return The value of the 'id' field.\r\n   */\r\n  public java.lang.String getId() {\r\n    return id;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'id' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setId(java.lang.String value) {\r\n    this.id = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'sagaId' field.\r\n   * @return The value of the 'sagaId' field.\r\n   */\r\n  public java.lang.String getSagaId() {\r\n    return sagaId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'sagaId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setSagaId(java.lang.String value) {\r\n    this.sagaId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'restaurantId' field.\r\n   * @return The value of the 'restaurantId' field.\r\n   */\r\n  public java.lang.String getPharmacyId() {\r\n    return pharmacyId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'restaurantId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPharmacyId(java.lang.String value) {\r\n    this.pharmacyId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'orderId' field.\r\n   * @return The value of the 'orderId' field.\r\n   */\r\n  public java.lang.String getOrderId() {\r\n    return orderId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'orderId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setOrderId(java.lang.String value) {\r\n    this.orderId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'pharmacyOrderStatus' field.\r\n   * @return The value of the 'pharmacyOrderStatus' field.\r\n   */\r\n  public PharmacyOrderStatus getPharmacyOrderStatus() {\r\n    return pharmacyOrderStatus;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'pharmacyOrderStatus' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPharmacyOrderStatus(PharmacyOrderStatus value) {\r\n    this.pharmacyOrderStatus = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'products' field.\r\n   * @return The value of the 'products' field.\r\n   */\r\n  public java.util.List<Remedy> getRemedies() {\r\n    return remedies;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'products' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setRemedies(java.util.List<Remedy> value) {\r\n    this.remedies = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'price' field.\r\n   * @return The value of the 'price' field.\r\n   */\r\n  public java.math.BigDecimal getPrice() {\r\n    return price;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'price' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPrice(java.math.BigDecimal value) {\r\n    this.price = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'createdAt' field.\r\n   * @return The value of the 'createdAt' field.\r\n   */\r\n  public java.time.Instant getCreatedAt() {\r\n    return createdAt;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'createdAt' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setCreatedAt(java.time.Instant value) {\r\n    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n  }\r\n\r\n  /**\r\n   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder.\r\n   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder\r\n   */\r\n  public static PharmacyApprovalRequestAvroModel.Builder newBuilder() {\r\n    return new PharmacyApprovalRequestAvroModel.Builder();\r\n  }\r\n\r\n  /**\r\n   * Creates a new PharmacyApprovalRequestAvroModel RecordBuilder by copying an existing Builder.\r\n   * @param other The existing builder to copy.\r\n   * @return A new PharmacyApprovalRequestAvroModel RecordBuilder\r\n   */\r\n  public static PharmacyApprovalRequestAvroModel.Builder newBuilder(PharmacyApprovalRequestAvroModel.Builder other) {\r\n    if (other == null) {\r\n      return new PharmacyApprovalRequestAvroModel.Builder();\r\n    } else {\r\n      return new PharmacyApprovalRequestAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new PharmacyApprovalRequestAvroModel RecordBuilder by copying an existing PharmacyApprovalRequestAvroModel instance.\r\n   * @param other The existing instance to copy.\r\n   * @return A new PharmacyApprovalRequestAvroModel RecordBuilder\r\n   */\r\n  public static PharmacyApprovalRequestAvroModel.Builder newBuilder(PharmacyApprovalRequestAvroModel other) {\r\n    if (other == null) {\r\n      return new PharmacyApprovalRequestAvroModel.Builder();\r\n    } else {\r\n      return new PharmacyApprovalRequestAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * RecordBuilder for PharmacyApprovalRequestAvroModel instances.\r\n   */\r\n  @org.apache.avro.specific.AvroGenerated\r\n  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PharmacyApprovalRequestAvroModel>\r\n    implements org.apache.avro.data.RecordBuilder<PharmacyApprovalRequestAvroModel> {\r\n\r\n    private java.lang.String id;\r\n    private java.lang.String sagaId;\r\n    private java.lang.String pharmacyId;\r\n    private java.lang.String orderId;\r\n    private PharmacyOrderStatus pharmacyOrderStatus;\r\n    private java.util.List<Remedy> remedies;\r\n    private java.math.BigDecimal price;\r\n    private java.time.Instant createdAt;\r\n\r\n    /** Creates a new Builder */\r\n    private Builder() {\r\n      super(SCHEMA$, MODEL$);\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing Builder.\r\n     * @param other The existing Builder to copy.\r\n     */\r\n    private Builder(PharmacyApprovalRequestAvroModel.Builder other) {\r\n      super(other);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = other.fieldSetFlags()[0];\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = other.fieldSetFlags()[1];\r\n      }\r\n      if (isValidValue(fields()[2], other.pharmacyId)) {\r\n        this.pharmacyId = data().deepCopy(fields()[2].schema(), other.pharmacyId);\r\n        fieldSetFlags()[2] = other.fieldSetFlags()[2];\r\n      }\r\n      if (isValidValue(fields()[3], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);\r\n        fieldSetFlags()[3] = other.fieldSetFlags()[3];\r\n      }\r\n      if (isValidValue(fields()[4], other.pharmacyOrderStatus)) {\r\n        this.pharmacyOrderStatus = data().deepCopy(fields()[4].schema(), other.pharmacyOrderStatus);\r\n        fieldSetFlags()[4] = other.fieldSetFlags()[4];\r\n      }\r\n      if (isValidValue(fields()[5], other.remedies)) {\r\n        this.remedies = data().deepCopy(fields()[5].schema(), other.remedies);\r\n        fieldSetFlags()[5] = other.fieldSetFlags()[5];\r\n      }\r\n      if (isValidValue(fields()[6], other.price)) {\r\n        this.price = data().deepCopy(fields()[6].schema(), other.price);\r\n        fieldSetFlags()[6] = other.fieldSetFlags()[6];\r\n      }\r\n      if (isValidValue(fields()[7], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[7].schema(), other.createdAt);\r\n        fieldSetFlags()[7] = other.fieldSetFlags()[7];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing RestaurantApprovalRequestAvroModel instance\r\n     * @param other The existing instance to copy.\r\n     */\r\n    private Builder(PharmacyApprovalRequestAvroModel other) {\r\n      super(SCHEMA$, MODEL$);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = true;\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = true;\r\n      }\r\n      if (isValidValue(fields()[2], other.pharmacyId)) {\r\n        this.pharmacyId = data().deepCopy(fields()[2].schema(), other.pharmacyId);\r\n        fieldSetFlags()[2] = true;\r\n      }\r\n      if (isValidValue(fields()[3], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);\r\n        fieldSetFlags()[3] = true;\r\n      }\r\n      if (isValidValue(fields()[4], other.pharmacyOrderStatus)) {\r\n        this.pharmacyOrderStatus = data().deepCopy(fields()[4].schema(), other.pharmacyOrderStatus);\r\n        fieldSetFlags()[4] = true;\r\n      }\r\n      if (isValidValue(fields()[5], other.remedies)) {\r\n        this.remedies = data().deepCopy(fields()[5].schema(), other.remedies);\r\n        fieldSetFlags()[5] = true;\r\n      }\r\n      if (isValidValue(fields()[6], other.price)) {\r\n        this.price = data().deepCopy(fields()[6].schema(), other.price);\r\n        fieldSetFlags()[6] = true;\r\n      }\r\n      if (isValidValue(fields()[7], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[7].schema(), other.createdAt);\r\n        fieldSetFlags()[7] = true;\r\n      }\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'id' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getId() {\r\n      return id;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'id' field.\r\n      * @param value The value of 'id'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setId(java.lang.String value) {\r\n      validate(fields()[0], value);\r\n      this.id = value;\r\n      fieldSetFlags()[0] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'id' field has been set.\r\n      * @return True if the 'id' field has been set, false otherwise.\r\n      */\r\n    public boolean hasId() {\r\n      return fieldSetFlags()[0];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'id' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearId() {\r\n      id = null;\r\n      fieldSetFlags()[0] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'sagaId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getSagaId() {\r\n      return sagaId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'sagaId' field.\r\n      * @param value The value of 'sagaId'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setSagaId(java.lang.String value) {\r\n      validate(fields()[1], value);\r\n      this.sagaId = value;\r\n      fieldSetFlags()[1] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'sagaId' field has been set.\r\n      * @return True if the 'sagaId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasSagaId() {\r\n      return fieldSetFlags()[1];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'sagaId' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearSagaId() {\r\n      sagaId = null;\r\n      fieldSetFlags()[1] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'pharmacyId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getPharmacyId() {\r\n      return pharmacyId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'restaurantId' field.\r\n      * @param value The value of 'restaurantId'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setPharmacyId(java.lang.String value) {\r\n      validate(fields()[2], value);\r\n      this.pharmacyId = value;\r\n      fieldSetFlags()[2] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'PharmacyId' field has been set.\r\n      * @return True if the 'PharmacyId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPharmacyId() {\r\n      return fieldSetFlags()[2];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'pharmacyId' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearPharmacyId() {\r\n      pharmacyId = null;\r\n      fieldSetFlags()[2] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'orderId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getOrderId() {\r\n      return orderId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'orderId' field.\r\n      * @param value The value of 'orderId'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setOrderId(java.lang.String value) {\r\n      validate(fields()[3], value);\r\n      this.orderId = value;\r\n      fieldSetFlags()[3] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'orderId' field has been set.\r\n      * @return True if the 'orderId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasOrderId() {\r\n      return fieldSetFlags()[3];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'orderId' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearOrderId() {\r\n      orderId = null;\r\n      fieldSetFlags()[3] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'restaurantOrderStatus' field.\r\n      * @return The value.\r\n      */\r\n    public PharmacyOrderStatus getPharmacyOrderStatus() {\r\n      return pharmacyOrderStatus;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'restaurantOrderStatus' field.\r\n      * @param value The value of 'restaurantOrderStatus'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setPharmacyOrderStatus(PharmacyOrderStatus value) {\r\n      validate(fields()[4], value);\r\n      this.pharmacyOrderStatus = value;\r\n      fieldSetFlags()[4] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'restaurantOrderStatus' field has been set.\r\n      * @return True if the 'restaurantOrderStatus' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPharmacyOrderStatus() {\r\n      return fieldSetFlags()[4];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'restaurantOrderStatus' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearPharmacyOrderStatus() {\r\n      pharmacyOrderStatus = null;\r\n      fieldSetFlags()[4] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'products' field.\r\n      * @return The value.\r\n      */\r\n    public java.util.List<Remedy> getRemedies() {\r\n      return remedies;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'products' field.\r\n      * @param value The value of 'products'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setRemedies(java.util.List<Remedy> value) {\r\n      validate(fields()[5], value);\r\n      this.remedies = value;\r\n      fieldSetFlags()[5] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'products' field has been set.\r\n      * @return True if the 'products' field has been set, false otherwise.\r\n      */\r\n    public boolean hasRemedies() {\r\n      return fieldSetFlags()[5];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'products' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearProducts() {\r\n      remedies = null;\r\n      fieldSetFlags()[5] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'price' field.\r\n      * @return The value.\r\n      */\r\n    public java.math.BigDecimal getPrice() {\r\n      return price;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'price' field.\r\n      * @param value The value of 'price'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setPrice(java.math.BigDecimal value) {\r\n      validate(fields()[6], value);\r\n      this.price = value;\r\n      fieldSetFlags()[6] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'price' field has been set.\r\n      * @return True if the 'price' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPrice() {\r\n      return fieldSetFlags()[6];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'price' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearPrice() {\r\n      price = null;\r\n      fieldSetFlags()[6] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'createdAt' field.\r\n      * @return The value.\r\n      */\r\n    public java.time.Instant getCreatedAt() {\r\n      return createdAt;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'createdAt' field.\r\n      * @param value The value of 'createdAt'.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {\r\n      validate(fields()[7], value);\r\n      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n      fieldSetFlags()[7] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'createdAt' field has been set.\r\n      * @return True if the 'createdAt' field has been set, false otherwise.\r\n      */\r\n    public boolean hasCreatedAt() {\r\n      return fieldSetFlags()[7];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'createdAt' field.\r\n      * @return This builder.\r\n      */\r\n    public PharmacyApprovalRequestAvroModel.Builder clearCreatedAt() {\r\n      fieldSetFlags()[7] = false;\r\n      return this;\r\n    }\r\n\r\n    @Override\r\n    @SuppressWarnings(\"unchecked\")\r\n    public PharmacyApprovalRequestAvroModel build() {\r\n      try {\r\n        PharmacyApprovalRequestAvroModel record = new PharmacyApprovalRequestAvroModel();\r\n        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);\r\n        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);\r\n        record.pharmacyId = fieldSetFlags()[2] ? this.pharmacyId : (java.lang.String) defaultValue(fields()[2]);\r\n        record.orderId = fieldSetFlags()[3] ? this.orderId : (java.lang.String) defaultValue(fields()[3]);\r\n        record.pharmacyOrderStatus = fieldSetFlags()[4] ? this.pharmacyOrderStatus : (PharmacyOrderStatus) defaultValue(fields()[4]);\r\n        record.remedies = fieldSetFlags()[5] ? this.remedies : (java.util.List<Remedy>) defaultValue(fields()[5]);\r\n        record.price = fieldSetFlags()[6] ? this.price : (java.math.BigDecimal) defaultValue(fields()[6]);\r\n        record.createdAt = fieldSetFlags()[7] ? this.createdAt : (java.time.Instant) defaultValue(fields()[7]);\r\n        return record;\r\n      } catch (org.apache.avro.AvroMissingFieldException e) {\r\n        throw e;\r\n      } catch (java.lang.Exception e) {\r\n        throw new org.apache.avro.AvroRuntimeException(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumWriter<PharmacyApprovalRequestAvroModel>\r\n    WRITER$ = (org.apache.avro.io.DatumWriter<PharmacyApprovalRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);\r\n\r\n  @Override public void writeExternal(java.io.ObjectOutput out)\r\n    throws java.io.IOException {\r\n    WRITER$.write(this, SpecificData.getEncoder(out));\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumReader<PharmacyApprovalRequestAvroModel>\r\n    READER$ = (org.apache.avro.io.DatumReader<PharmacyApprovalRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);\r\n\r\n  @Override public void readExternal(java.io.ObjectInput in)\r\n    throws java.io.IOException {\r\n    READER$.read(this, SpecificData.getDecoder(in));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalRequestAvroModel.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalRequestAvroModel.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalRequestAvroModel.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalRequestAvroModel.java	
@@ -5,17 +5,19 @@
  */
 package com.online.medicine.application.kafka.order.avro.model;
 
+import org.apache.avro.generic.GenericArray;
 import org.apache.avro.specific.SpecificData;
+import org.apache.avro.util.Utf8;
 import org.apache.avro.message.BinaryMessageEncoder;
 import org.apache.avro.message.BinaryMessageDecoder;
 import org.apache.avro.message.SchemaStore;
 
 @org.apache.avro.specific.AvroGenerated
 public class PharmacyApprovalRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
-  private static final long serialVersionUID = -3917361261016430486L;
+  private static final long serialVersionUID = 2615748327783982928L;
 
 
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RestaurantApprovalRequestAvroModel\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"restaurantId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"restaurantOrderStatus\",\"type\":{\"type\":\"enum\",\"name\":\"RestaurantOrderStatus\",\"symbols\":[\"PAID\"]}},{\"name\":\"products\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"logicalType\":\"uuid\"},{\"name\":\"quantity\",\"type\":\"int\"}]}}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PharmacyApprovalRequestAvroModel\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"pharmacyId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"pharmacyOrderStatus\",\"type\":{\"type\":\"enum\",\"name\":\"PharmacyOrderStatus\",\"symbols\":[\"PAID\"]}},{\"name\":\"medicines\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Medicine\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"logicalType\":\"uuid\"},{\"name\":\"quantity\",\"type\":\"int\"}]}}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
 
   private static final SpecificData MODEL$ = new SpecificData();
@@ -79,8 +81,8 @@
   private java.lang.String sagaId;
   private java.lang.String pharmacyId;
   private java.lang.String orderId;
-  private PharmacyOrderStatus pharmacyOrderStatus;
-  private java.util.List<Remedy> remedies;
+  private com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus pharmacyOrderStatus;
+  private java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> medicines;
   private java.math.BigDecimal price;
   private java.time.Instant createdAt;
 
@@ -95,20 +97,20 @@
    * All-args constructor.
    * @param id The new value for id
    * @param sagaId The new value for sagaId
-   * @param pharmacyId The new value for restaurantId
+   * @param pharmacyId The new value for pharmacyId
    * @param orderId The new value for orderId
-   * @param pharmacyOrderStatus The new value for restaurantOrderStatus
-   * @param remedies The new value for products
+   * @param pharmacyOrderStatus The new value for pharmacyOrderStatus
+   * @param medicines The new value for medicines
    * @param price The new value for price
    * @param createdAt The new value for createdAt
    */
-  public PharmacyApprovalRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String pharmacyId, java.lang.String orderId, PharmacyOrderStatus pharmacyOrderStatus, java.util.List<Remedy> remedies, java.math.BigDecimal price, java.time.Instant createdAt) {
+  public PharmacyApprovalRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String pharmacyId, java.lang.String orderId, com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus pharmacyOrderStatus, java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> medicines, java.math.BigDecimal price, java.time.Instant createdAt) {
     this.id = id;
     this.sagaId = sagaId;
-    this.pharmacyId=pharmacyId;
+    this.pharmacyId = pharmacyId;
     this.orderId = orderId;
     this.pharmacyOrderStatus = pharmacyOrderStatus;
-    this.remedies = remedies;
+    this.medicines = medicines;
     this.price = price;
     this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
   }
@@ -123,7 +125,7 @@
     case 2: return pharmacyId;
     case 3: return orderId;
     case 4: return pharmacyOrderStatus;
-    case 5: return remedies;
+    case 5: return medicines;
     case 6: return price;
     case 7: return createdAt;
     default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
@@ -156,8 +158,8 @@
     case 1: sagaId = value$ != null ? value$.toString() : null; break;
     case 2: pharmacyId = value$ != null ? value$.toString() : null; break;
     case 3: orderId = value$ != null ? value$.toString() : null; break;
-    case 4: pharmacyOrderStatus = (PharmacyOrderStatus)value$; break;
-    case 5: remedies = (java.util.List<Remedy>)value$; break;
+    case 4: pharmacyOrderStatus = (com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus)value$; break;
+    case 5: medicines = (java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine>)value$; break;
     case 6: price = (java.math.BigDecimal)value$; break;
     case 7: createdAt = (java.time.Instant)value$; break;
     default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
@@ -199,8 +201,8 @@
   }
 
   /**
-   * Gets the value of the 'restaurantId' field.
-   * @return The value of the 'restaurantId' field.
+   * Gets the value of the 'pharmacyId' field.
+   * @return The value of the 'pharmacyId' field.
    */
   public java.lang.String getPharmacyId() {
     return pharmacyId;
@@ -208,7 +210,7 @@
 
 
   /**
-   * Sets the value of the 'restaurantId' field.
+   * Sets the value of the 'pharmacyId' field.
    * @param value the value to set.
    */
   public void setPharmacyId(java.lang.String value) {
@@ -236,7 +238,7 @@
    * Gets the value of the 'pharmacyOrderStatus' field.
    * @return The value of the 'pharmacyOrderStatus' field.
    */
-  public PharmacyOrderStatus getPharmacyOrderStatus() {
+  public com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus getPharmacyOrderStatus() {
     return pharmacyOrderStatus;
   }
 
@@ -245,25 +247,25 @@
    * Sets the value of the 'pharmacyOrderStatus' field.
    * @param value the value to set.
    */
-  public void setPharmacyOrderStatus(PharmacyOrderStatus value) {
+  public void setPharmacyOrderStatus(com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus value) {
     this.pharmacyOrderStatus = value;
   }
 
   /**
-   * Gets the value of the 'products' field.
-   * @return The value of the 'products' field.
+   * Gets the value of the 'medicines' field.
+   * @return The value of the 'medicines' field.
    */
-  public java.util.List<Remedy> getRemedies() {
-    return remedies;
+  public java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> getMedicines() {
+    return medicines;
   }
 
 
   /**
-   * Sets the value of the 'products' field.
+   * Sets the value of the 'medicines' field.
    * @param value the value to set.
    */
-  public void setRemedies(java.util.List<Remedy> value) {
-    this.remedies = value;
+  public void setMedicines(java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> value) {
+    this.medicines = value;
   }
 
   /**
@@ -301,11 +303,11 @@
   }
 
   /**
-   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder.
-   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
+   * Creates a new PharmacyApprovalRequestAvroModel RecordBuilder.
+   * @return A new PharmacyApprovalRequestAvroModel RecordBuilder
    */
-  public static PharmacyApprovalRequestAvroModel.Builder newBuilder() {
-    return new PharmacyApprovalRequestAvroModel.Builder();
+  public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder newBuilder() {
+    return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder();
   }
 
   /**
@@ -313,11 +315,11 @@
    * @param other The existing builder to copy.
    * @return A new PharmacyApprovalRequestAvroModel RecordBuilder
    */
-  public static PharmacyApprovalRequestAvroModel.Builder newBuilder(PharmacyApprovalRequestAvroModel.Builder other) {
+  public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder other) {
     if (other == null) {
-      return new PharmacyApprovalRequestAvroModel.Builder();
+      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder();
     } else {
-      return new PharmacyApprovalRequestAvroModel.Builder(other);
+      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder(other);
     }
   }
 
@@ -326,11 +328,11 @@
    * @param other The existing instance to copy.
    * @return A new PharmacyApprovalRequestAvroModel RecordBuilder
    */
-  public static PharmacyApprovalRequestAvroModel.Builder newBuilder(PharmacyApprovalRequestAvroModel other) {
+  public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel other) {
     if (other == null) {
-      return new PharmacyApprovalRequestAvroModel.Builder();
+      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder();
     } else {
-      return new PharmacyApprovalRequestAvroModel.Builder(other);
+      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder(other);
     }
   }
 
@@ -345,8 +347,8 @@
     private java.lang.String sagaId;
     private java.lang.String pharmacyId;
     private java.lang.String orderId;
-    private PharmacyOrderStatus pharmacyOrderStatus;
-    private java.util.List<Remedy> remedies;
+    private com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus pharmacyOrderStatus;
+    private java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> medicines;
     private java.math.BigDecimal price;
     private java.time.Instant createdAt;
 
@@ -359,7 +361,7 @@
      * Creates a Builder by copying an existing Builder.
      * @param other The existing Builder to copy.
      */
-    private Builder(PharmacyApprovalRequestAvroModel.Builder other) {
+    private Builder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder other) {
       super(other);
       if (isValidValue(fields()[0], other.id)) {
         this.id = data().deepCopy(fields()[0].schema(), other.id);
@@ -381,8 +383,8 @@
         this.pharmacyOrderStatus = data().deepCopy(fields()[4].schema(), other.pharmacyOrderStatus);
         fieldSetFlags()[4] = other.fieldSetFlags()[4];
       }
-      if (isValidValue(fields()[5], other.remedies)) {
-        this.remedies = data().deepCopy(fields()[5].schema(), other.remedies);
+      if (isValidValue(fields()[5], other.medicines)) {
+        this.medicines = data().deepCopy(fields()[5].schema(), other.medicines);
         fieldSetFlags()[5] = other.fieldSetFlags()[5];
       }
       if (isValidValue(fields()[6], other.price)) {
@@ -396,10 +398,10 @@
     }
 
     /**
-     * Creates a Builder by copying an existing RestaurantApprovalRequestAvroModel instance
+     * Creates a Builder by copying an existing PharmacyApprovalRequestAvroModel instance
      * @param other The existing instance to copy.
      */
-    private Builder(PharmacyApprovalRequestAvroModel other) {
+    private Builder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel other) {
       super(SCHEMA$, MODEL$);
       if (isValidValue(fields()[0], other.id)) {
         this.id = data().deepCopy(fields()[0].schema(), other.id);
@@ -421,8 +423,8 @@
         this.pharmacyOrderStatus = data().deepCopy(fields()[4].schema(), other.pharmacyOrderStatus);
         fieldSetFlags()[4] = true;
       }
-      if (isValidValue(fields()[5], other.remedies)) {
-        this.remedies = data().deepCopy(fields()[5].schema(), other.remedies);
+      if (isValidValue(fields()[5], other.medicines)) {
+        this.medicines = data().deepCopy(fields()[5].schema(), other.medicines);
         fieldSetFlags()[5] = true;
       }
       if (isValidValue(fields()[6], other.price)) {
@@ -449,7 +451,7 @@
       * @param value The value of 'id'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setId(java.lang.String value) {
       validate(fields()[0], value);
       this.id = value;
       fieldSetFlags()[0] = true;
@@ -469,7 +471,7 @@
       * Clears the value of the 'id' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearId() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearId() {
       id = null;
       fieldSetFlags()[0] = false;
       return this;
@@ -489,7 +491,7 @@
       * @param value The value of 'sagaId'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setSagaId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setSagaId(java.lang.String value) {
       validate(fields()[1], value);
       this.sagaId = value;
       fieldSetFlags()[1] = true;
@@ -509,7 +511,7 @@
       * Clears the value of the 'sagaId' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearSagaId() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearSagaId() {
       sagaId = null;
       fieldSetFlags()[1] = false;
       return this;
@@ -525,11 +527,11 @@
 
 
     /**
-      * Sets the value of the 'restaurantId' field.
-      * @param value The value of 'restaurantId'.
+      * Sets the value of the 'pharmacyId' field.
+      * @param value The value of 'pharmacyId'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setPharmacyId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setPharmacyId(java.lang.String value) {
       validate(fields()[2], value);
       this.pharmacyId = value;
       fieldSetFlags()[2] = true;
@@ -537,8 +539,8 @@
     }
 
     /**
-      * Checks whether the 'PharmacyId' field has been set.
-      * @return True if the 'PharmacyId' field has been set, false otherwise.
+      * Checks whether the 'pharmacyId' field has been set.
+      * @return True if the 'pharmacyId' field has been set, false otherwise.
       */
     public boolean hasPharmacyId() {
       return fieldSetFlags()[2];
@@ -549,7 +551,7 @@
       * Clears the value of the 'pharmacyId' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearPharmacyId() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearPharmacyId() {
       pharmacyId = null;
       fieldSetFlags()[2] = false;
       return this;
@@ -569,7 +571,7 @@
       * @param value The value of 'orderId'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setOrderId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setOrderId(java.lang.String value) {
       validate(fields()[3], value);
       this.orderId = value;
       fieldSetFlags()[3] = true;
@@ -589,27 +591,27 @@
       * Clears the value of the 'orderId' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearOrderId() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearOrderId() {
       orderId = null;
       fieldSetFlags()[3] = false;
       return this;
     }
 
     /**
-      * Gets the value of the 'restaurantOrderStatus' field.
+      * Gets the value of the 'pharmacyOrderStatus' field.
       * @return The value.
       */
-    public PharmacyOrderStatus getPharmacyOrderStatus() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus getPharmacyOrderStatus() {
       return pharmacyOrderStatus;
     }
 
 
     /**
-      * Sets the value of the 'restaurantOrderStatus' field.
-      * @param value The value of 'restaurantOrderStatus'.
+      * Sets the value of the 'pharmacyOrderStatus' field.
+      * @param value The value of 'pharmacyOrderStatus'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setPharmacyOrderStatus(PharmacyOrderStatus value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setPharmacyOrderStatus(com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus value) {
       validate(fields()[4], value);
       this.pharmacyOrderStatus = value;
       fieldSetFlags()[4] = true;
@@ -617,8 +619,8 @@
     }
 
     /**
-      * Checks whether the 'restaurantOrderStatus' field has been set.
-      * @return True if the 'restaurantOrderStatus' field has been set, false otherwise.
+      * Checks whether the 'pharmacyOrderStatus' field has been set.
+      * @return True if the 'pharmacyOrderStatus' field has been set, false otherwise.
       */
     public boolean hasPharmacyOrderStatus() {
       return fieldSetFlags()[4];
@@ -626,51 +628,51 @@
 
 
     /**
-      * Clears the value of the 'restaurantOrderStatus' field.
+      * Clears the value of the 'pharmacyOrderStatus' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearPharmacyOrderStatus() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearPharmacyOrderStatus() {
       pharmacyOrderStatus = null;
       fieldSetFlags()[4] = false;
       return this;
     }
 
     /**
-      * Gets the value of the 'products' field.
+      * Gets the value of the 'medicines' field.
       * @return The value.
       */
-    public java.util.List<Remedy> getRemedies() {
-      return remedies;
+    public java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> getMedicines() {
+      return medicines;
     }
 
 
     /**
-      * Sets the value of the 'products' field.
-      * @param value The value of 'products'.
+      * Sets the value of the 'medicines' field.
+      * @param value The value of 'medicines'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setRemedies(java.util.List<Remedy> value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setMedicines(java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine> value) {
       validate(fields()[5], value);
-      this.remedies = value;
+      this.medicines = value;
       fieldSetFlags()[5] = true;
       return this;
     }
 
     /**
-      * Checks whether the 'products' field has been set.
-      * @return True if the 'products' field has been set, false otherwise.
+      * Checks whether the 'medicines' field has been set.
+      * @return True if the 'medicines' field has been set, false otherwise.
       */
-    public boolean hasRemedies() {
+    public boolean hasMedicines() {
       return fieldSetFlags()[5];
     }
 
 
     /**
-      * Clears the value of the 'products' field.
+      * Clears the value of the 'medicines' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearProducts() {
-      remedies = null;
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearMedicines() {
+      medicines = null;
       fieldSetFlags()[5] = false;
       return this;
     }
@@ -689,7 +691,7 @@
       * @param value The value of 'price'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setPrice(java.math.BigDecimal value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setPrice(java.math.BigDecimal value) {
       validate(fields()[6], value);
       this.price = value;
       fieldSetFlags()[6] = true;
@@ -709,7 +711,7 @@
       * Clears the value of the 'price' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearPrice() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearPrice() {
       price = null;
       fieldSetFlags()[6] = false;
       return this;
@@ -729,7 +731,7 @@
       * @param value The value of 'createdAt'.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
       validate(fields()[7], value);
       this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
       fieldSetFlags()[7] = true;
@@ -749,7 +751,7 @@
       * Clears the value of the 'createdAt' field.
       * @return This builder.
       */
-    public PharmacyApprovalRequestAvroModel.Builder clearCreatedAt() {
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel.Builder clearCreatedAt() {
       fieldSetFlags()[7] = false;
       return this;
     }
@@ -763,8 +765,8 @@
         record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);
         record.pharmacyId = fieldSetFlags()[2] ? this.pharmacyId : (java.lang.String) defaultValue(fields()[2]);
         record.orderId = fieldSetFlags()[3] ? this.orderId : (java.lang.String) defaultValue(fields()[3]);
-        record.pharmacyOrderStatus = fieldSetFlags()[4] ? this.pharmacyOrderStatus : (PharmacyOrderStatus) defaultValue(fields()[4]);
-        record.remedies = fieldSetFlags()[5] ? this.remedies : (java.util.List<Remedy>) defaultValue(fields()[5]);
+        record.pharmacyOrderStatus = fieldSetFlags()[4] ? this.pharmacyOrderStatus : (com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus) defaultValue(fields()[4]);
+        record.medicines = fieldSetFlags()[5] ? this.medicines : (java.util.List<com.online.medicine.application.kafka.order.avro.model.Medicine>) defaultValue(fields()[5]);
         record.price = fieldSetFlags()[6] ? this.price : (java.math.BigDecimal) defaultValue(fields()[6]);
         record.createdAt = fieldSetFlags()[7] ? this.createdAt : (java.time.Instant) defaultValue(fields()[7]);
         return record;
Index: infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/KafkaProducer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.kafka.producer.service;\r\n\r\nimport org.apache.avro.specific.SpecificRecordBase;\r\nimport org.springframework.kafka.support.SendResult;\r\nimport org.springframework.util.concurrent.ListenableFutureCallback;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic interface KafkaProducer <K extends Serializable, V extends SpecificRecordBase>{\r\n    void send(String topicName, K key, V message, ListenableFutureCallback<SendResult<K, V>> callback);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/KafkaProducer.java b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/KafkaProducer.java
--- a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/KafkaProducer.java	
+++ b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/KafkaProducer.java	
@@ -6,6 +6,6 @@
 
 import java.io.Serializable;
 
-public interface KafkaProducer <K extends Serializable, V extends SpecificRecordBase>{
+public interface KafkaProducer<K extends Serializable, V extends SpecificRecordBase> {
     void send(String topicName, K key, V message, ListenableFutureCallback<SendResult<K, V>> callback);
 }
Index: infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/impl/KafkaProducerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.kafka.producer.service.impl;\r\n\r\nimport com.online.medicine.application.kafka.producer.exception.KafkaProducerException;\r\nimport com.online.medicine.application.kafka.producer.service.KafkaProducer;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.apache.avro.specific.SpecificRecordBase;\r\nimport org.springframework.kafka.KafkaException;\r\n\r\nimport org.springframework.kafka.core.KafkaTemplate;\r\nimport org.springframework.kafka.support.SendResult;\r\nimport org.springframework.stereotype.Component;\r\nimport org.springframework.util.concurrent.ListenableFuture;\r\nimport org.springframework.util.concurrent.ListenableFutureCallback;\r\n\r\nimport javax.annotation.PreDestroy;\r\nimport java.io.Serializable;\r\n@Component\r\n@Slf4j\r\n\r\npublic class KafkaProducerImpl <K extends Serializable, V extends  SpecificRecordBase>implements KafkaProducer<K, V> {\r\n   private final KafkaTemplate<K, V> kafkaTemplate;\r\n\r\n    public KafkaProducerImpl(KafkaTemplate<K, V> kafkaTemplate) {\r\n        this.kafkaTemplate = kafkaTemplate;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void send(String topicName, K key, V message, ListenableFutureCallback<SendResult<K, V>> callback) {\r\n        log.info(\"Sending message={} to topic={}\", message, topicName);\r\n        try {\r\n            ListenableFuture<SendResult<K, V>> kafkaResultFuture = kafkaTemplate.send(topicName, key, message);\r\n            kafkaResultFuture.addCallback(callback);\r\n        } catch (KafkaException e) {\r\n            log.error(\"Error on kafka producer with key: {}, message: {} and exception: {}\", key, message,\r\n                    e.getMessage());\r\n            throw new KafkaProducerException(\"Error on kafka producer with key: \" + key + \" and message: \" + message);\r\n        }\r\n    }\r\n    @PreDestroy\r\n    public void close() {\r\n        if(kafkaTemplate!=null){\r\n            log.info(\"Closing kafka producer\");\r\n            kafkaTemplate.destroy();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/impl/KafkaProducerImpl.java b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/impl/KafkaProducerImpl.java
--- a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/impl/KafkaProducerImpl.java	
+++ b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/service/impl/KafkaProducerImpl.java	
@@ -5,7 +5,6 @@
 import lombok.extern.slf4j.Slf4j;
 import org.apache.avro.specific.SpecificRecordBase;
 import org.springframework.kafka.KafkaException;
-
 import org.springframework.kafka.core.KafkaTemplate;
 import org.springframework.kafka.support.SendResult;
 import org.springframework.stereotype.Component;
@@ -14,17 +13,17 @@
 
 import javax.annotation.PreDestroy;
 import java.io.Serializable;
-@Component
+
 @Slf4j
-
-public class KafkaProducerImpl <K extends Serializable, V extends  SpecificRecordBase>implements KafkaProducer<K, V> {
-   private final KafkaTemplate<K, V> kafkaTemplate;
+@Component
+public class KafkaProducerImpl<K extends Serializable, V extends SpecificRecordBase> implements KafkaProducer<K, V> {
+
+    private final KafkaTemplate<K, V> kafkaTemplate;
 
     public KafkaProducerImpl(KafkaTemplate<K, V> kafkaTemplate) {
         this.kafkaTemplate = kafkaTemplate;
     }
 
-
     @Override
     public void send(String topicName, K key, V message, ListenableFutureCallback<SendResult<K, V>> callback) {
         log.info("Sending message={} to topic={}", message, topicName);
@@ -37,10 +36,11 @@
             throw new KafkaProducerException("Error on kafka producer with key: " + key + " and message: " + message);
         }
     }
+
     @PreDestroy
     public void close() {
-        if(kafkaTemplate!=null){
-            log.info("Closing kafka producer");
+        if (kafkaTemplate != null) {
+            log.info("Closing kafka producer!");
             kafkaTemplate.destroy();
         }
     }
Index: infrastructure/kafka/kafka-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <parent>\r\n        <artifactId>kafka</artifactId>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <artifactId>kafka-model</artifactId>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.apache.avro</groupId>\r\n            <artifactId>avro</artifactId>\r\n            <version>1.11.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.avro</groupId>\r\n            <artifactId>avro</artifactId>\r\n            <version>1.12.0</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.avro</groupId>\r\n                <artifactId>avro-maven-plugin</artifactId>\r\n                <version>${avro.version}</version>\r\n                <configuration>\r\n                    <stringType>String</stringType>\r\n                    <enableDecimalLogicalType>true</enableDecimalLogicalType>\r\n                </configuration>\r\n                <executions>\r\n                    <execution>\r\n                        <phase>generate-sources</phase>\r\n                        <goals>\r\n                            <goal>schema</goal>\r\n                        </goals>\r\n                        <configuration>\r\n                            <sourceDirectory>src/main/resources/avro</sourceDirectory>\r\n                            <outputDirectory>src/main/java</outputDirectory>\r\n                        </configuration>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/pom.xml b/infrastructure/kafka/kafka-model/pom.xml
--- a/infrastructure/kafka/kafka-model/pom.xml	
+++ b/infrastructure/kafka/kafka-model/pom.xml	
@@ -17,12 +17,6 @@
             <artifactId>avro</artifactId>
             <version>1.11.0</version>
         </dependency>
-        <dependency>
-            <groupId>org.apache.avro</groupId>
-            <artifactId>avro</artifactId>
-            <version>1.12.0</version>
-            <scope>compile</scope>
-        </dependency>
     </dependencies>
 
     <build>
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentRequestAvroModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n\r\nimport org.apache.avro.specific.SpecificData;\r\nimport org.apache.avro.message.BinaryMessageEncoder;\r\nimport org.apache.avro.message.BinaryMessageDecoder;\r\nimport org.apache.avro.message.SchemaStore;\r\n\r\n@org.apache.avro.specific.AvroGenerated\r\npublic class PaymentRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {\r\n  private static final long serialVersionUID = 1425163749928760031L;\r\n\r\n\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"PaymentRequestAvroModel\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"sagaId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"customerId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"orderId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"price\\\",\\\"type\\\":{\\\"type\\\":\\\"bytes\\\",\\\"logicalType\\\":\\\"decimal\\\",\\\"precision\\\":10,\\\"scale\\\":2}},{\\\"name\\\":\\\"createdAt\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"logicalType\\\":\\\"timestamp-millis\\\"}},{\\\"name\\\":\\\"paymentOrderStatus\\\",\\\"type\\\":{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"PaymentOrderStatus\\\",\\\"symbols\\\":[\\\"PENDING\\\",\\\"CANCELLED\\\"]}}]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n\r\n  private static final SpecificData MODEL$ = new SpecificData();\r\n  static {\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());\r\n  }\r\n\r\n  private static final BinaryMessageEncoder<PaymentRequestAvroModel> ENCODER =\r\n      new BinaryMessageEncoder<PaymentRequestAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  private static final BinaryMessageDecoder<PaymentRequestAvroModel> DECODER =\r\n      new BinaryMessageDecoder<PaymentRequestAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  /**\r\n   * Return the BinaryMessageEncoder instance used by this class.\r\n   * @return the message encoder used by this class\r\n   */\r\n  public static BinaryMessageEncoder<PaymentRequestAvroModel> getEncoder() {\r\n    return ENCODER;\r\n  }\r\n\r\n  /**\r\n   * Return the BinaryMessageDecoder instance used by this class.\r\n   * @return the message decoder used by this class\r\n   */\r\n  public static BinaryMessageDecoder<PaymentRequestAvroModel> getDecoder() {\r\n    return DECODER;\r\n  }\r\n\r\n  /**\r\n   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.\r\n   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint\r\n   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore\r\n   */\r\n  public static BinaryMessageDecoder<PaymentRequestAvroModel> createDecoder(SchemaStore resolver) {\r\n    return new BinaryMessageDecoder<PaymentRequestAvroModel>(MODEL$, SCHEMA$, resolver);\r\n  }\r\n\r\n  /**\r\n   * Serializes this PaymentRequestAvroModel to a ByteBuffer.\r\n   * @return a buffer holding the serialized data for this instance\r\n   * @throws java.io.IOException if this instance could not be serialized\r\n   */\r\n  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {\r\n    return ENCODER.encode(this);\r\n  }\r\n\r\n  /**\r\n   * Deserializes a PaymentRequestAvroModel from a ByteBuffer.\r\n   * @param b a byte buffer holding serialized data for an instance of this class\r\n   * @return a PaymentRequestAvroModel instance decoded from the given buffer\r\n   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class\r\n   */\r\n  public static PaymentRequestAvroModel fromByteBuffer(\r\n      java.nio.ByteBuffer b) throws java.io.IOException {\r\n    return DECODER.decode(b);\r\n  }\r\n\r\n  private java.lang.String id;\r\n  private java.lang.String sagaId;\r\n  private java.lang.String customerId;\r\n  private java.lang.String orderId;\r\n  private java.math.BigDecimal price;\r\n  private java.time.Instant createdAt;\r\n  private PaymentOrderStatus paymentOrderStatus;\r\n\r\n  /**\r\n   * Default constructor.  Note that this does not initialize fields\r\n   * to their default values from the schema.  If that is desired then\r\n   * one should use <code>newBuilder()</code>.\r\n   */\r\n  public PaymentRequestAvroModel() {}\r\n\r\n  /**\r\n   * All-args constructor.\r\n   * @param id The new value for id\r\n   * @param sagaId The new value for sagaId\r\n   * @param customerId The new value for customerId\r\n   * @param orderId The new value for orderId\r\n   * @param price The new value for price\r\n   * @param createdAt The new value for createdAt\r\n   * @param paymentOrderStatus The new value for paymentOrderStatus\r\n   */\r\n  public PaymentRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String customerId, java.lang.String orderId, java.math.BigDecimal price, java.time.Instant createdAt, PaymentOrderStatus paymentOrderStatus) {\r\n    this.id = id;\r\n    this.sagaId = sagaId;\r\n    this.customerId = customerId;\r\n    this.orderId = orderId;\r\n    this.price = price;\r\n    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n    this.paymentOrderStatus = paymentOrderStatus;\r\n  }\r\n\r\n  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n  // Used by DatumWriter.  Applications should not call.\r\n  public java.lang.Object get(int field$) {\r\n    switch (field$) {\r\n    case 0: return id;\r\n    case 1: return sagaId;\r\n    case 2: return customerId;\r\n    case 3: return orderId;\r\n    case 4: return price;\r\n    case 5: return createdAt;\r\n    case 6: return paymentOrderStatus;\r\n    default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  private static final org.apache.avro.Conversion<?>[] conversions =\r\n      new org.apache.avro.Conversion<?>[] {\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      new org.apache.avro.Conversions.DecimalConversion(),\r\n      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),\r\n      null,\r\n      null\r\n  };\r\n\r\n  @Override\r\n  public org.apache.avro.Conversion<?> getConversion(int field) {\r\n    return conversions[field];\r\n  }\r\n\r\n  // Used by DatumReader.  Applications should not call.\r\n  @SuppressWarnings(value=\"unchecked\")\r\n  public void put(int field$, java.lang.Object value$) {\r\n    switch (field$) {\r\n    case 0: id = value$ != null ? value$.toString() : null; break;\r\n    case 1: sagaId = value$ != null ? value$.toString() : null; break;\r\n    case 2: customerId = value$ != null ? value$.toString() : null; break;\r\n    case 3: orderId = value$ != null ? value$.toString() : null; break;\r\n    case 4: price = (java.math.BigDecimal)value$; break;\r\n    case 5: createdAt = (java.time.Instant)value$; break;\r\n    case 6: paymentOrderStatus = (PaymentOrderStatus)value$; break;\r\n    default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'id' field.\r\n   * @return The value of the 'id' field.\r\n   */\r\n  public java.lang.String getId() {\r\n    return id;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'id' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setId(java.lang.String value) {\r\n    this.id = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'sagaId' field.\r\n   * @return The value of the 'sagaId' field.\r\n   */\r\n  public java.lang.String getSagaId() {\r\n    return sagaId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'sagaId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setSagaId(java.lang.String value) {\r\n    this.sagaId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'customerId' field.\r\n   * @return The value of the 'customerId' field.\r\n   */\r\n  public java.lang.String getCustomerId() {\r\n    return customerId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'customerId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setCustomerId(java.lang.String value) {\r\n    this.customerId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'orderId' field.\r\n   * @return The value of the 'orderId' field.\r\n   */\r\n  public java.lang.String getOrderId() {\r\n    return orderId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'orderId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setOrderId(java.lang.String value) {\r\n    this.orderId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'price' field.\r\n   * @return The value of the 'price' field.\r\n   */\r\n  public java.math.BigDecimal getPrice() {\r\n    return price;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'price' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPrice(java.math.BigDecimal value) {\r\n    this.price = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'createdAt' field.\r\n   * @return The value of the 'createdAt' field.\r\n   */\r\n  public java.time.Instant getCreatedAt() {\r\n    return createdAt;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'createdAt' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setCreatedAt(java.time.Instant value) {\r\n    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'paymentOrderStatus' field.\r\n   * @return The value of the 'paymentOrderStatus' field.\r\n   */\r\n  public PaymentOrderStatus getPaymentOrderStatus() {\r\n    return paymentOrderStatus;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'paymentOrderStatus' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPaymentOrderStatus(PaymentOrderStatus value) {\r\n    this.paymentOrderStatus = value;\r\n  }\r\n\r\n  /**\r\n   * Creates a new PaymentRequestAvroModel RecordBuilder.\r\n   * @return A new PaymentRequestAvroModel RecordBuilder\r\n   */\r\n  public static PaymentRequestAvroModel.Builder newBuilder() {\r\n    return new PaymentRequestAvroModel.Builder();\r\n  }\r\n\r\n  /**\r\n   * Creates a new PaymentRequestAvroModel RecordBuilder by copying an existing Builder.\r\n   * @param other The existing builder to copy.\r\n   * @return A new PaymentRequestAvroModel RecordBuilder\r\n   */\r\n  public static PaymentRequestAvroModel.Builder newBuilder(PaymentRequestAvroModel.Builder other) {\r\n    if (other == null) {\r\n      return new PaymentRequestAvroModel.Builder();\r\n    } else {\r\n      return new PaymentRequestAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new PaymentRequestAvroModel RecordBuilder by copying an existing PaymentRequestAvroModel instance.\r\n   * @param other The existing instance to copy.\r\n   * @return A new PaymentRequestAvroModel RecordBuilder\r\n   */\r\n  public static PaymentRequestAvroModel.Builder newBuilder(PaymentRequestAvroModel other) {\r\n    if (other == null) {\r\n      return new PaymentRequestAvroModel.Builder();\r\n    } else {\r\n      return new PaymentRequestAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * RecordBuilder for PaymentRequestAvroModel instances.\r\n   */\r\n  @org.apache.avro.specific.AvroGenerated\r\n  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentRequestAvroModel>\r\n    implements org.apache.avro.data.RecordBuilder<PaymentRequestAvroModel> {\r\n\r\n    private java.lang.String id;\r\n    private java.lang.String sagaId;\r\n    private java.lang.String customerId;\r\n    private java.lang.String orderId;\r\n    private java.math.BigDecimal price;\r\n    private java.time.Instant createdAt;\r\n    private PaymentOrderStatus paymentOrderStatus;\r\n\r\n    /** Creates a new Builder */\r\n    private Builder() {\r\n      super(SCHEMA$, MODEL$);\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing Builder.\r\n     * @param other The existing Builder to copy.\r\n     */\r\n    private Builder(PaymentRequestAvroModel.Builder other) {\r\n      super(other);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = other.fieldSetFlags()[0];\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = other.fieldSetFlags()[1];\r\n      }\r\n      if (isValidValue(fields()[2], other.customerId)) {\r\n        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);\r\n        fieldSetFlags()[2] = other.fieldSetFlags()[2];\r\n      }\r\n      if (isValidValue(fields()[3], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);\r\n        fieldSetFlags()[3] = other.fieldSetFlags()[3];\r\n      }\r\n      if (isValidValue(fields()[4], other.price)) {\r\n        this.price = data().deepCopy(fields()[4].schema(), other.price);\r\n        fieldSetFlags()[4] = other.fieldSetFlags()[4];\r\n      }\r\n      if (isValidValue(fields()[5], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[5].schema(), other.createdAt);\r\n        fieldSetFlags()[5] = other.fieldSetFlags()[5];\r\n      }\r\n      if (isValidValue(fields()[6], other.paymentOrderStatus)) {\r\n        this.paymentOrderStatus = data().deepCopy(fields()[6].schema(), other.paymentOrderStatus);\r\n        fieldSetFlags()[6] = other.fieldSetFlags()[6];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing PaymentRequestAvroModel instance\r\n     * @param other The existing instance to copy.\r\n     */\r\n    private Builder(PaymentRequestAvroModel other) {\r\n      super(SCHEMA$, MODEL$);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = true;\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = true;\r\n      }\r\n      if (isValidValue(fields()[2], other.customerId)) {\r\n        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);\r\n        fieldSetFlags()[2] = true;\r\n      }\r\n      if (isValidValue(fields()[3], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);\r\n        fieldSetFlags()[3] = true;\r\n      }\r\n      if (isValidValue(fields()[4], other.price)) {\r\n        this.price = data().deepCopy(fields()[4].schema(), other.price);\r\n        fieldSetFlags()[4] = true;\r\n      }\r\n      if (isValidValue(fields()[5], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[5].schema(), other.createdAt);\r\n        fieldSetFlags()[5] = true;\r\n      }\r\n      if (isValidValue(fields()[6], other.paymentOrderStatus)) {\r\n        this.paymentOrderStatus = data().deepCopy(fields()[6].schema(), other.paymentOrderStatus);\r\n        fieldSetFlags()[6] = true;\r\n      }\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'id' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getId() {\r\n      return id;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'id' field.\r\n      * @param value The value of 'id'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setId(java.lang.String value) {\r\n      validate(fields()[0], value);\r\n      this.id = value;\r\n      fieldSetFlags()[0] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'id' field has been set.\r\n      * @return True if the 'id' field has been set, false otherwise.\r\n      */\r\n    public boolean hasId() {\r\n      return fieldSetFlags()[0];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'id' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearId() {\r\n      id = null;\r\n      fieldSetFlags()[0] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'sagaId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getSagaId() {\r\n      return sagaId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'sagaId' field.\r\n      * @param value The value of 'sagaId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setSagaId(java.lang.String value) {\r\n      validate(fields()[1], value);\r\n      this.sagaId = value;\r\n      fieldSetFlags()[1] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'sagaId' field has been set.\r\n      * @return True if the 'sagaId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasSagaId() {\r\n      return fieldSetFlags()[1];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'sagaId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearSagaId() {\r\n      sagaId = null;\r\n      fieldSetFlags()[1] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'customerId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getCustomerId() {\r\n      return customerId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'customerId' field.\r\n      * @param value The value of 'customerId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setCustomerId(java.lang.String value) {\r\n      validate(fields()[2], value);\r\n      this.customerId = value;\r\n      fieldSetFlags()[2] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'customerId' field has been set.\r\n      * @return True if the 'customerId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasCustomerId() {\r\n      return fieldSetFlags()[2];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'customerId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearCustomerId() {\r\n      customerId = null;\r\n      fieldSetFlags()[2] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'orderId' field.\r\n      * @return The value.\r\n      */\r\n    public java.lang.String getOrderId() {\r\n      return orderId;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'orderId' field.\r\n      * @param value The value of 'orderId'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setOrderId(java.lang.String value) {\r\n      validate(fields()[3], value);\r\n      this.orderId = value;\r\n      fieldSetFlags()[3] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'orderId' field has been set.\r\n      * @return True if the 'orderId' field has been set, false otherwise.\r\n      */\r\n    public boolean hasOrderId() {\r\n      return fieldSetFlags()[3];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'orderId' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearOrderId() {\r\n      orderId = null;\r\n      fieldSetFlags()[3] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'price' field.\r\n      * @return The value.\r\n      */\r\n    public java.math.BigDecimal getPrice() {\r\n      return price;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'price' field.\r\n      * @param value The value of 'price'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setPrice(java.math.BigDecimal value) {\r\n      validate(fields()[4], value);\r\n      this.price = value;\r\n      fieldSetFlags()[4] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'price' field has been set.\r\n      * @return True if the 'price' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPrice() {\r\n      return fieldSetFlags()[4];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'price' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearPrice() {\r\n      price = null;\r\n      fieldSetFlags()[4] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'createdAt' field.\r\n      * @return The value.\r\n      */\r\n    public java.time.Instant getCreatedAt() {\r\n      return createdAt;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'createdAt' field.\r\n      * @param value The value of 'createdAt'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {\r\n      validate(fields()[5], value);\r\n      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n      fieldSetFlags()[5] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'createdAt' field has been set.\r\n      * @return True if the 'createdAt' field has been set, false otherwise.\r\n      */\r\n    public boolean hasCreatedAt() {\r\n      return fieldSetFlags()[5];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'createdAt' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearCreatedAt() {\r\n      fieldSetFlags()[5] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Gets the value of the 'paymentOrderStatus' field.\r\n      * @return The value.\r\n      */\r\n    public PaymentOrderStatus getPaymentOrderStatus() {\r\n      return paymentOrderStatus;\r\n    }\r\n\r\n\r\n    /**\r\n      * Sets the value of the 'paymentOrderStatus' field.\r\n      * @param value The value of 'paymentOrderStatus'.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder setPaymentOrderStatus(PaymentOrderStatus value) {\r\n      validate(fields()[6], value);\r\n      this.paymentOrderStatus = value;\r\n      fieldSetFlags()[6] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n      * Checks whether the 'paymentOrderStatus' field has been set.\r\n      * @return True if the 'paymentOrderStatus' field has been set, false otherwise.\r\n      */\r\n    public boolean hasPaymentOrderStatus() {\r\n      return fieldSetFlags()[6];\r\n    }\r\n\r\n\r\n    /**\r\n      * Clears the value of the 'paymentOrderStatus' field.\r\n      * @return This builder.\r\n      */\r\n    public PaymentRequestAvroModel.Builder clearPaymentOrderStatus() {\r\n      paymentOrderStatus = null;\r\n      fieldSetFlags()[6] = false;\r\n      return this;\r\n    }\r\n\r\n    @Override\r\n    @SuppressWarnings(\"unchecked\")\r\n    public PaymentRequestAvroModel build() {\r\n      try {\r\n        PaymentRequestAvroModel record = new PaymentRequestAvroModel();\r\n        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);\r\n        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);\r\n        record.customerId = fieldSetFlags()[2] ? this.customerId : (java.lang.String) defaultValue(fields()[2]);\r\n        record.orderId = fieldSetFlags()[3] ? this.orderId : (java.lang.String) defaultValue(fields()[3]);\r\n        record.price = fieldSetFlags()[4] ? this.price : (java.math.BigDecimal) defaultValue(fields()[4]);\r\n        record.createdAt = fieldSetFlags()[5] ? this.createdAt : (java.time.Instant) defaultValue(fields()[5]);\r\n        record.paymentOrderStatus = fieldSetFlags()[6] ? this.paymentOrderStatus : (PaymentOrderStatus) defaultValue(fields()[6]);\r\n        return record;\r\n      } catch (org.apache.avro.AvroMissingFieldException e) {\r\n        throw e;\r\n      } catch (java.lang.Exception e) {\r\n        throw new org.apache.avro.AvroRuntimeException(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumWriter<PaymentRequestAvroModel>\r\n    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);\r\n\r\n  @Override public void writeExternal(java.io.ObjectOutput out)\r\n    throws java.io.IOException {\r\n    WRITER$.write(this, SpecificData.getEncoder(out));\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumReader<PaymentRequestAvroModel>\r\n    READER$ = (org.apache.avro.io.DatumReader<PaymentRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);\r\n\r\n  @Override public void readExternal(java.io.ObjectInput in)\r\n    throws java.io.IOException {\r\n    READER$.read(this, SpecificData.getDecoder(in));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentRequestAvroModel.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentRequestAvroModel.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentRequestAvroModel.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentRequestAvroModel.java	
@@ -5,17 +5,19 @@
  */
 package com.online.medicine.application.kafka.order.avro.model;
 
+import org.apache.avro.generic.GenericArray;
 import org.apache.avro.specific.SpecificData;
+import org.apache.avro.util.Utf8;
 import org.apache.avro.message.BinaryMessageEncoder;
 import org.apache.avro.message.BinaryMessageDecoder;
 import org.apache.avro.message.SchemaStore;
 
 @org.apache.avro.specific.AvroGenerated
 public class PaymentRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
-  private static final long serialVersionUID = 1425163749928760031L;
+  private static final long serialVersionUID = -2084901065079482739L;
 
 
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentRequestAvroModel\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"paymentOrderStatus\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentOrderStatus\",\"symbols\":[\"PENDING\",\"CANCELLED\"]}}]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentRequestAvroModel\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"paymentOrderStatus\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentOrderStatus\",\"symbols\":[\"PENDING\",\"CANCELLED\"]}}]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
 
   private static final SpecificData MODEL$ = new SpecificData();
@@ -81,7 +83,7 @@
   private java.lang.String orderId;
   private java.math.BigDecimal price;
   private java.time.Instant createdAt;
-  private PaymentOrderStatus paymentOrderStatus;
+  private com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus paymentOrderStatus;
 
   /**
    * Default constructor.  Note that this does not initialize fields
@@ -100,7 +102,7 @@
    * @param createdAt The new value for createdAt
    * @param paymentOrderStatus The new value for paymentOrderStatus
    */
-  public PaymentRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String customerId, java.lang.String orderId, java.math.BigDecimal price, java.time.Instant createdAt, PaymentOrderStatus paymentOrderStatus) {
+  public PaymentRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String customerId, java.lang.String orderId, java.math.BigDecimal price, java.time.Instant createdAt, com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus paymentOrderStatus) {
     this.id = id;
     this.sagaId = sagaId;
     this.customerId = customerId;
@@ -153,7 +155,7 @@
     case 3: orderId = value$ != null ? value$.toString() : null; break;
     case 4: price = (java.math.BigDecimal)value$; break;
     case 5: createdAt = (java.time.Instant)value$; break;
-    case 6: paymentOrderStatus = (PaymentOrderStatus)value$; break;
+    case 6: paymentOrderStatus = (com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus)value$; break;
     default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
     }
   }
@@ -264,7 +266,7 @@
    * Gets the value of the 'paymentOrderStatus' field.
    * @return The value of the 'paymentOrderStatus' field.
    */
-  public PaymentOrderStatus getPaymentOrderStatus() {
+  public com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus getPaymentOrderStatus() {
     return paymentOrderStatus;
   }
 
@@ -273,7 +275,7 @@
    * Sets the value of the 'paymentOrderStatus' field.
    * @param value the value to set.
    */
-  public void setPaymentOrderStatus(PaymentOrderStatus value) {
+  public void setPaymentOrderStatus(com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus value) {
     this.paymentOrderStatus = value;
   }
 
@@ -281,8 +283,8 @@
    * Creates a new PaymentRequestAvroModel RecordBuilder.
    * @return A new PaymentRequestAvroModel RecordBuilder
    */
-  public static PaymentRequestAvroModel.Builder newBuilder() {
-    return new PaymentRequestAvroModel.Builder();
+  public static com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder newBuilder() {
+    return new com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder();
   }
 
   /**
@@ -290,11 +292,11 @@
    * @param other The existing builder to copy.
    * @return A new PaymentRequestAvroModel RecordBuilder
    */
-  public static PaymentRequestAvroModel.Builder newBuilder(PaymentRequestAvroModel.Builder other) {
+  public static com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder other) {
     if (other == null) {
-      return new PaymentRequestAvroModel.Builder();
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder();
     } else {
-      return new PaymentRequestAvroModel.Builder(other);
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder(other);
     }
   }
 
@@ -303,11 +305,11 @@
    * @param other The existing instance to copy.
    * @return A new PaymentRequestAvroModel RecordBuilder
    */
-  public static PaymentRequestAvroModel.Builder newBuilder(PaymentRequestAvroModel other) {
+  public static com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel other) {
     if (other == null) {
-      return new PaymentRequestAvroModel.Builder();
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder();
     } else {
-      return new PaymentRequestAvroModel.Builder(other);
+      return new com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder(other);
     }
   }
 
@@ -324,7 +326,7 @@
     private java.lang.String orderId;
     private java.math.BigDecimal price;
     private java.time.Instant createdAt;
-    private PaymentOrderStatus paymentOrderStatus;
+    private com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus paymentOrderStatus;
 
     /** Creates a new Builder */
     private Builder() {
@@ -335,7 +337,7 @@
      * Creates a Builder by copying an existing Builder.
      * @param other The existing Builder to copy.
      */
-    private Builder(PaymentRequestAvroModel.Builder other) {
+    private Builder(com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder other) {
       super(other);
       if (isValidValue(fields()[0], other.id)) {
         this.id = data().deepCopy(fields()[0].schema(), other.id);
@@ -371,7 +373,7 @@
      * Creates a Builder by copying an existing PaymentRequestAvroModel instance
      * @param other The existing instance to copy.
      */
-    private Builder(PaymentRequestAvroModel other) {
+    private Builder(com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel other) {
       super(SCHEMA$, MODEL$);
       if (isValidValue(fields()[0], other.id)) {
         this.id = data().deepCopy(fields()[0].schema(), other.id);
@@ -417,7 +419,7 @@
       * @param value The value of 'id'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setId(java.lang.String value) {
       validate(fields()[0], value);
       this.id = value;
       fieldSetFlags()[0] = true;
@@ -437,7 +439,7 @@
       * Clears the value of the 'id' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearId() {
       id = null;
       fieldSetFlags()[0] = false;
       return this;
@@ -457,7 +459,7 @@
       * @param value The value of 'sagaId'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setSagaId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setSagaId(java.lang.String value) {
       validate(fields()[1], value);
       this.sagaId = value;
       fieldSetFlags()[1] = true;
@@ -477,7 +479,7 @@
       * Clears the value of the 'sagaId' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearSagaId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearSagaId() {
       sagaId = null;
       fieldSetFlags()[1] = false;
       return this;
@@ -497,7 +499,7 @@
       * @param value The value of 'customerId'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setCustomerId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setCustomerId(java.lang.String value) {
       validate(fields()[2], value);
       this.customerId = value;
       fieldSetFlags()[2] = true;
@@ -517,7 +519,7 @@
       * Clears the value of the 'customerId' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearCustomerId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearCustomerId() {
       customerId = null;
       fieldSetFlags()[2] = false;
       return this;
@@ -537,7 +539,7 @@
       * @param value The value of 'orderId'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setOrderId(java.lang.String value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setOrderId(java.lang.String value) {
       validate(fields()[3], value);
       this.orderId = value;
       fieldSetFlags()[3] = true;
@@ -557,7 +559,7 @@
       * Clears the value of the 'orderId' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearOrderId() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearOrderId() {
       orderId = null;
       fieldSetFlags()[3] = false;
       return this;
@@ -577,7 +579,7 @@
       * @param value The value of 'price'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setPrice(java.math.BigDecimal value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setPrice(java.math.BigDecimal value) {
       validate(fields()[4], value);
       this.price = value;
       fieldSetFlags()[4] = true;
@@ -597,7 +599,7 @@
       * Clears the value of the 'price' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearPrice() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearPrice() {
       price = null;
       fieldSetFlags()[4] = false;
       return this;
@@ -617,7 +619,7 @@
       * @param value The value of 'createdAt'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
       validate(fields()[5], value);
       this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
       fieldSetFlags()[5] = true;
@@ -637,7 +639,7 @@
       * Clears the value of the 'createdAt' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearCreatedAt() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearCreatedAt() {
       fieldSetFlags()[5] = false;
       return this;
     }
@@ -646,7 +648,7 @@
       * Gets the value of the 'paymentOrderStatus' field.
       * @return The value.
       */
-    public PaymentOrderStatus getPaymentOrderStatus() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus getPaymentOrderStatus() {
       return paymentOrderStatus;
     }
 
@@ -656,7 +658,7 @@
       * @param value The value of 'paymentOrderStatus'.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder setPaymentOrderStatus(PaymentOrderStatus value) {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder setPaymentOrderStatus(com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus value) {
       validate(fields()[6], value);
       this.paymentOrderStatus = value;
       fieldSetFlags()[6] = true;
@@ -676,7 +678,7 @@
       * Clears the value of the 'paymentOrderStatus' field.
       * @return This builder.
       */
-    public PaymentRequestAvroModel.Builder clearPaymentOrderStatus() {
+    public com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel.Builder clearPaymentOrderStatus() {
       paymentOrderStatus = null;
       fieldSetFlags()[6] = false;
       return this;
@@ -693,7 +695,7 @@
         record.orderId = fieldSetFlags()[3] ? this.orderId : (java.lang.String) defaultValue(fields()[3]);
         record.price = fieldSetFlags()[4] ? this.price : (java.math.BigDecimal) defaultValue(fields()[4]);
         record.createdAt = fieldSetFlags()[5] ? this.createdAt : (java.time.Instant) defaultValue(fields()[5]);
-        record.paymentOrderStatus = fieldSetFlags()[6] ? this.paymentOrderStatus : (PaymentOrderStatus) defaultValue(fields()[6]);
+        record.paymentOrderStatus = fieldSetFlags()[6] ? this.paymentOrderStatus : (com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus) defaultValue(fields()[6]);
         return record;
       } catch (org.apache.avro.AvroMissingFieldException e) {
         throw e;
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyOrderStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n@org.apache.avro.specific.AvroGenerated\r\npublic enum RestaurantOrderStatus implements org.apache.avro.generic.GenericEnumSymbol<RestaurantOrderStatus> {\r\n  PAID  ;\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"RestaurantOrderStatus\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"symbols\\\":[\\\"PAID\\\"]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyOrderStatus.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyOrderStatus.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyOrderStatus.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyOrderStatus.java	
@@ -5,9 +5,9 @@
  */
 package com.online.medicine.application.kafka.order.avro.model;
 @org.apache.avro.specific.AvroGenerated
-public enum RestaurantOrderStatus implements org.apache.avro.generic.GenericEnumSymbol<RestaurantOrderStatus> {
+public enum PharmacyOrderStatus implements org.apache.avro.generic.GenericEnumSymbol<PharmacyOrderStatus> {
   PAID  ;
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"RestaurantOrderStatus\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"symbols\":[\"PAID\"]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"PharmacyOrderStatus\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"symbols\":[\"PAID\"]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public org.apache.avro.Schema getSchema() { return SCHEMA$; }
 }
Index: infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/exception/KafkaProducerException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.kafka.producer.exception;\r\n\r\npublic class KafkaProducerException extends RuntimeException{\r\n    public KafkaProducerException(String message) {\r\n        super(message);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/exception/KafkaProducerException.java b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/exception/KafkaProducerException.java
--- a/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/exception/KafkaProducerException.java	
+++ b/infrastructure/kafka/kafka-producer/src/main/java/com/online/medicine/application/kafka/producer/exception/KafkaProducerException.java	
@@ -1,8 +1,8 @@
 package com.online.medicine.application.kafka.producer.exception;
 
-public class KafkaProducerException extends RuntimeException{
+public class KafkaProducerException extends RuntimeException {
+
     public KafkaProducerException(String message) {
         super(message);
     }
-
 }
Index: order-service/order-container/src/main/java/com/online/medicine/application/order/service/domain/OrderServiceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.domain;\r\n\r\nimport com.online.medicine.kafka.config.data.KafkaConfigData;\r\nimport com.online.medicine.kafka.config.data.KafkaConsumerConfigData;\r\nimport com.online.medicine.kafka.config.data.KafkaProducerConfigData;\r\nimport org.springframework.boot.CommandLineRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.autoconfigure.domain.EntityScan;\r\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\r\n\r\n//@EnableJpaRepositories(basePackages = { \"com.food.ordering.system.order.service.dataaccess\", \"com.food.ordering.system.dataaccess\" })\r\n@EnableConfigurationProperties({\r\n        KafkaConfigData.class,\r\n        KafkaConsumerConfigData.class,\r\n        KafkaProducerConfigData.class // ✅ This was missing\r\n})\r\n@SpringBootApplication(scanBasePackages = \"com.online.medicine.application\")\r\n@EntityScan(basePackages = {\r\n        \"com.online.medicine.application.order.service.dataaccess\",\r\n        \"com.online.medicine.application.dataaccess\"\r\n})\r\n@EnableJpaRepositories(\"com.online.medicine.application.order.service.dataaccess\")\r\npublic class OrderServiceApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(OrderServiceApplication.class, args);\r\n    }\r\n\r\n    @Bean\r\n    public CommandLineRunner debugBeans(KafkaConfigData kafkaConfigData,\r\n                                        KafkaConsumerConfigData kafkaConsumerConfigData,\r\n                                        KafkaProducerConfigData kafkaProducerConfigData) {\r\n        return args -> {\r\n            System.out.println(\"✅ KafkaConfigData: \" + kafkaConfigData.getBootstrapServers());\r\n            System.out.println(\"✅ KafkaConsumerConfigData: \" + kafkaConsumerConfigData.getKeyDeserializer());\r\n            System.out.println(\"✅ KafkaProducerConfigData: \" + kafkaProducerConfigData.getKeySerializerClass());\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-container/src/main/java/com/online/medicine/application/order/service/domain/OrderServiceApplication.java b/order-service/order-container/src/main/java/com/online/medicine/application/order/service/domain/OrderServiceApplication.java
--- a/order-service/order-container/src/main/java/com/online/medicine/application/order/service/domain/OrderServiceApplication.java	
+++ b/order-service/order-container/src/main/java/com/online/medicine/application/order/service/domain/OrderServiceApplication.java	
@@ -1,8 +1,9 @@
 package com.online.medicine.application.order.service.domain;
 
-import com.online.medicine.kafka.config.data.KafkaConfigData;
-import com.online.medicine.kafka.config.data.KafkaConsumerConfigData;
-import com.online.medicine.kafka.config.data.KafkaProducerConfigData;
+
+import com.online.medicine.application.kafka.config.data.KafkaConfigData;
+import com.online.medicine.application.kafka.config.data.KafkaConsumerConfigData;
+import com.online.medicine.application.kafka.config.data.KafkaProducerConfigData;
 import org.springframework.boot.CommandLineRunner;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -11,6 +12,7 @@
 import org.springframework.context.annotation.Bean;
 import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
 
+
 //@EnableJpaRepositories(basePackages = { "com.food.ordering.system.order.service.dataaccess", "com.food.ordering.system.dataaccess" })
 @EnableConfigurationProperties({
         KafkaConfigData.class,
Index: order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/mapper/OrderMessagingDataMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.messaging.mapper;\r\n\r\nimport com.online.medicine.application.kafka.order.avro.model.*;\r\nimport com.online.medicine.application.order.service.domain.dto.messaging.PaymentResponse;\r\nimport com.online.medicine.application.order.service.domain.dto.messaging.PharmacyApprovalResponse;\r\nimport com.online.medicine.domain.order.service.domain.entity.Order;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderCancelledEvent;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderCreatedEvent;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderPaidEvent;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.UUID;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static com.online.medicine.application.kafka.order.avro.model.PaymentOrderStatus.PENDING;\r\n\r\n@Component\r\npublic class OrderMessagingDataMapper {\r\n    public PaymentRequestAvroModel orderCreatedEventToPaymentRequestAvroModel(OrderCreatedEvent orderCreatedEvent){\r\n        Order order=orderCreatedEvent.getOrder();\r\n        return PaymentRequestAvroModel.newBuilder()\r\n                .setId(UUID.randomUUID().toString())\r\n                .setSagaId(\"\")\r\n                .setCustomerId(order.getCustomerId().getValue().toString())\r\n                .setOrderId(order.getId().getValue().toString())\r\n                .setPrice(order.getPrice().getAmount())\r\n                .setCreatedAt(orderCreatedEvent.getCreatedAt().toInstant())\r\n                .setPaymentOrderStatus(PENDING)\r\n                .build();\r\n\r\n    }\r\n    public PaymentRequestAvroModel orderCancelledEventToPaymentRequestAvroModel(OrderCancelledEvent orderCancelledEvent){\r\n        Order order=orderCancelledEvent.getOrder();\r\n        return PaymentRequestAvroModel.newBuilder()\r\n                .setId(UUID.randomUUID().toString())\r\n                .setSagaId(\"\")\r\n                .setCustomerId(order.getCustomerId().getValue().toString())\r\n                .setOrderId(order.getId().getValue().toString())\r\n                .setPrice(order.getPrice().getAmount())\r\n                .setCreatedAt(orderCancelledEvent.getCreatedAt().toInstant())\r\n                .setPaymentOrderStatus(PENDING)\r\n                .build();\r\n\r\n    }\r\n    public PharmacyApprovalRequestAvroModel orderPaidEventToPharmacyApprovalRequestAvroModel(OrderPaidEvent orderPaidEvent) {\r\n        Order order = orderPaidEvent.getOrder();\r\n        return PharmacyApprovalRequestAvroModel.newBuilder()\r\n               .setId(UUID.randomUUID().toString())\r\n               .setSagaId(\"\")\r\n                .setOrderId(order.getId().getValue().toString())\r\n                .setPharmacyId(order.getPharmacyId().getValue().toString())\r\n                .setOrderId(order.getId().getValue().toString())\r\n                .setPharmacyOrderStatus(PharmacyOrderStatus.valueOf(order.getOrderStatus().name()))\r\n                .setRemedies(order.getItems().stream()\r\n                       .map(orderItem -> Remedy.newBuilder()\r\n                               .setId(orderItem.getRemedy().getId().getValue().toString())\r\n                               .setQuantity(orderItem.getQuantity())\r\n                               .build()).collect(Collectors.toList()))\r\n\r\n               .setPrice(order.getPrice().getAmount())\r\n               .setCreatedAt(orderPaidEvent.getCreatedAt().toInstant())\r\n                .setPharmacyOrderStatus(PharmacyOrderStatus.PAID)\r\n               .build();\r\n    }\r\n    public PaymentResponse paymentResponseAvroModelToPaymentResponse(PaymentResponseAvroModel paymentResponseAvroModel){\r\n        return PaymentResponse.builder()\r\n               .paymentId(paymentResponseAvroModel.getPaymentId())\r\n               .orderId(paymentResponseAvroModel.getOrderId())\r\n               .customerId(paymentResponseAvroModel.getCustomerId())\r\n               .price(paymentResponseAvroModel.getPrice())\r\n               .paymentStatus(com.online.medicine.application.order.service.domain.valueobject.PaymentStatus.valueOf(paymentResponseAvroModel.getPaymentStatus().name()))\r\n               .failureMessages(paymentResponseAvroModel.getFailureMessages())\r\n               .build();\r\n    }\r\n    public PharmacyApprovalResponse\r\n    approvalResponseAvroModelToApprovalResponse(PharmacyApprovalResponseAvroModel\r\n                                                        pharmacyApprovalResponseAvroModel) {\r\n        return PharmacyApprovalResponse.builder()\r\n                .id(pharmacyApprovalResponseAvroModel.getId())\r\n                .sagaId(pharmacyApprovalResponseAvroModel.getSagaId())\r\n                .pharmacyId(pharmacyApprovalResponseAvroModel.getRestaurantId())\r\n                .orderId(pharmacyApprovalResponseAvroModel.getOrderId())\r\n                .createdAt(pharmacyApprovalResponseAvroModel.getCreatedAt())\r\n                .orderApprovalStatus(com.online.medicine.application.order.service.domain.valueobject.OrderApprovalStatus.valueOf(\r\n                        pharmacyApprovalResponseAvroModel.getOrderApprovalStatus().name()))\r\n                .failureMessages(pharmacyApprovalResponseAvroModel.getFailureMessages())\r\n                .build();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/mapper/OrderMessagingDataMapper.java b/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/mapper/OrderMessagingDataMapper.java
--- a/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/mapper/OrderMessagingDataMapper.java	
+++ b/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/mapper/OrderMessagingDataMapper.java	
@@ -1,8 +1,14 @@
 package com.online.medicine.application.order.service.messaging.mapper;
 
-import com.online.medicine.application.kafka.order.avro.model.*;
+import com.online.medicine.application.kafka.order.avro.model.PaymentRequestAvroModel;
+import com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel;
+import com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalRequestAvroModel;
+import com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel;
+import com.online.medicine.application.kafka.order.avro.model.PharmacyOrderStatus;
+
 import com.online.medicine.application.order.service.domain.dto.messaging.PaymentResponse;
 import com.online.medicine.application.order.service.domain.dto.messaging.PharmacyApprovalResponse;
+import com.online.medicine.application.kafka.order.avro.model.Medicine;
 import com.online.medicine.domain.order.service.domain.entity.Order;
 import com.online.medicine.domain.order.service.domain.event.OrderCancelledEvent;
 import com.online.medicine.domain.order.service.domain.event.OrderCreatedEvent;
@@ -50,9 +56,10 @@
                 .setOrderId(order.getId().getValue().toString())
                 .setPharmacyId(order.getPharmacyId().getValue().toString())
                 .setOrderId(order.getId().getValue().toString())
-                .setPharmacyOrderStatus(PharmacyOrderStatus.valueOf(order.getOrderStatus().name()))
-                .setRemedies(order.getItems().stream()
-                       .map(orderItem -> Remedy.newBuilder()
+                .setPharmacyOrderStatus(PharmacyOrderStatus.PAID)
+
+                .setMedicines(order.getItems().stream()
+                       .map(orderItem -> Medicine.newBuilder()
                                .setId(orderItem.getRemedy().getId().getValue().toString())
                                .setQuantity(orderItem.getQuantity())
                                .build()).collect(Collectors.toList()))
@@ -78,7 +85,7 @@
         return PharmacyApprovalResponse.builder()
                 .id(pharmacyApprovalResponseAvroModel.getId())
                 .sagaId(pharmacyApprovalResponseAvroModel.getSagaId())
-                .pharmacyId(pharmacyApprovalResponseAvroModel.getRestaurantId())
+                .pharmacyId(pharmacyApprovalResponseAvroModel.getPharmacyId())
                 .orderId(pharmacyApprovalResponseAvroModel.getOrderId())
                 .createdAt(pharmacyApprovalResponseAvroModel.getCreatedAt())
                 .orderApprovalStatus(com.online.medicine.application.order.service.domain.valueobject.OrderApprovalStatus.valueOf(
Index: infrastructure/kafka/kafka-model/src/main/java/Main.java
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/Main.java b/infrastructure/kafka/kafka-model/src/main/java/Main.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-model/src/main/java/Main.java	
+++ /dev/null	
@@ -1,4 +0,0 @@
-package main.java;
-
-public class Main {
-}
Index: order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Medicine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.domain.order.service.domain.entity;\r\n\r\nimport com.online.medicine.application.order.service.domain.entity.BaseEntity;\r\nimport com.online.medicine.application.order.service.domain.valueobject.Money;\r\nimport com.online.medicine.application.order.service.domain.valueobject.RemedyId;\r\n\r\npublic class Medicine extends BaseEntity<RemedyId> {\r\n    private String name;\r\n    private Money price;\r\n\r\n    public Medicine(RemedyId remedyId, String name, Money price) {\r\n        super.setId(remedyId);\r\n        this.name = name;\r\n        this.price = price;\r\n    }\r\n\r\n    public Medicine(RemedyId remedyId) {\r\n        super.setId(remedyId);\r\n    }\r\n\r\n    public void updateWithConfirmedNameAndPrice(String name, Money price) {\r\n        this.name = name;\r\n        this.price = price;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public Money getPrice() {\r\n        return price;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Medicine.java b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Medicine.java
--- a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Medicine.java	
+++ b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Medicine.java	
@@ -2,21 +2,22 @@
 
 import com.online.medicine.application.order.service.domain.entity.BaseEntity;
 import com.online.medicine.application.order.service.domain.valueobject.Money;
-import com.online.medicine.application.order.service.domain.valueobject.RemedyId;
+import com.online.medicine.application.order.service.domain.valueobject.MedicineId;
 
-public class Medicine extends BaseEntity<RemedyId> {
+public class Medicine extends BaseEntity<MedicineId> {
     private String name;
     private Money price;
 
-    public Medicine(RemedyId remedyId, String name, Money price) {
-        super.setId(remedyId);
+    public Medicine(MedicineId medicineId, String name, Money price) {
+        super.setId(medicineId);
         this.name = name;
         this.price = price;
     }
 
-    public Medicine(RemedyId remedyId) {
-        super.setId(remedyId);
+    public Medicine(MedicineId medicineId) {
+        super.setId(medicineId);
     }
+
 
     public void updateWithConfirmedNameAndPrice(String name, Money price) {
         this.name = name;
Index: order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Pharmacy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.domain.order.service.domain.entity;\r\n\r\nimport com.online.medicine.application.order.service.domain.entity.AggregateRoot;\r\nimport com.online.medicine.application.order.service.domain.valueobject.PharmacyId;\r\n\r\nimport java.util.List;\r\n\r\npublic class Pharmacy extends AggregateRoot<PharmacyId> {\r\n    private final List<Remedy> remedies;\r\n    private boolean active;\r\n\r\n    private Pharmacy(Builder builder) {\r\n        super.setId(builder.pharmacyId);\r\n        remedies = builder.remedies;\r\n        active = builder.active;\r\n    }\r\n\r\n    public static Builder builder() {\r\n        return new Builder();\r\n    }\r\n\r\n    public List<Remedy> getRemedies() {\r\n        return remedies;\r\n    }\r\n\r\n    public boolean isActive() {\r\n        return active;\r\n    }\r\n\r\n    public static final class Builder {\r\n        private PharmacyId pharmacyId;\r\n        private List<Remedy> remedies;\r\n        private boolean active;\r\n\r\n        private Builder() {\r\n        }\r\n\r\n        public Builder pharmacyId(PharmacyId val) {\r\n            pharmacyId = val;\r\n            return this;\r\n        }\r\n\r\n        public Builder remedies(List<Remedy> val) {\r\n            remedies = val;\r\n            return this;\r\n        }\r\n\r\n        public Builder active(boolean val) {\r\n            active = val;\r\n            return this;\r\n        }\r\n\r\n        public Pharmacy build() {\r\n            return new Pharmacy(this);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Pharmacy.java b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Pharmacy.java
--- a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Pharmacy.java	
+++ b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/Pharmacy.java	
@@ -6,7 +6,7 @@
 import java.util.List;
 
 public class Pharmacy extends AggregateRoot<PharmacyId> {
-    private final List<Remedy> remedies;
+    private final List<Medicine> remedies;
     private boolean active;
 
     private Pharmacy(Builder builder) {
@@ -19,7 +19,7 @@
         return new Builder();
     }
 
-    public List<Remedy> getRemedies() {
+    public List<Medicine> getRemedies() {
         return remedies;
     }
 
@@ -29,7 +29,7 @@
 
     public static final class Builder {
         private PharmacyId pharmacyId;
-        private List<Remedy> remedies;
+        private List<Medicine> remedies;
         private boolean active;
 
         private Builder() {
@@ -40,7 +40,7 @@
             return this;
         }
 
-        public Builder remedies(List<Remedy> val) {
+        public Builder remedies(List<Medicine> val) {
             remedies = val;
             return this;
         }
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentOrderStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n@org.apache.avro.specific.AvroGenerated\r\npublic enum PaymentOrderStatus implements org.apache.avro.generic.GenericEnumSymbol<PaymentOrderStatus> {\r\n  PENDING, CANCELLED  ;\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"PaymentOrderStatus\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"symbols\\\":[\\\"PENDING\\\",\\\"CANCELLED\\\"]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentOrderStatus.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentOrderStatus.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentOrderStatus.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentOrderStatus.java	
@@ -7,7 +7,7 @@
 @org.apache.avro.specific.AvroGenerated
 public enum PaymentOrderStatus implements org.apache.avro.generic.GenericEnumSymbol<PaymentOrderStatus> {
   PENDING, CANCELLED  ;
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"PaymentOrderStatus\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"symbols\":[\"PENDING\",\"CANCELLED\"]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"PaymentOrderStatus\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"symbols\":[\"PENDING\",\"CANCELLED\"]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public org.apache.avro.Schema getSchema() { return SCHEMA$; }
 }
Index: order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PaymentResponseKafkaListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.messaging.listener.kafka;\r\n\r\nimport com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel;\r\nimport com.online.medicine.application.kafka.order.avro.model.PaymentStatus;\r\nimport com.online.medicine.application.order.service.domain.ports.input.message.listener.payment.PaymentResponseMessageListener;\r\nimport com.online.medicine.application.order.service.messaging.mapper.OrderMessagingDataMapper;\r\nimport com.online.medicine.kafka.consumer.KafkaConsumer;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.kafka.annotation.KafkaListener;\r\nimport org.springframework.kafka.support.KafkaHeaders;\r\nimport org.springframework.messaging.handler.annotation.Header;\r\nimport org.springframework.messaging.handler.annotation.Payload;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.List;\r\n@Component\r\n@Slf4j\r\npublic class PaymentResponseKafkaListener implements KafkaConsumer<PaymentResponseAvroModel> {\r\n\r\n   private final PaymentResponseMessageListener paymentResponseMessageListener;\r\n   private final OrderMessagingDataMapper orderMessagingDataMapper;\r\n\r\n    public PaymentResponseKafkaListener(PaymentResponseMessageListener paymentResponseMessageListener,\r\n                                        OrderMessagingDataMapper orderMessagingDataMapper) {\r\n        this.paymentResponseMessageListener = paymentResponseMessageListener;\r\n        this.orderMessagingDataMapper = orderMessagingDataMapper;\r\n    }\r\n\r\n    @KafkaListener(id = \"${kafka-consumer-config.payment-consumer-group-id}\",\r\n            topics = \"${order-service.payment-response-topic-name}\")\r\n    @Override\r\n    public void receive(@Payload List<PaymentResponseAvroModel> messages,\r\n                        @Header(KafkaHeaders.RECEIVED_MESSAGE_KEY) List<String> keys,\r\n                        @Header(KafkaHeaders.RECEIVED_PARTITION_ID)List<Integer> partitions,\r\n                        @Header(KafkaHeaders.OFFSET) List<Long> offsets) {\r\n        log.info(\"{} number of payment responses received with keys:{}, partitions:{} and offsets: {}\",\r\n                messages.size(), keys, partitions, offsets);\r\n\r\n        messages.forEach(paymentResponseAvroModel -> {\r\n            if (PaymentStatus.COMPLETED == paymentResponseAvroModel.getPaymentStatus()) {\r\n                log.info(\"Processing successful payment for order id: {}\", paymentResponseAvroModel.getOrderId());\r\n                paymentResponseMessageListener.paymentCompleted(orderMessagingDataMapper\r\n                        .paymentResponseAvroModelToPaymentResponse(paymentResponseAvroModel));\r\n            } else if (PaymentStatus.CANCELLED == paymentResponseAvroModel.getPaymentStatus() ||\r\n                    PaymentStatus.FAILED == paymentResponseAvroModel.getPaymentStatus()) {\r\n                log.info(\"Processing unsuccessful payment for order id: {}\", paymentResponseAvroModel.getOrderId());\r\n                paymentResponseMessageListener.paymentCancelled(orderMessagingDataMapper\r\n                        .paymentResponseAvroModelToPaymentResponse(paymentResponseAvroModel));\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PaymentResponseKafkaListener.java b/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PaymentResponseKafkaListener.java
--- a/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PaymentResponseKafkaListener.java	
+++ b/order-service/order-messaging/src/main/java/com/online/medicine/application/order/service/messaging/listener/kafka/PaymentResponseKafkaListener.java	
@@ -1,10 +1,11 @@
 package com.online.medicine.application.order.service.messaging.listener.kafka;
 
+import com.online.medicine.application.kafka.consumer.KafkaConsumer;
 import com.online.medicine.application.kafka.order.avro.model.PaymentResponseAvroModel;
 import com.online.medicine.application.kafka.order.avro.model.PaymentStatus;
 import com.online.medicine.application.order.service.domain.ports.input.message.listener.payment.PaymentResponseMessageListener;
 import com.online.medicine.application.order.service.messaging.mapper.OrderMessagingDataMapper;
-import com.online.medicine.kafka.consumer.KafkaConsumer;
+
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.kafka.annotation.KafkaListener;
 import org.springframework.kafka.support.KafkaHeaders;
Index: infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/config/KafkaConsumerConfig.java
===================================================================
diff --git a/infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/config/KafkaConsumerConfig.java b/infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/config/KafkaConsumerConfig.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-consumer/src/main/java/com/online/medicine/kafka/consumer/config/KafkaConsumerConfig.java	
+++ /dev/null	
@@ -1,66 +0,0 @@
-package com.online.medicine.kafka.consumer.config;
-
-import com.online.medicine.kafka.config.data.KafkaConfigData;
-import com.online.medicine.kafka.config.data.KafkaConsumerConfigData;
-import org.apache.avro.specific.SpecificRecordBase;
-import org.apache.kafka.clients.consumer.ConsumerConfig;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;
-import org.springframework.kafka.config.KafkaListenerContainerFactory;
-import org.springframework.kafka.core.ConsumerFactory;
-import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
-import org.springframework.kafka.listener.ConcurrentMessageListenerContainer;
-
-import java.io.Serializable;
-import java.util.HashMap;
-import java.util.Map;
-
-@Configuration
-public class KafkaConsumerConfig<K extends Serializable, V extends SpecificRecordBase> {
-
-    private final KafkaConfigData kafkaConfigData;
-    private final KafkaConsumerConfigData kafkaConsumerConfigData;
-
-    public KafkaConsumerConfig(KafkaConfigData kafkaConfigData,
-                               KafkaConsumerConfigData kafkaConsumerConfigData) {
-        this.kafkaConfigData = kafkaConfigData;
-        this.kafkaConsumerConfigData = kafkaConsumerConfigData;
-    }
-
-    @Bean
-    public Map<String, Object> consumerConfigs() {
-        Map<String, Object> props = new HashMap<>();
-        props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaConfigData.getBootstrapServers());
-        props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, kafkaConsumerConfigData.getKeyDeserializer());
-        props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, kafkaConsumerConfigData.getValueDeserializer());
-        props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, kafkaConsumerConfigData.getAutoOffsetReset());
-        props.put(kafkaConfigData.getSchemaRegistryUrlKey(), kafkaConfigData.getSchemaRegistryUrl());
-        props.put(kafkaConsumerConfigData.getSpecificAvroReaderKey(), kafkaConsumerConfigData.getSpecificAvroReader());
-        props.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, kafkaConsumerConfigData.getSessionTimeoutMs());
-        props.put(ConsumerConfig.HEARTBEAT_INTERVAL_MS_CONFIG, kafkaConsumerConfigData.getHeartbeatIntervalMs());
-        props.put(ConsumerConfig.MAX_POLL_INTERVAL_MS_CONFIG, kafkaConsumerConfigData.getMaxPollIntervalMs());
-        props.put(ConsumerConfig.MAX_PARTITION_FETCH_BYTES_CONFIG,
-                kafkaConsumerConfigData.getMaxPartitionFetchBytesDefault() *
-                        kafkaConsumerConfigData.getMaxPartitionFetchBytesBoostFactor());
-        props.put(ConsumerConfig.MAX_POLL_RECORDS_CONFIG, kafkaConsumerConfigData.getMaxPollRecords());
-        return props;
-    }
-
-    @Bean
-    public ConsumerFactory<K, V> consumerFactory() {
-        return new DefaultKafkaConsumerFactory<>(consumerConfigs());
-    }
-
-    @Bean
-    public KafkaListenerContainerFactory<ConcurrentMessageListenerContainer<K, V>> kafkaListenerContainerFactory(
-            ConsumerFactory<K, V> consumerFactory) { // ✅ Injected properly
-        ConcurrentKafkaListenerContainerFactory<K, V> factory = new ConcurrentKafkaListenerContainerFactory<>();
-        factory.setConsumerFactory(consumerFactory); // ✅ No manual method call
-        factory.setBatchListener(kafkaConsumerConfigData.getBatchListener());
-        factory.setConcurrency(kafkaConsumerConfigData.getConcurrencyLevel());
-        factory.setAutoStartup(kafkaConsumerConfigData.getAutoStartup());
-        factory.getContainerProperties().setPollTimeout(kafkaConsumerConfigData.getPollTimeoutMs());
-        return factory;
-    }
-}
Index: infrastructure/kafka/kafka-config-data/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <parent>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>kafka</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n\r\n    <artifactId>kafka-config-data</artifactId>\r\n\r\n    <dependencies>\r\n        <!-- Spring Boot Core Starter -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter</artifactId>\r\n        </dependency>\r\n\r\n        <!-- Lombok -->\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.34</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <!-- Configuration Processor (for @ConfigurationProperties support) -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-config-data/pom.xml b/infrastructure/kafka/kafka-config-data/pom.xml
--- a/infrastructure/kafka/kafka-config-data/pom.xml	
+++ b/infrastructure/kafka/kafka-config-data/pom.xml	
@@ -2,37 +2,27 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
     <parent>
-        <groupId>com.online.medicine.application</groupId>
         <artifactId>kafka</artifactId>
+        <groupId>com.online.medicine.application</groupId>
         <version>1.0-SNAPSHOT</version>
     </parent>
+    <modelVersion>4.0.0</modelVersion>
 
     <artifactId>kafka-config-data</artifactId>
 
     <dependencies>
-        <!-- Spring Boot Core Starter -->
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter</artifactId>
         </dependency>
-
-        <!-- Lombok -->
         <dependency>
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
-            <version>1.18.34</version>
-            <scope>provided</scope>
-        </dependency>
-
-        <!-- Configuration Processor (for @ConfigurationProperties support) -->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-configuration-processor</artifactId>
-            <optional>true</optional>
+            <version>1.18.38</version>
+            <scope>compile</scope>
         </dependency>
     </dependencies>
 
-</project>
+
+</project>
\ No newline at end of file
Index: infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaProducerConfigData.java
===================================================================
diff --git a/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaProducerConfigData.java b/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaProducerConfigData.java
deleted file mode 100644
--- a/infrastructure/kafka/kafka-config-data/src/main/java/com/online/medicine/kafka/config/data/KafkaProducerConfigData.java	
+++ /dev/null	
@@ -1,20 +0,0 @@
-package com.online.medicine.kafka.config.data;
-
-import lombok.Data;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-import org.springframework.context.annotation.Configuration;
-
-@Data
-@Configuration
-@ConfigurationProperties(prefix = "kafka-producer-config")
-public class KafkaProducerConfigData {
-    private String keySerializerClass;
-    private String valueSerializerClass;
-    private String compressionType;
-    private String acks;
-    private Integer batchSize;
-    private Integer batchSizeBoostFactor;
-    private Integer lingerMs;
-    private Integer requestTimeoutMs;
-    private Integer retryCount;
-}
\ No newline at end of file
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/OrderApprovalStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.kafka.order.avro.model;\r\n\r\npublic enum OrderApprovalStatus implements org.apache.avro.generic.GenericEnumSymbol<OrderApprovalStatus> {\r\n    APPROVED, REJECTED  ;\r\n    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"OrderApprovalStatus\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"symbols\\\":[\\\"APPROVED\\\",\\\"REJECTED\\\"]}\");\r\n    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n    public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/OrderApprovalStatus.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/OrderApprovalStatus.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/OrderApprovalStatus.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/OrderApprovalStatus.java	
@@ -1,8 +1,13 @@
+/**
+ * Autogenerated by Avro
+ *
+ * DO NOT EDIT DIRECTLY
+ */
 package com.online.medicine.application.kafka.order.avro.model;
-
+@org.apache.avro.specific.AvroGenerated
 public enum OrderApprovalStatus implements org.apache.avro.generic.GenericEnumSymbol<OrderApprovalStatus> {
-    APPROVED, REJECTED  ;
-    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"OrderApprovalStatus\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"symbols\":[\"APPROVED\",\"REJECTED\"]}");
-    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
-    public org.apache.avro.Schema getSchema() { return SCHEMA$; }
+  APPROVED, REJECTED  ;
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"OrderApprovalStatus\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"symbols\":[\"APPROVED\",\"REJECTED\"]}");
+  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
+  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
 }
Index: order-service/order-domain/order-application-service/src/main/java/com/online/medicine/application/order/service/domain/mapper/OrderDataMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.domain.mapper;\r\n\r\nimport com.online.medicine.application.order.service.domain.valueobject.*;\r\nimport com.online.medicine.application.order.service.domain.dto.create.CreateOrderCommand;\r\nimport com.online.medicine.application.order.service.domain.dto.create.CreateOrderResponse;\r\nimport com.online.medicine.application.order.service.domain.dto.create.OrderAddress;\r\n\r\nimport com.online.medicine.application.order.service.domain.dto.track.TrackOrderResponse;\r\nimport com.online.medicine.domain.order.service.domain.entity.*;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderCancelledEvent;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderCreatedEvent;\r\nimport com.online.medicine.domain.order.service.domain.event.OrderPaidEvent;\r\n\r\nimport com.online.medicine.domain.order.service.domain.valueobject.StreetAddress;\r\nimport com.online.medicine.domain.order.service.domain.valueobject.TrackingId;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.List;\r\nimport java.util.UUID;\r\nimport java.util.stream.Collectors;\r\n\r\n@Component\r\npublic class OrderDataMapper {\r\n\r\n    public Pharmacy createOrderCommandToPharmacy(CreateOrderCommand createOrderCommand) {\r\n        return Pharmacy.builder()\r\n                .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))\r\n                .remedies(createOrderCommand.getItems().stream().map(orderItem ->\r\n                                new Remedy(new RemedyId(orderItem.getRemedyId())))\r\n                        .collect(Collectors.toList()))\r\n                .build();\r\n    }\r\n\r\n    public Order createOrderCommandToOrder(CreateOrderCommand createOrderCommand) {\r\n        return Order.builder()\r\n                .customerId(new CustomerId(createOrderCommand.getCustomerId()))\r\n                .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))\r\n                .deliveryAddress(orderAddressToStreetAddress(createOrderCommand.getAddress()))\r\n                .price(new Money(createOrderCommand.getPrice()))\r\n                .items(orderItemsToOrderItemEntities(createOrderCommand.getItems()))\r\n                .build();\r\n    }\r\n\r\n    public CreateOrderResponse orderToCreateOrderResponse(Order order, String message) {\r\n        if (order.getTrackingId() == null) {\r\n            throw new IllegalStateException(\"Order Tracking ID must not be null\");\r\n        }\r\n\r\n        return CreateOrderResponse.builder()\r\n                .orderTrackingId(order.getTrackingId().getValue())\r\n                .orderStatus(order.getOrderStatus())\r\n                .message(message)\r\n                .build();\r\n    }\r\n\r\n\r\n    public TrackOrderResponse orderToTrackOrderResponse(Order order) {\r\n        return TrackOrderResponse.builder()\r\n                .orderTrackingId(order.getTrackingId().getValue())\r\n                .orderStatus(order.getOrderStatus())\r\n                .failureMessages(order.getFailureMessages())\r\n                .build();\r\n    }\r\n\r\n\r\n\r\n//    public OrderPaymentEventPayload orderCreatedEventToOrderPaymentEventPayload(OrderCreatedEvent orderCreatedEvent) {\r\n//        return OrderPaymentEventPayload.builder()\r\n//                .customerId(orderCreatedEvent.getOrder().getCustomerId().getValue().toString())\r\n//                .orderId(orderCreatedEvent.getOrder().getId().getValue().toString())\r\n//                .price(orderCreatedEvent.getOrder().getPrice().getAmount())\r\n//                .createdAt(orderCreatedEvent.getCreatedAt())\r\n//                .paymentOrderStatus(PaymentOrderStatus.PENDING.name())\r\n//                .build();\r\n//    }\r\n\r\n//    public OrderPaymentEventPayload orderCancelledEventToOrderPaymentEventPayload(OrderCancelledEvent\r\n//                                                                                          orderCancelledEvent) {\r\n//        return OrderPaymentEventPayload.builder()\r\n//                .customerId(orderCancelledEvent.getOrder().getCustomerId().getValue().toString())\r\n//                .orderId(orderCancelledEvent.getOrder().getId().getValue().toString())\r\n//                .price(orderCancelledEvent.getOrder().getPrice().getAmount())\r\n//                .createdAt(orderCancelledEvent.getCreatedAt())\r\n//                .paymentOrderStatus(PaymentOrderStatus.CANCELLED.name())\r\n//                .build();\r\n//    }\r\n\r\n//    public OrderApprovalEventPayload orderPaidEventToOrderApprovalEventPayload(OrderPaidEvent orderPaidEvent) {\r\n//        return OrderApprovalEventPayload.builder()\r\n//                .orderId(orderPaidEvent.getOrder().getId().getValue().toString())\r\n//                .restaurantId(orderPaidEvent.getOrder().getRestaurantId().getValue().toString())\r\n//                .restaurantOrderStatus(RestaurantOrderStatus.PAID.name())\r\n//                .products(orderPaidEvent.getOrder().getItems().stream().map(orderItem ->\r\n//                        OrderApprovalEventProduct.builder()\r\n//                                .id(orderItem.getProduct().getId().getValue().toString())\r\n//                                .quantity(orderItem.getQuantity())\r\n//                                .build()).collect(Collectors.toList()))\r\n//                .price(orderPaidEvent.getOrder().getPrice().getAmount())\r\n//                .createdAt(orderPaidEvent.getCreatedAt())\r\n//                .build();\r\n//    }\r\n\r\n//    public Customer customerModelToCustomer(CustomerModel customerModel) {\r\n//        return new Customer(new CustomerId(UUID.fromString(customerModel.getId())),\r\n//                customerModel.getUsername(),\r\n//                customerModel.getFirstName(),\r\n//                customerModel.getLastName());\r\n//    }\r\n\r\n    private List<OrderItem> orderItemsToOrderItemEntities(\r\n            List<com.online.medicine.application.order.service.domain.dto.create.OrderItem> orderItems) {\r\n        return orderItems.stream()\r\n                .map(orderItem ->\r\n                        OrderItem.builder()\r\n                                .remedy(new Remedy(new RemedyId(orderItem.getRemedyId())))\r\n                                .price(new Money(orderItem.getPrice()))\r\n                                .quantity(orderItem.getQuantity())\r\n                                .subTotal(new Money(orderItem.getSubTotal()))\r\n                                .build()).collect(Collectors.toList());\r\n    }\r\n\r\n    private StreetAddress orderAddressToStreetAddress(OrderAddress orderAddress) {\r\n        return new StreetAddress(\r\n                UUID.randomUUID(),\r\n                orderAddress.getStreet(),\r\n                orderAddress.getPostalCode(),\r\n                orderAddress.getCity()\r\n        );\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-domain/order-application-service/src/main/java/com/online/medicine/application/order/service/domain/mapper/OrderDataMapper.java b/order-service/order-domain/order-application-service/src/main/java/com/online/medicine/application/order/service/domain/mapper/OrderDataMapper.java
--- a/order-service/order-domain/order-application-service/src/main/java/com/online/medicine/application/order/service/domain/mapper/OrderDataMapper.java	
+++ b/order-service/order-domain/order-application-service/src/main/java/com/online/medicine/application/order/service/domain/mapper/OrderDataMapper.java	
@@ -7,12 +7,8 @@
 
 import com.online.medicine.application.order.service.domain.dto.track.TrackOrderResponse;
 import com.online.medicine.domain.order.service.domain.entity.*;
-import com.online.medicine.domain.order.service.domain.event.OrderCancelledEvent;
-import com.online.medicine.domain.order.service.domain.event.OrderCreatedEvent;
-import com.online.medicine.domain.order.service.domain.event.OrderPaidEvent;
 
 import com.online.medicine.domain.order.service.domain.valueobject.StreetAddress;
-import com.online.medicine.domain.order.service.domain.valueobject.TrackingId;
 import org.springframework.stereotype.Component;
 
 import java.util.List;
@@ -26,7 +22,7 @@
         return Pharmacy.builder()
                 .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))
                 .remedies(createOrderCommand.getItems().stream().map(orderItem ->
-                                new Remedy(new RemedyId(orderItem.getRemedyId())))
+                                new Medicine(new MedicineId(orderItem.getRemedyId())))
                         .collect(Collectors.toList()))
                 .build();
     }
@@ -112,7 +108,7 @@
         return orderItems.stream()
                 .map(orderItem ->
                         OrderItem.builder()
-                                .remedy(new Remedy(new RemedyId(orderItem.getRemedyId())))
+                                .remedy(new Medicine(new MedicineId(orderItem.getRemedyId())))
                                 .price(new Money(orderItem.getPrice()))
                                 .quantity(orderItem.getQuantity())
                                 .subTotal(new Money(orderItem.getSubTotal()))
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n@org.apache.avro.specific.AvroGenerated\r\npublic enum PaymentStatus implements org.apache.avro.generic.GenericEnumSymbol<PaymentStatus> {\r\n  COMPLETED, CANCELLED, FAILED  ;\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"PaymentStatus\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"symbols\\\":[\\\"COMPLETED\\\",\\\"CANCELLED\\\",\\\"FAILED\\\"]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentStatus.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentStatus.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentStatus.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PaymentStatus.java	
@@ -7,7 +7,7 @@
 @org.apache.avro.specific.AvroGenerated
 public enum PaymentStatus implements org.apache.avro.generic.GenericEnumSymbol<PaymentStatus> {
   COMPLETED, CANCELLED, FAILED  ;
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"PaymentStatus\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"symbols\":[\"COMPLETED\",\"CANCELLED\",\"FAILED\"]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"PaymentStatus\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"symbols\":[\"COMPLETED\",\"CANCELLED\",\"FAILED\"]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public org.apache.avro.Schema getSchema() { return SCHEMA$; }
 }
Index: infrastructure/kafka/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>com.online.medicine.application</groupId>\r\n        <artifactId>infrastructure</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n\r\n    <artifactId>kafka</artifactId>\r\n    <packaging>pom</packaging>\r\n    <modules>\r\n        <module>kafka-producer</module>\r\n        <module>kafka-consumer</module>\r\n        <module>kafka-model</module>\r\n        <module>kafka-config-data</module>\r\n    </modules>\r\n\r\n    <repositories>\r\n        <repository>\r\n            <id>confluent</id>\r\n            <url>https://packages.confluent.io/maven/</url>\r\n        </repository>\r\n    </repositories>\r\n\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>org.springframework.kafka</groupId>\r\n                <artifactId>spring-kafka</artifactId>\r\n                <version>${spring-kafka.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>io.confluent</groupId>\r\n                <artifactId>kafka-avro-serializer</artifactId>\r\n                <version>${kafka-avro-serializer.version}</version>\r\n                <exclusions>\r\n                    <exclusion>\r\n                        <groupId>org.slf4j</groupId>\r\n                        <artifactId>slf4j-log4j12</artifactId>\r\n                    </exclusion>\r\n                    <exclusion>\r\n                        <groupId>log4j</groupId>\r\n                        <artifactId>log4j</artifactId>\r\n                    </exclusion>\r\n                    <exclusion>\r\n                        <groupId>io.swagger</groupId>\r\n                        <artifactId>swagger-annotations</artifactId>\r\n                    </exclusion>\r\n                    <exclusion>\r\n                        <groupId>io.swagger</groupId>\r\n                        <artifactId>swagger-core</artifactId>\r\n                    </exclusion>\r\n                </exclusions>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>org.apache.avro</groupId>\r\n                <artifactId>avro</artifactId>\r\n                <version>${avro.version}</version>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/pom.xml b/infrastructure/kafka/pom.xml
--- a/infrastructure/kafka/pom.xml	
+++ b/infrastructure/kafka/pom.xml	
@@ -2,12 +2,12 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>com.online.medicine.application</groupId>
         <artifactId>infrastructure</artifactId>
+        <groupId>com.online.medicine.application</groupId>
         <version>1.0-SNAPSHOT</version>
     </parent>
+    <modelVersion>4.0.0</modelVersion>
 
     <artifactId>kafka</artifactId>
     <packaging>pom</packaging>
Index: order-service/order-domain/order-application-service/src/test/java/com/online/medicine/application/order/service/domain/OrderApplicationServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.domain;\r\n\r\n\r\nimport com.online.medicine.application.order.service.domain.dto.create.CreateOrderCommand;\r\nimport com.online.medicine.application.order.service.domain.dto.create.CreateOrderResponse;\r\nimport com.online.medicine.application.order.service.domain.dto.create.OrderAddress;\r\nimport com.online.medicine.application.order.service.domain.dto.create.OrderItem;\r\nimport com.online.medicine.application.order.service.domain.mapper.OrderDataMapper;\r\nimport com.online.medicine.application.order.service.domain.ports.output.repository.CustomerRepository;\r\nimport com.online.medicine.application.order.service.domain.ports.output.repository.OrderRepository;\r\nimport com.online.medicine.application.order.service.domain.ports.output.repository.PharmacyRepository;\r\nimport com.online.medicine.application.order.service.domain.valueobject.*;\r\nimport com.online.medicine.domain.order.service.domain.entity.Customer;\r\nimport com.online.medicine.domain.order.service.domain.entity.Order;\r\nimport com.online.medicine.domain.order.service.domain.entity.Pharmacy;\r\nimport com.online.medicine.domain.order.service.domain.entity.Remedy;\r\nimport com.online.medicine.domain.order.service.domain.exception.OrderDomainException;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.TestInstance;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\n\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.UUID;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\r\nimport static org.mockito.ArgumentMatchers.any;\r\nimport static org.mockito.Mockito.when;\r\n\r\n@TestInstance(TestInstance.Lifecycle.PER_CLASS)\r\n@SpringBootTest(classes = OrderTestConfiguration.class)\r\npublic class OrderApplicationServiceTest {\r\n    @Autowired\r\n    private OrderApplicationService orderApplicationService;\r\n    @Autowired\r\n    private OrderDataMapper orderDataMapper;\r\n    @Autowired\r\n    private OrderRepository orderRepository;\r\n    @Autowired\r\n    private PharmacyRepository pharmacyRepository;\r\n    @Autowired\r\n    private CustomerRepository customerRepository;\r\n\r\n\r\n    private CreateOrderCommand createOrderCommand;\r\n    private CreateOrderCommand createOrderCommandWrongPrice;\r\n    private CreateOrderCommand createOrderCommandWrongRemedyPrice;\r\n    private final UUID CUSTOMER_ID = UUID.fromString(\"d215b5f8-0249-4dc5-89a3-51fd148cfb41\");\r\n    private final UUID PHARMACY_ID = UUID.fromString(\"d215b5f8-0249-4dc5-89a3-51fd148cfb45\");\r\n    private final UUID REMEDY_ID = UUID.fromString(\"d215b5f8-0249-4dc5-89a3-51fd148cfb48\");\r\n    private final UUID ORDER_ID = UUID.fromString(\"15a497c1-0f4b-4eff-b9f4-c402c8c07afb\");\r\n\r\n    private final BigDecimal PRICE=new BigDecimal(\"200.00\");\r\n\r\n    @BeforeAll\r\n    public void init(){\r\n        createOrderCommand = CreateOrderCommand.builder()\r\n                .customerId(CUSTOMER_ID)\r\n                .pharmacyId(PHARMACY_ID)\r\n                .address(OrderAddress.builder()\r\n                        .street(\"Suite 62F\")\r\n                        .postalCode(\"19720\")\r\n                        .city(\"New Castle\")\r\n                        .build())\r\n                .price(PRICE)\r\n                .items(List.of(OrderItem.builder()\r\n                        .remedyId(REMEDY_ID)\r\n                        .quantity(1)\r\n                        .price(new BigDecimal(\"50.00\"))\r\n                                .subTotal(new BigDecimal(\"50.00\"))\r\n                        .build(),\r\n                        OrderItem.builder()\r\n                                .remedyId(REMEDY_ID)\r\n                                .quantity(3)\r\n                        .price(new BigDecimal(\"50.00\"))\r\n                                .subTotal(new BigDecimal(\"150.00\"))\r\n                                .build()))\r\n                .build();\r\n        createOrderCommandWrongPrice = CreateOrderCommand.builder()\r\n                .customerId(CUSTOMER_ID)\r\n                .pharmacyId(PHARMACY_ID)\r\n                .address(OrderAddress.builder()\r\n                        .street(\"Suite 62F\")\r\n                        .postalCode(\"19720\")\r\n                        .city(\"New Castle\")\r\n                        .build())\r\n                .price(new BigDecimal(\"250.00\"))\r\n                .items(List.of(OrderItem.builder()\r\n                                .remedyId(REMEDY_ID)\r\n                                .quantity(1)\r\n                                .price(new BigDecimal(\"50.00\"))\r\n                                .subTotal(new BigDecimal(\"50.00\"))\r\n                                .build(),\r\n                        OrderItem.builder()\r\n                                .remedyId(REMEDY_ID)\r\n                                .quantity(3)\r\n                                .price(new BigDecimal(\"50.00\"))\r\n                                .subTotal(new BigDecimal(\"150.00\"))\r\n                                .build()))\r\n                .build();\r\n        createOrderCommandWrongRemedyPrice = CreateOrderCommand.builder()\r\n                .customerId(CUSTOMER_ID)\r\n                .pharmacyId(PHARMACY_ID)\r\n                .address(OrderAddress.builder()\r\n                        .street(\"Suite 62F\")\r\n                        .postalCode(\"19720\")\r\n                        .city(\"New Castle\")\r\n                        .build())\r\n                .price(new BigDecimal(\"210.00\"))\r\n                .items(List.of(OrderItem.builder()\r\n                                .remedyId(REMEDY_ID)\r\n                                .quantity(1)\r\n                                .price(new BigDecimal(\"60.00\"))\r\n                                .subTotal(new BigDecimal(\"60.00\"))\r\n                                .build(),\r\n                        OrderItem.builder()\r\n                                .remedyId(REMEDY_ID)\r\n                                .quantity(3)\r\n                                .price(new BigDecimal(\"50.00\"))\r\n                                .subTotal(new BigDecimal(\"150.00\"))\r\n                                .build()))\r\n                .build();\r\n        Customer customer=new Customer();\r\n        customer.setId(new CustomerId(CUSTOMER_ID));\r\n        Pharmacy pharmacyResponse=Pharmacy.builder()\r\n                .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))\r\n                        .remedies(List.of(new Remedy(new RemedyId(REMEDY_ID), \"remedy-1\",\r\n                                new Money(new BigDecimal(\"50.00\"))),\r\n                                new Remedy(new RemedyId(REMEDY_ID), \"product-2\", new Money(new BigDecimal(\"50.00\")))))\r\n                .active(true)\r\n\r\n                .build();\r\n        Order order=orderDataMapper.createOrderCommandToOrder(createOrderCommand);\r\n        order.setId(new OrderId(ORDER_ID));\r\n\r\n        order.initializeOrder();\r\n        when(customerRepository.findCustomer(CUSTOMER_ID)).thenReturn(Optional.of(customer));\r\n        when(pharmacyRepository.findPharmacyInformation(orderDataMapper.createOrderCommandToPharmacy(createOrderCommand)))\r\n                .thenReturn(Optional.of(pharmacyResponse));\r\n        when(orderRepository.save(any(Order.class))).thenReturn(order);\r\n\r\n\r\n\r\n    }\r\n    @Test\r\n    public void testCreateOrder() {\r\n        CreateOrderResponse createOrderResponse = orderApplicationService.createOrder(createOrderCommand);\r\n        assertEquals(OrderStatus.PENDING, createOrderResponse.getOrderStatus());\r\n        assertEquals(\"Order created successfully\", createOrderResponse.getMessage());\r\n        assertNotNull(createOrderResponse.getOrderTrackingId());\r\n    }\r\n    @Test\r\n    public void testCreateOrderWithWrongTotalPrice() {\r\n     OrderDomainException orderDomainException= assertThrows(OrderDomainException.class,\r\n              ()->orderApplicationService.createOrder(createOrderCommandWrongPrice));\r\n     assertEquals(\"Invalid order price\",orderDomainException.getMessage());\r\n    }\r\n//     @Test\r\n//     public void testCreateOrderWithWrongRemedyPrice() {\r\n//        OrderDomainException orderDomainException1= assertThrows(OrderDomainException.class,\r\n//                 ()->orderApplicationService.createOrder(createOrderCommandWrongRemedyPrice));\r\n//         assertEquals(\"Order item price is not valid\",orderDomainException1.getMessage());\r\n    @Test\r\n    public void testCreateOrderWithPassivePharmacy() {\r\n        Pharmacy pharmacyResponse=Pharmacy.builder()\r\n                .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))\r\n                .remedies(List.of(new Remedy(new RemedyId(REMEDY_ID), \"remedy-1\",\r\n                                new Money(new BigDecimal(\"50.00\"))),\r\n                        new Remedy(new RemedyId(REMEDY_ID), \"product-2\", new Money(new BigDecimal(\"50.00\")))))\r\n                .active(false)\r\n\r\n                .build();\r\n        when(pharmacyRepository.findPharmacyInformation(orderDataMapper.createOrderCommandToPharmacy(createOrderCommand)))\r\n                .thenReturn(Optional.of(pharmacyResponse));\r\n        OrderDomainException orderDomainException=assertThrows(OrderDomainException.class,\r\n                ()->orderApplicationService.createOrder(createOrderCommand));\r\n        assertEquals(\"Pharmacy is not active!\",orderDomainException.getMessage());\r\n    }\r\n\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-domain/order-application-service/src/test/java/com/online/medicine/application/order/service/domain/OrderApplicationServiceTest.java b/order-service/order-domain/order-application-service/src/test/java/com/online/medicine/application/order/service/domain/OrderApplicationServiceTest.java
--- a/order-service/order-domain/order-application-service/src/test/java/com/online/medicine/application/order/service/domain/OrderApplicationServiceTest.java	
+++ b/order-service/order-domain/order-application-service/src/test/java/com/online/medicine/application/order/service/domain/OrderApplicationServiceTest.java	
@@ -13,7 +13,7 @@
 import com.online.medicine.domain.order.service.domain.entity.Customer;
 import com.online.medicine.domain.order.service.domain.entity.Order;
 import com.online.medicine.domain.order.service.domain.entity.Pharmacy;
-import com.online.medicine.domain.order.service.domain.entity.Remedy;
+import com.online.medicine.domain.order.service.domain.entity.Medicine;
 import com.online.medicine.domain.order.service.domain.exception.OrderDomainException;
 import org.junit.jupiter.api.BeforeAll;
 import org.junit.jupiter.api.Test;
@@ -130,9 +130,9 @@
         customer.setId(new CustomerId(CUSTOMER_ID));
         Pharmacy pharmacyResponse=Pharmacy.builder()
                 .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))
-                        .remedies(List.of(new Remedy(new RemedyId(REMEDY_ID), "remedy-1",
+                        .remedies(List.of(new Medicine(new MedicineId(REMEDY_ID), "remedy-1",
                                 new Money(new BigDecimal("50.00"))),
-                                new Remedy(new RemedyId(REMEDY_ID), "product-2", new Money(new BigDecimal("50.00")))))
+                                new Medicine(new MedicineId(REMEDY_ID), "product-2", new Money(new BigDecimal("50.00")))))
                 .active(true)
 
                 .build();
@@ -170,9 +170,9 @@
     public void testCreateOrderWithPassivePharmacy() {
         Pharmacy pharmacyResponse=Pharmacy.builder()
                 .pharmacyId(new PharmacyId(createOrderCommand.getPharmacyId()))
-                .remedies(List.of(new Remedy(new RemedyId(REMEDY_ID), "remedy-1",
+                .remedies(List.of(new Medicine(new MedicineId(REMEDY_ID), "remedy-1",
                                 new Money(new BigDecimal("50.00"))),
-                        new Remedy(new RemedyId(REMEDY_ID), "product-2", new Money(new BigDecimal("50.00")))))
+                        new Medicine(new MedicineId(REMEDY_ID), "product-2", new Money(new BigDecimal("50.00")))))
                 .active(false)
 
                 .build();
Index: order-service/order-container/src/main/resources/application.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\r\n  port: 8181\r\n\r\nlogging:\r\n  level:\r\n    com.online.com.online.medicine.application: DEBUG\r\n\r\norder-service:\r\n  payment-request-topic-name: payment-request\r\n  payment-response-topic-name: payment-response\r\n  pharmacy-approval-request-topic-name: pharmacy-approval-request\r\n  pharmacy-approval-response-topic-name: pharmacy-approval-response\r\n  customer-topic-name: customer\r\n  outbox-scheduler-fixed-rate: 10000\r\n  outbox-scheduler-initial-delay: 10000\r\n\r\nspring:\r\n  jpa:\r\n    open-in-view: false\r\n    show-sql: true\r\n    database-platform: org.hibernate.dialect.PostgreSQL9Dialect\r\n    properties:\r\n      hibernate:\r\n        dialect: org.hibernate.dialect.PostgreSQL9Dialect\r\n  datasource:\r\n    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=order&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified\r\n    username: postgres\r\n    password: 5554\r\n    driver-class-name: org.postgresql.Driver\r\n    platform: postgres\r\n    schema: classpath:init-schema.sql\r\n    initialization-mode: always\r\n\r\nkafka-config:\r\n  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092\r\n  schema-registry-url-key: schema.registry.url\r\n  schema-registry-url: http://localhost:8081\r\n  num-of-partitions: 3\r\n  replication-factor: 3\r\n\r\nkafka-producer-config:\r\n  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer\r\n  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer\r\n  compression-type: none\r\n  acks: all\r\n  batch-size: 16384\r\n  batch-size-boost-factor: 100\r\n  linger-ms: 5\r\n  request-timeout-ms: 60000\r\n  retry-count: 5\r\n\r\nkafka-consumer-config:\r\n  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer\r\n  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer\r\n  payment-consumer-group-id: payment-topic-consumer\r\n  pharmacy-approval-consumer-group-id: pharmacy-approval-topic-consumer\r\n  customer-group-id: customer-topic-consumer\r\n  auto-offset-reset: earliest\r\n  specific-avro-reader-key: specific.avro.reader\r\n  specific-avro-reader: true\r\n  batch-listener: true\r\n  auto-startup: true\r\n  concurrency-level: 3\r\n  session-timeout-ms: 10000\r\n  heartbeat-interval-ms: 3000\r\n  max-poll-interval-ms: 300000\r\n  max-poll-records: 500\r\n  max-partition-fetch-bytes-default: 1048576\r\n  max-partition-fetch-bytes-boost-factor: 1\r\n  poll-timeout-ms: 150
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-container/src/main/resources/application.yaml b/order-service/order-container/src/main/resources/application.yaml
--- a/order-service/order-container/src/main/resources/application.yaml	
+++ b/order-service/order-container/src/main/resources/application.yaml	
@@ -3,7 +3,7 @@
 
 logging:
   level:
-    com.online.com.online.medicine.application: DEBUG
+    com.online.medicine.application: DEBUG
 
 order-service:
   payment-request-topic-name: payment-request
Index: order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/pharmacy/mapper/PharmacyDataAccessMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.application.order.service.dataaccess.pharmacy.mapper;\r\n\r\nimport com.online.medicine.application.order.service.dataaccess.pharmacy.entity.PharmacyEntity;\r\nimport com.online.medicine.application.order.service.dataaccess.pharmacy.entity.PharmacyEntityId;\r\nimport com.online.medicine.application.order.service.dataaccess.pharmacy.exception.PharmacyDataAccessException;\r\nimport com.online.medicine.application.order.service.domain.valueobject.Money;\r\nimport com.online.medicine.application.order.service.domain.valueobject.PharmacyId;\r\nimport com.online.medicine.application.order.service.domain.valueobject.RemedyId;\r\nimport com.online.medicine.domain.order.service.domain.entity.Pharmacy;\r\nimport com.online.medicine.domain.order.service.domain.entity.Remedy;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.List;\r\nimport java.util.UUID;\r\nimport java.util.stream.Collectors;\r\n\r\n@Component\r\npublic class PharmacyDataAccessMapper {\r\n    public List<UUID> pharmacyToPharmacyRemedies(Pharmacy pharmacy) {\r\n        return pharmacy.getRemedies().stream()\r\n                .map(remedy -> remedy.getId().getValue())\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    public Pharmacy pharmacyEntityToPharmacy(List<PharmacyEntity> pharmacyEntities) {\r\n        PharmacyEntity pharmacyEntity =\r\n                pharmacyEntities.stream().findFirst().orElseThrow(() ->\r\n                        new PharmacyDataAccessException(\"Restaurant could not be found!\"));\r\n\r\n        List<Remedy> pharmacyRemedies = pharmacyEntities.stream().map(entity ->\r\n                new Remedy(new RemedyId(entity.getRemedyId()), entity.getRemedyName(),\r\n                        new Money(entity.getRemedyPrice()))).toList();\r\n\r\n        return Pharmacy.builder()\r\n                .pharmacyId(new PharmacyId(pharmacyEntity.getPharmacyId()))\r\n                .remedies(pharmacyRemedies)\r\n                .active(pharmacyEntity.getPharmacyActive())\r\n                .build();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/pharmacy/mapper/PharmacyDataAccessMapper.java b/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/pharmacy/mapper/PharmacyDataAccessMapper.java
--- a/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/pharmacy/mapper/PharmacyDataAccessMapper.java	
+++ b/order-service/order-dataaccess/src/main/java/com/online/medicine/application/order/service/dataaccess/pharmacy/mapper/PharmacyDataAccessMapper.java	
@@ -1,13 +1,12 @@
 package com.online.medicine.application.order.service.dataaccess.pharmacy.mapper;
 
 import com.online.medicine.application.order.service.dataaccess.pharmacy.entity.PharmacyEntity;
-import com.online.medicine.application.order.service.dataaccess.pharmacy.entity.PharmacyEntityId;
 import com.online.medicine.application.order.service.dataaccess.pharmacy.exception.PharmacyDataAccessException;
 import com.online.medicine.application.order.service.domain.valueobject.Money;
 import com.online.medicine.application.order.service.domain.valueobject.PharmacyId;
-import com.online.medicine.application.order.service.domain.valueobject.RemedyId;
+import com.online.medicine.application.order.service.domain.valueobject.MedicineId;
 import com.online.medicine.domain.order.service.domain.entity.Pharmacy;
-import com.online.medicine.domain.order.service.domain.entity.Remedy;
+import com.online.medicine.domain.order.service.domain.entity.Medicine;
 import org.springframework.stereotype.Component;
 
 import java.util.List;
@@ -27,8 +26,8 @@
                 pharmacyEntities.stream().findFirst().orElseThrow(() ->
                         new PharmacyDataAccessException("Restaurant could not be found!"));
 
-        List<Remedy> pharmacyRemedies = pharmacyEntities.stream().map(entity ->
-                new Remedy(new RemedyId(entity.getRemedyId()), entity.getRemedyName(),
+        List<Medicine> pharmacyRemedies = pharmacyEntities.stream().map(entity ->
+                new Medicine(new MedicineId(entity.getRemedyId()), entity.getRemedyName(),
                         new Money(entity.getRemedyPrice()))).toList();
 
         return Pharmacy.builder()
Index: order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/OrderItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.online.medicine.domain.order.service.domain.entity;\r\n\r\nimport com.online.medicine.application.order.service.domain.entity.BaseEntity;\r\nimport com.online.medicine.application.order.service.domain.valueobject.Money;\r\nimport com.online.medicine.application.order.service.domain.valueobject.OrderId;\r\nimport com.online.medicine.domain.order.service.domain.valueobject.OrderItemId;\r\n\r\npublic class OrderItem extends BaseEntity<OrderItemId> {\r\n    private OrderId orderId;\r\n    private final Remedy remedy;\r\n    private final int quantity;\r\n    private final Money price;\r\n    private final Money subTotal;\r\n\r\n    void initializeOrderItem(OrderId orderId, OrderItemId orderItemId) {\r\n        this.orderId = orderId;\r\n        super.setId(orderItemId);\r\n    }\r\n\r\n    boolean isPriceValid() {\r\n        return price.isGreaterThanZero() &&\r\n                price.equals(remedy.getPrice()) &&\r\n                price.multiply(quantity).equals(subTotal);\r\n    }\r\n\r\n    private OrderItem(Builder builder) {\r\n        super.setId(builder.orderItemId);\r\n        remedy = builder.remedy;\r\n        quantity = builder.quantity;\r\n        price = builder.price;\r\n        subTotal = builder.subTotal;\r\n    }\r\n\r\n    public static Builder builder() {\r\n        return new Builder();\r\n    }\r\n\r\n\r\n    public OrderId getOrderId() {\r\n        return orderId;\r\n    }\r\n\r\n    public Remedy getRemedy() {\r\n        return remedy;\r\n    }\r\n\r\n    public int getQuantity() {\r\n        return quantity;\r\n    }\r\n\r\n    public Money getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public Money getSubTotal() {\r\n        return subTotal;\r\n    }\r\n\r\n    public static final class Builder {\r\n        private OrderItemId orderItemId;\r\n        private Remedy remedy;\r\n        private int quantity;\r\n        private Money price;\r\n        private Money subTotal;\r\n\r\n        private Builder() {\r\n        }\r\n\r\n        public Builder orderItemId(OrderItemId val) {\r\n            orderItemId = val;\r\n            return this;\r\n        }\r\n\r\n        public Builder remedy(Remedy val) {\r\n            remedy = val;\r\n            return this;\r\n        }\r\n\r\n        public Builder quantity(int val) {\r\n            quantity = val;\r\n            return this;\r\n        }\r\n\r\n        public Builder price(Money val) {\r\n            price = val;\r\n            return this;\r\n        }\r\n\r\n\r\n        public Builder subTotal(Money val) {\r\n            subTotal = val;\r\n            return this;\r\n        }\r\n\r\n        public OrderItem build() {\r\n            return new OrderItem(this);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/OrderItem.java b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/OrderItem.java
--- a/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/OrderItem.java	
+++ b/order-service/order-domain/order-domain-core/src/main/java/com/online/medicine/domain/order/service/domain/entity/OrderItem.java	
@@ -7,7 +7,7 @@
 
 public class OrderItem extends BaseEntity<OrderItemId> {
     private OrderId orderId;
-    private final Remedy remedy;
+    private final Medicine medicine;
     private final int quantity;
     private final Money price;
     private final Money subTotal;
@@ -19,13 +19,13 @@
 
     boolean isPriceValid() {
         return price.isGreaterThanZero() &&
-                price.equals(remedy.getPrice()) &&
+                price.equals(medicine.getPrice()) &&
                 price.multiply(quantity).equals(subTotal);
     }
 
     private OrderItem(Builder builder) {
         super.setId(builder.orderItemId);
-        remedy = builder.remedy;
+        medicine = builder.medicine;
         quantity = builder.quantity;
         price = builder.price;
         subTotal = builder.subTotal;
@@ -40,8 +40,8 @@
         return orderId;
     }
 
-    public Remedy getRemedy() {
-        return remedy;
+    public Medicine getRemedy() {
+        return medicine;
     }
 
     public int getQuantity() {
@@ -58,7 +58,7 @@
 
     public static final class Builder {
         private OrderItemId orderItemId;
-        private Remedy remedy;
+        private Medicine medicine;
         private int quantity;
         private Money price;
         private Money subTotal;
@@ -71,8 +71,8 @@
             return this;
         }
 
-        public Builder remedy(Remedy val) {
-            remedy = val;
+        public Builder remedy(Medicine val) {
+            medicine = val;
             return this;
         }
 
Index: infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalResponseAvroModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Autogenerated by Avro\r\n *\r\n * DO NOT EDIT DIRECTLY\r\n */\r\npackage com.online.medicine.application.kafka.order.avro.model;\r\n\r\nimport org.apache.avro.specific.SpecificData;\r\nimport org.apache.avro.message.BinaryMessageEncoder;\r\nimport org.apache.avro.message.BinaryMessageDecoder;\r\nimport org.apache.avro.message.SchemaStore;\r\n\r\nimport java.time.Instant;\r\nimport java.time.OffsetDateTime;\r\n\r\n@org.apache.avro.specific.AvroGenerated\r\npublic class PharmacyApprovalResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {\r\n  private static final long serialVersionUID = -3431989201238018220L;\r\n\r\n\r\n  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"RestaurantApprovalResponseAvroModel\\\",\\\"namespace\\\":\\\"com.food.ordering.system.kafka.order.avro.model\\\",\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"sagaId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"restaurantId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"orderId\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"logicalType\\\":\\\"uuid\\\"}},{\\\"name\\\":\\\"createdAt\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"logicalType\\\":\\\"timestamp-millis\\\"}},{\\\"name\\\":\\\"orderApprovalStatus\\\",\\\"type\\\":{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"OrderApprovalStatus\\\",\\\"symbols\\\":[\\\"APPROVED\\\",\\\"REJECTED\\\"]}},{\\\"name\\\":\\\"failureMessages\\\",\\\"type\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"}}}]}\");\r\n  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }\r\n\r\n  private static final SpecificData MODEL$ = new SpecificData();\r\n  static {\r\n    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());\r\n  }\r\n\r\n  private static final BinaryMessageEncoder<PharmacyApprovalResponseAvroModel> ENCODER =\r\n          new BinaryMessageEncoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  private static final BinaryMessageDecoder<PharmacyApprovalResponseAvroModel> DECODER =\r\n          new BinaryMessageDecoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$);\r\n\r\n  /**\r\n   * Return the BinaryMessageEncoder instance used by this class.\r\n   * @return the message encoder used by this class\r\n   */\r\n  public static BinaryMessageEncoder<PharmacyApprovalResponseAvroModel> getEncoder() {\r\n    return ENCODER;\r\n  }\r\n\r\n  /**\r\n   * Return the BinaryMessageDecoder instance used by this class.\r\n   * @return the message decoder used by this class\r\n   */\r\n  public static BinaryMessageDecoder<PharmacyApprovalResponseAvroModel> getDecoder() {\r\n    return DECODER;\r\n  }\r\n\r\n  /**\r\n   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.\r\n   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint\r\n   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore\r\n   */\r\n  public static BinaryMessageDecoder<PharmacyApprovalResponseAvroModel> createDecoder(SchemaStore resolver) {\r\n    return new BinaryMessageDecoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$, resolver);\r\n  }\r\n\r\n  /**\r\n   * Serializes this PharmacyApprovalResponseAvroModel to a ByteBuffer.\r\n   * @return a buffer holding the serialized data for this instance\r\n   * @throws java.io.IOException if this instance could not be serialized\r\n   */\r\n  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {\r\n    return ENCODER.encode(this);\r\n  }\r\n\r\n  /**\r\n   * Deserializes a PharmacyApprovalResponseAvroModel from a ByteBuffer.\r\n   * @param b a byte buffer holding serialized data for an instance of this class\r\n   * @return a PharmacyApprovalResponseAvroModel instance decoded from the given buffer\r\n   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class\r\n   */\r\n  public static PharmacyApprovalResponseAvroModel fromByteBuffer(\r\n          java.nio.ByteBuffer b) throws java.io.IOException {\r\n    return DECODER.decode(b);\r\n  }\r\n\r\n  private java.lang.String id;\r\n  private java.lang.String sagaId;\r\n  private java.lang.String pharmacyId;\r\n  private java.lang.String orderId;\r\n  private java.time.Instant createdAt;\r\n  private com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus orderApprovalStatus;\r\n  private static java.util.List<java.lang.String> failureMessages;\r\n\r\n  /**\r\n   * Default constructor.  Note that this does not initialize fields\r\n   * to their default values from the schema.  If that is desired then\r\n   * one should use <code>newBuilder()</code>.\r\n   */\r\n  public PharmacyApprovalResponseAvroModel() {}\r\n\r\n  /**\r\n   * All-args constructor.\r\n   * @param id The new value for id\r\n   * @param sagaId The new value for sagaId\r\n   * @param pharmacyId The new value for restaurantId\r\n   * @param orderId The new value for orderId\r\n   * @param createdAt The new value for createdAt\r\n   * @param orderApprovalStatus The new value for orderApprovalStatus\r\n   * @param failureMessages The new value for failureMessages\r\n   */\r\n  public PharmacyApprovalResponseAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String pharmacyId, java.lang.String orderId, java.time.Instant createdAt, com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus orderApprovalStatus, java.util.List<java.lang.String> failureMessages) {\r\n    this.id = id;\r\n    this.sagaId = sagaId;\r\n    this.pharmacyId=pharmacyId;\r\n    this.orderId = orderId;\r\n    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n    this.orderApprovalStatus = orderApprovalStatus;\r\n    this.failureMessages = failureMessages;\r\n  }\r\n\r\n  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }\r\n  public org.apache.avro.Schema getSchema() { return SCHEMA$; }\r\n  // Used by DatumWriter.  Applications should not call.\r\n  public java.lang.Object get(int field$) {\r\n    switch (field$) {\r\n      case 0: return id;\r\n      case 1: return sagaId;\r\n      case 2: return pharmacyId;\r\n      case 3: return orderId;\r\n      case 4: return createdAt;\r\n      case 5: return orderApprovalStatus;\r\n      case 6: return failureMessages;\r\n      default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  private static final org.apache.avro.Conversion<?>[] conversions =\r\n          new org.apache.avro.Conversion<?>[] {\r\n                  null,\r\n                  null,\r\n                  null,\r\n                  null,\r\n                  new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),\r\n                  null,\r\n                  null,\r\n                  null\r\n          };\r\n\r\n  @Override\r\n  public org.apache.avro.Conversion<?> getConversion(int field) {\r\n    return conversions[field];\r\n  }\r\n\r\n  // Used by DatumReader.  Applications should not call.\r\n  @SuppressWarnings(value=\"unchecked\")\r\n  public void put(int field$, java.lang.Object value$) {\r\n    switch (field$) {\r\n      case 0: id = value$ != null ? value$.toString() : null; break;\r\n      case 1: sagaId = value$ != null ? value$.toString() : null; break;\r\n      case 2: pharmacyId = value$ != null ? value$.toString() : null; break;\r\n      case 3: orderId = value$ != null ? value$.toString() : null; break;\r\n      case 4: createdAt = (java.time.Instant)value$; break;\r\n      case 5: orderApprovalStatus = (com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus)value$; break;\r\n      case 6: failureMessages = (java.util.List<java.lang.String>)value$; break;\r\n      default: throw new IndexOutOfBoundsException(\"Invalid index: \" + field$);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'id' field.\r\n   * @return The value of the 'id' field.\r\n   */\r\n  public java.lang.String getId() {\r\n    return id;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'id' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setId(java.lang.String value) {\r\n    this.id = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'sagaId' field.\r\n   * @return The value of the 'sagaId' field.\r\n   */\r\n  public java.lang.String getSagaId() {\r\n    return sagaId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'sagaId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setSagaId(java.lang.String value) {\r\n    this.sagaId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'restaurantId' field.\r\n   * @return The value of the 'restaurantId' field.\r\n   */\r\n  public java.lang.String getRestaurantId() {\r\n    return pharmacyId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'restaurantId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setPharmacyId(java.lang.String value) {\r\n    this.pharmacyId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'orderId' field.\r\n   * @return The value of the 'orderId' field.\r\n   */\r\n  public java.lang.String getOrderId() {\r\n    return orderId;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'orderId' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setOrderId(java.lang.String value) {\r\n    this.orderId = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'createdAt' field.\r\n   *\r\n   * @return The value of the 'createdAt' field.\r\n   */\r\n  public Instant getCreatedAt() {\r\n    return createdAt;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'createdAt' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setCreatedAt(java.time.Instant value) {\r\n    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'orderApprovalStatus' field.\r\n   * @return The value of the 'orderApprovalStatus' field.\r\n   */\r\n  public com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus getOrderApprovalStatus() {\r\n    return orderApprovalStatus;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'orderApprovalStatus' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setOrderApprovalStatus(com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus value) {\r\n    this.orderApprovalStatus = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the 'failureMessages' field.\r\n   * @return The value of the 'failureMessages' field.\r\n   */\r\n  public static java.util.List<java.lang.String> getFailureMessages() {\r\n    return failureMessages;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the value of the 'failureMessages' field.\r\n   * @param value the value to set.\r\n   */\r\n  public void setFailureMessages(java.util.List<java.lang.String> value) {\r\n    this.failureMessages = value;\r\n  }\r\n\r\n  /**\r\n   * Creates a new RestaurantApprovalResponseAvroModel RecordBuilder.\r\n   * @return A new RestaurantApprovalResponseAvroModel RecordBuilder\r\n   */\r\n  public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder newBuilder() {\r\n    return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder();\r\n  }\r\n\r\n  /**\r\n   * Creates a new PharmacyApprovalResponseAvroModel RecordBuilder by copying an existing Builder.\r\n   * @param other The existing builder to copy.\r\n   * @return A new PharmacyApprovalResponseAvroModel RecordBuilder\r\n   */\r\n  public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder other) {\r\n    if (other == null) {\r\n      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder();\r\n    } else {\r\n      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new PharmacyApprovalResponseAvroModel RecordBuilder by copying an existing RestaurantApprovalResponseAvroModel instance.\r\n   * @param other The existing instance to copy.\r\n   * @return A new PharmacyApprovalResponseAvroModel RecordBuilder\r\n   */\r\n  public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder newBuilder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel other) {\r\n    if (other == null) {\r\n      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder();\r\n    } else {\r\n      return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder(other);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * RecordBuilder for RestaurantApprovalResponseAvroModel instances.\r\n   */\r\n  @org.apache.avro.specific.AvroGenerated\r\n  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PharmacyApprovalResponseAvroModel>\r\n          implements org.apache.avro.data.RecordBuilder<PharmacyApprovalResponseAvroModel> {\r\n\r\n    private java.lang.String id;\r\n    private java.lang.String sagaId;\r\n    private java.lang.String pharmacyId;\r\n    private java.lang.String orderId;\r\n    private java.time.Instant createdAt;\r\n    private com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus orderApprovalStatus;\r\n    private java.util.List<java.lang.String> failureMessages;\r\n\r\n    /** Creates a new Builder */\r\n    private Builder() {\r\n      super(SCHEMA$, MODEL$);\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing Builder.\r\n     * @param other The existing Builder to copy.\r\n     */\r\n    private Builder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder other) {\r\n      super(other);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = other.fieldSetFlags()[0];\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = other.fieldSetFlags()[1];\r\n      }\r\n      if (isValidValue(fields()[2], other.pharmacyId)) {\r\n        this.pharmacyId = data().deepCopy(fields()[2].schema(), other.pharmacyId);\r\n        fieldSetFlags()[2] = other.fieldSetFlags()[2];\r\n      }\r\n      if (isValidValue(fields()[3], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);\r\n        fieldSetFlags()[3] = other.fieldSetFlags()[3];\r\n      }\r\n      if (isValidValue(fields()[4], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);\r\n        fieldSetFlags()[4] = other.fieldSetFlags()[4];\r\n      }\r\n      if (isValidValue(fields()[5], other.orderApprovalStatus)) {\r\n        this.orderApprovalStatus = data().deepCopy(fields()[5].schema(), other.orderApprovalStatus);\r\n        fieldSetFlags()[5] = other.fieldSetFlags()[5];\r\n      }\r\n      if (isValidValue(fields()[6], other.failureMessages)) {\r\n        this.failureMessages = data().deepCopy(fields()[6].schema(), other.failureMessages);\r\n        fieldSetFlags()[6] = other.fieldSetFlags()[6];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Creates a Builder by copying an existing RestaurantApprovalResponseAvroModel instance\r\n     * @param other The existing instance to copy.\r\n     */\r\n    private Builder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel other) {\r\n      super(SCHEMA$, MODEL$);\r\n      if (isValidValue(fields()[0], other.id)) {\r\n        this.id = data().deepCopy(fields()[0].schema(), other.id);\r\n        fieldSetFlags()[0] = true;\r\n      }\r\n      if (isValidValue(fields()[1], other.sagaId)) {\r\n        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);\r\n        fieldSetFlags()[1] = true;\r\n      }\r\n      if (isValidValue(fields()[2], other.pharmacyId)) {\r\n        this.pharmacyId= data().deepCopy(fields()[2].schema(), other.pharmacyId);\r\n        fieldSetFlags()[2] = true;\r\n      }\r\n      if (isValidValue(fields()[3], other.orderId)) {\r\n        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);\r\n        fieldSetFlags()[3] = true;\r\n      }\r\n      if (isValidValue(fields()[4], other.createdAt)) {\r\n        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);\r\n        fieldSetFlags()[4] = true;\r\n      }\r\n      if (isValidValue(fields()[5], other.orderApprovalStatus)) {\r\n        this.orderApprovalStatus = data().deepCopy(fields()[5].schema(), other.orderApprovalStatus);\r\n        fieldSetFlags()[5] = true;\r\n      }\r\n      if (isValidValue(fields()[6], other.failureMessages)) {\r\n        this.failureMessages = data().deepCopy(fields()[6].schema(), other.failureMessages);\r\n        fieldSetFlags()[6] = true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'id' field.\r\n     * @return The value.\r\n     */\r\n    public java.lang.String getId() {\r\n      return id;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'id' field.\r\n     * @param value The value of 'id'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setId(java.lang.String value) {\r\n      validate(fields()[0], value);\r\n      this.id = value;\r\n      fieldSetFlags()[0] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'id' field has been set.\r\n     * @return True if the 'id' field has been set, false otherwise.\r\n     */\r\n    public boolean hasId() {\r\n      return fieldSetFlags()[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'id' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearId() {\r\n      id = null;\r\n      fieldSetFlags()[0] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'sagaId' field.\r\n     * @return The value.\r\n     */\r\n    public java.lang.String getSagaId() {\r\n      return sagaId;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'sagaId' field.\r\n     * @param value The value of 'sagaId'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setSagaId(java.lang.String value) {\r\n      validate(fields()[1], value);\r\n      this.sagaId = value;\r\n      fieldSetFlags()[1] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'sagaId' field has been set.\r\n     * @return True if the 'sagaId' field has been set, false otherwise.\r\n     */\r\n    public boolean hasSagaId() {\r\n      return fieldSetFlags()[1];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'sagaId' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearSagaId() {\r\n      sagaId = null;\r\n      fieldSetFlags()[1] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'restaurantId' field.\r\n     * @return The value.\r\n     */\r\n    public java.lang.String getPharmacyId() {\r\n      return pharmacyId;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'pharmacytId' field.\r\n     * @param value The value of 'pharmacyId'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setRestaurantId(java.lang.String value) {\r\n      validate(fields()[2], value);\r\n      this.pharmacyId = value;\r\n      fieldSetFlags()[2] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'pharmacyId' field has been set.\r\n     * @return True if the 'pharmacyId' field has been set, false otherwise.\r\n     */\r\n    public boolean hasPharmacyId() {\r\n      return fieldSetFlags()[2];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'pharmacyId' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearRestaurantId() {\r\n      pharmacyId = null;\r\n      fieldSetFlags()[2] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'orderId' field.\r\n     * @return The value.\r\n     */\r\n    public java.lang.String getOrderId() {\r\n      return orderId;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'orderId' field.\r\n     * @param value The value of 'orderId'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setOrderId(java.lang.String value) {\r\n      validate(fields()[3], value);\r\n      this.orderId = value;\r\n      fieldSetFlags()[3] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'orderId' field has been set.\r\n     * @return True if the 'orderId' field has been set, false otherwise.\r\n     */\r\n    public boolean hasOrderId() {\r\n      return fieldSetFlags()[3];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'orderId' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearOrderId() {\r\n      orderId = null;\r\n      fieldSetFlags()[3] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'createdAt' field.\r\n     * @return The value.\r\n     */\r\n    public java.time.Instant getCreatedAt() {\r\n      return createdAt;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'createdAt' field.\r\n     * @param value The value of 'createdAt'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setCreatedAt(java.time.Instant value) {\r\n      validate(fields()[4], value);\r\n      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);\r\n      fieldSetFlags()[4] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'createdAt' field has been set.\r\n     * @return True if the 'createdAt' field has been set, false otherwise.\r\n     */\r\n    public boolean hasCreatedAt() {\r\n      return fieldSetFlags()[4];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'createdAt' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearCreatedAt() {\r\n      fieldSetFlags()[4] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'orderApprovalStatus' field.\r\n     * @return The value.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus getOrderApprovalStatus() {\r\n      return orderApprovalStatus;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'orderApprovalStatus' field.\r\n     * @param value The value of 'orderApprovalStatus'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setOrderApprovalStatus(com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus value) {\r\n      validate(fields()[5], value);\r\n      this.orderApprovalStatus = value;\r\n      fieldSetFlags()[5] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'orderApprovalStatus' field has been set.\r\n     * @return True if the 'orderApprovalStatus' field has been set, false otherwise.\r\n     */\r\n    public boolean hasOrderApprovalStatus() {\r\n      return fieldSetFlags()[5];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'orderApprovalStatus' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearOrderApprovalStatus() {\r\n      orderApprovalStatus = null;\r\n      fieldSetFlags()[5] = false;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of the 'failureMessages' field.\r\n     * @return The value.\r\n     */\r\n    public java.util.List<java.lang.String> getFailureMessages() {\r\n      return failureMessages;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the value of the 'failureMessages' field.\r\n     * @param value The value of 'failureMessages'.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setFailureMessages(java.util.List<java.lang.String> value) {\r\n      validate(fields()[6], value);\r\n      this.failureMessages = value;\r\n      fieldSetFlags()[6] = true;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the 'failureMessages' field has been set.\r\n     * @return True if the 'failureMessages' field has been set, false otherwise.\r\n     */\r\n    public boolean hasFailureMessages() {\r\n      return fieldSetFlags()[6];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the value of the 'failureMessages' field.\r\n     * @return This builder.\r\n     */\r\n    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearFailureMessages() {\r\n      failureMessages = null;\r\n      fieldSetFlags()[6] = false;\r\n      return this;\r\n    }\r\n\r\n    @Override\r\n    @SuppressWarnings(\"unchecked\")\r\n    public PharmacyApprovalResponseAvroModel build() {\r\n      try {\r\n        PharmacyApprovalResponseAvroModel record = new PharmacyApprovalResponseAvroModel();\r\n        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);\r\n        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);\r\n        record.pharmacyId = fieldSetFlags()[2] ? this.pharmacyId : (java.lang.String) defaultValue(fields()[2]);\r\n        record.orderId = fieldSetFlags()[3] ? this.orderId : (java.lang.String) defaultValue(fields()[3]);\r\n        record.createdAt = fieldSetFlags()[4] ? this.createdAt : (java.time.Instant) defaultValue(fields()[4]);\r\n        record.orderApprovalStatus = fieldSetFlags()[5] ? this.orderApprovalStatus : (com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus) defaultValue(fields()[5]);\r\n        record.failureMessages = fieldSetFlags()[6] ? this.failureMessages : (java.util.List<java.lang.String>) defaultValue(fields()[6]);\r\n        return record;\r\n      } catch (org.apache.avro.AvroMissingFieldException e) {\r\n        throw e;\r\n      } catch (java.lang.Exception e) {\r\n        throw new org.apache.avro.AvroRuntimeException(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumWriter<PharmacyApprovalResponseAvroModel>\r\n          WRITER$ = (org.apache.avro.io.DatumWriter<PharmacyApprovalResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);\r\n\r\n  @Override public void writeExternal(java.io.ObjectOutput out)\r\n          throws java.io.IOException {\r\n    WRITER$.write(this, SpecificData.getEncoder(out));\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  private static final org.apache.avro.io.DatumReader<PharmacyApprovalResponseAvroModel>\r\n          READER$ = (org.apache.avro.io.DatumReader<PharmacyApprovalResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);\r\n\r\n  @Override public void readExternal(java.io.ObjectInput in)\r\n          throws java.io.IOException {\r\n    READER$.read(this, SpecificData.getDecoder(in));\r\n  }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalResponseAvroModel.java b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalResponseAvroModel.java
--- a/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalResponseAvroModel.java	
+++ b/infrastructure/kafka/kafka-model/src/main/java/com/online/medicine/application/kafka/order/avro/model/PharmacyApprovalResponseAvroModel.java	
@@ -5,20 +5,19 @@
  */
 package com.online.medicine.application.kafka.order.avro.model;
 
+import org.apache.avro.generic.GenericArray;
 import org.apache.avro.specific.SpecificData;
+import org.apache.avro.util.Utf8;
 import org.apache.avro.message.BinaryMessageEncoder;
 import org.apache.avro.message.BinaryMessageDecoder;
 import org.apache.avro.message.SchemaStore;
 
-import java.time.Instant;
-import java.time.OffsetDateTime;
-
 @org.apache.avro.specific.AvroGenerated
 public class PharmacyApprovalResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
-  private static final long serialVersionUID = -3431989201238018220L;
+  private static final long serialVersionUID = 3447427696154811824L;
 
 
-  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RestaurantApprovalResponseAvroModel\",\"namespace\":\"com.food.ordering.system.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"restaurantId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"orderApprovalStatus\",\"type\":{\"type\":\"enum\",\"name\":\"OrderApprovalStatus\",\"symbols\":[\"APPROVED\",\"REJECTED\"]}},{\"name\":\"failureMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PharmacyApprovalResponseAvroModel\",\"namespace\":\"com.online.medicine.application.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"pharmacyId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"orderApprovalStatus\",\"type\":{\"type\":\"enum\",\"name\":\"OrderApprovalStatus\",\"symbols\":[\"APPROVED\",\"REJECTED\"]}},{\"name\":\"failureMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
   public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
 
   private static final SpecificData MODEL$ = new SpecificData();
@@ -27,10 +26,10 @@
   }
 
   private static final BinaryMessageEncoder<PharmacyApprovalResponseAvroModel> ENCODER =
-          new BinaryMessageEncoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$);
+      new BinaryMessageEncoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$);
 
   private static final BinaryMessageDecoder<PharmacyApprovalResponseAvroModel> DECODER =
-          new BinaryMessageDecoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$);
+      new BinaryMessageDecoder<PharmacyApprovalResponseAvroModel>(MODEL$, SCHEMA$);
 
   /**
    * Return the BinaryMessageEncoder instance used by this class.
@@ -73,7 +72,7 @@
    * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
    */
   public static PharmacyApprovalResponseAvroModel fromByteBuffer(
-          java.nio.ByteBuffer b) throws java.io.IOException {
+      java.nio.ByteBuffer b) throws java.io.IOException {
     return DECODER.decode(b);
   }
 
@@ -83,7 +82,7 @@
   private java.lang.String orderId;
   private java.time.Instant createdAt;
   private com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus orderApprovalStatus;
-  private static java.util.List<java.lang.String> failureMessages;
+  private java.util.List<java.lang.String> failureMessages;
 
   /**
    * Default constructor.  Note that this does not initialize fields
@@ -96,7 +95,7 @@
    * All-args constructor.
    * @param id The new value for id
    * @param sagaId The new value for sagaId
-   * @param pharmacyId The new value for restaurantId
+   * @param pharmacyId The new value for pharmacyId
    * @param orderId The new value for orderId
    * @param createdAt The new value for createdAt
    * @param orderApprovalStatus The new value for orderApprovalStatus
@@ -105,7 +104,7 @@
   public PharmacyApprovalResponseAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String pharmacyId, java.lang.String orderId, java.time.Instant createdAt, com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus orderApprovalStatus, java.util.List<java.lang.String> failureMessages) {
     this.id = id;
     this.sagaId = sagaId;
-    this.pharmacyId=pharmacyId;
+    this.pharmacyId = pharmacyId;
     this.orderId = orderId;
     this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
     this.orderApprovalStatus = orderApprovalStatus;
@@ -117,28 +116,28 @@
   // Used by DatumWriter.  Applications should not call.
   public java.lang.Object get(int field$) {
     switch (field$) {
-      case 0: return id;
-      case 1: return sagaId;
-      case 2: return pharmacyId;
-      case 3: return orderId;
-      case 4: return createdAt;
-      case 5: return orderApprovalStatus;
-      case 6: return failureMessages;
-      default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
+    case 0: return id;
+    case 1: return sagaId;
+    case 2: return pharmacyId;
+    case 3: return orderId;
+    case 4: return createdAt;
+    case 5: return orderApprovalStatus;
+    case 6: return failureMessages;
+    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
     }
   }
 
   private static final org.apache.avro.Conversion<?>[] conversions =
-          new org.apache.avro.Conversion<?>[] {
-                  null,
-                  null,
-                  null,
-                  null,
-                  new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
-                  null,
-                  null,
-                  null
-          };
+      new org.apache.avro.Conversion<?>[] {
+      null,
+      null,
+      null,
+      null,
+      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
+      null,
+      null,
+      null
+  };
 
   @Override
   public org.apache.avro.Conversion<?> getConversion(int field) {
@@ -149,14 +148,14 @@
   @SuppressWarnings(value="unchecked")
   public void put(int field$, java.lang.Object value$) {
     switch (field$) {
-      case 0: id = value$ != null ? value$.toString() : null; break;
-      case 1: sagaId = value$ != null ? value$.toString() : null; break;
-      case 2: pharmacyId = value$ != null ? value$.toString() : null; break;
-      case 3: orderId = value$ != null ? value$.toString() : null; break;
-      case 4: createdAt = (java.time.Instant)value$; break;
-      case 5: orderApprovalStatus = (com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus)value$; break;
-      case 6: failureMessages = (java.util.List<java.lang.String>)value$; break;
-      default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
+    case 0: id = value$ != null ? value$.toString() : null; break;
+    case 1: sagaId = value$ != null ? value$.toString() : null; break;
+    case 2: pharmacyId = value$ != null ? value$.toString() : null; break;
+    case 3: orderId = value$ != null ? value$.toString() : null; break;
+    case 4: createdAt = (java.time.Instant)value$; break;
+    case 5: orderApprovalStatus = (com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus)value$; break;
+    case 6: failureMessages = (java.util.List<java.lang.String>)value$; break;
+    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
     }
   }
 
@@ -195,16 +194,16 @@
   }
 
   /**
-   * Gets the value of the 'restaurantId' field.
-   * @return The value of the 'restaurantId' field.
+   * Gets the value of the 'pharmacyId' field.
+   * @return The value of the 'pharmacyId' field.
    */
-  public java.lang.String getRestaurantId() {
+  public java.lang.String getPharmacyId() {
     return pharmacyId;
   }
 
 
   /**
-   * Sets the value of the 'restaurantId' field.
+   * Sets the value of the 'pharmacyId' field.
    * @param value the value to set.
    */
   public void setPharmacyId(java.lang.String value) {
@@ -230,10 +229,9 @@
 
   /**
    * Gets the value of the 'createdAt' field.
-   *
    * @return The value of the 'createdAt' field.
    */
-  public Instant getCreatedAt() {
+  public java.time.Instant getCreatedAt() {
     return createdAt;
   }
 
@@ -267,7 +265,7 @@
    * Gets the value of the 'failureMessages' field.
    * @return The value of the 'failureMessages' field.
    */
-  public static java.util.List<java.lang.String> getFailureMessages() {
+  public java.util.List<java.lang.String> getFailureMessages() {
     return failureMessages;
   }
 
@@ -281,8 +279,8 @@
   }
 
   /**
-   * Creates a new RestaurantApprovalResponseAvroModel RecordBuilder.
-   * @return A new RestaurantApprovalResponseAvroModel RecordBuilder
+   * Creates a new PharmacyApprovalResponseAvroModel RecordBuilder.
+   * @return A new PharmacyApprovalResponseAvroModel RecordBuilder
    */
   public static com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder newBuilder() {
     return new com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder();
@@ -302,7 +300,7 @@
   }
 
   /**
-   * Creates a new PharmacyApprovalResponseAvroModel RecordBuilder by copying an existing RestaurantApprovalResponseAvroModel instance.
+   * Creates a new PharmacyApprovalResponseAvroModel RecordBuilder by copying an existing PharmacyApprovalResponseAvroModel instance.
    * @param other The existing instance to copy.
    * @return A new PharmacyApprovalResponseAvroModel RecordBuilder
    */
@@ -315,11 +313,11 @@
   }
 
   /**
-   * RecordBuilder for RestaurantApprovalResponseAvroModel instances.
+   * RecordBuilder for PharmacyApprovalResponseAvroModel instances.
    */
   @org.apache.avro.specific.AvroGenerated
   public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PharmacyApprovalResponseAvroModel>
-          implements org.apache.avro.data.RecordBuilder<PharmacyApprovalResponseAvroModel> {
+    implements org.apache.avro.data.RecordBuilder<PharmacyApprovalResponseAvroModel> {
 
     private java.lang.String id;
     private java.lang.String sagaId;
@@ -371,7 +369,7 @@
     }
 
     /**
-     * Creates a Builder by copying an existing RestaurantApprovalResponseAvroModel instance
+     * Creates a Builder by copying an existing PharmacyApprovalResponseAvroModel instance
      * @param other The existing instance to copy.
      */
     private Builder(com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel other) {
@@ -385,7 +383,7 @@
         fieldSetFlags()[1] = true;
       }
       if (isValidValue(fields()[2], other.pharmacyId)) {
-        this.pharmacyId= data().deepCopy(fields()[2].schema(), other.pharmacyId);
+        this.pharmacyId = data().deepCopy(fields()[2].schema(), other.pharmacyId);
         fieldSetFlags()[2] = true;
       }
       if (isValidValue(fields()[3], other.orderId)) {
@@ -407,19 +405,19 @@
     }
 
     /**
-     * Gets the value of the 'id' field.
-     * @return The value.
-     */
+      * Gets the value of the 'id' field.
+      * @return The value.
+      */
     public java.lang.String getId() {
       return id;
     }
 
 
     /**
-     * Sets the value of the 'id' field.
-     * @param value The value of 'id'.
-     * @return This builder.
-     */
+      * Sets the value of the 'id' field.
+      * @param value The value of 'id'.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setId(java.lang.String value) {
       validate(fields()[0], value);
       this.id = value;
@@ -428,18 +426,18 @@
     }
 
     /**
-     * Checks whether the 'id' field has been set.
-     * @return True if the 'id' field has been set, false otherwise.
-     */
+      * Checks whether the 'id' field has been set.
+      * @return True if the 'id' field has been set, false otherwise.
+      */
     public boolean hasId() {
       return fieldSetFlags()[0];
     }
 
 
     /**
-     * Clears the value of the 'id' field.
-     * @return This builder.
-     */
+      * Clears the value of the 'id' field.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearId() {
       id = null;
       fieldSetFlags()[0] = false;
@@ -447,19 +445,19 @@
     }
 
     /**
-     * Gets the value of the 'sagaId' field.
-     * @return The value.
-     */
+      * Gets the value of the 'sagaId' field.
+      * @return The value.
+      */
     public java.lang.String getSagaId() {
       return sagaId;
     }
 
 
     /**
-     * Sets the value of the 'sagaId' field.
-     * @param value The value of 'sagaId'.
-     * @return This builder.
-     */
+      * Sets the value of the 'sagaId' field.
+      * @param value The value of 'sagaId'.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setSagaId(java.lang.String value) {
       validate(fields()[1], value);
       this.sagaId = value;
@@ -468,18 +466,18 @@
     }
 
     /**
-     * Checks whether the 'sagaId' field has been set.
-     * @return True if the 'sagaId' field has been set, false otherwise.
-     */
+      * Checks whether the 'sagaId' field has been set.
+      * @return True if the 'sagaId' field has been set, false otherwise.
+      */
     public boolean hasSagaId() {
       return fieldSetFlags()[1];
     }
 
 
     /**
-     * Clears the value of the 'sagaId' field.
-     * @return This builder.
-     */
+      * Clears the value of the 'sagaId' field.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearSagaId() {
       sagaId = null;
       fieldSetFlags()[1] = false;
@@ -487,20 +485,20 @@
     }
 
     /**
-     * Gets the value of the 'restaurantId' field.
-     * @return The value.
-     */
+      * Gets the value of the 'pharmacyId' field.
+      * @return The value.
+      */
     public java.lang.String getPharmacyId() {
       return pharmacyId;
     }
 
 
     /**
-     * Sets the value of the 'pharmacytId' field.
-     * @param value The value of 'pharmacyId'.
-     * @return This builder.
-     */
-    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setRestaurantId(java.lang.String value) {
+      * Sets the value of the 'pharmacyId' field.
+      * @param value The value of 'pharmacyId'.
+      * @return This builder.
+      */
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setPharmacyId(java.lang.String value) {
       validate(fields()[2], value);
       this.pharmacyId = value;
       fieldSetFlags()[2] = true;
@@ -508,38 +506,38 @@
     }
 
     /**
-     * Checks whether the 'pharmacyId' field has been set.
-     * @return True if the 'pharmacyId' field has been set, false otherwise.
-     */
+      * Checks whether the 'pharmacyId' field has been set.
+      * @return True if the 'pharmacyId' field has been set, false otherwise.
+      */
     public boolean hasPharmacyId() {
       return fieldSetFlags()[2];
     }
 
 
     /**
-     * Clears the value of the 'pharmacyId' field.
-     * @return This builder.
-     */
-    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearRestaurantId() {
+      * Clears the value of the 'pharmacyId' field.
+      * @return This builder.
+      */
+    public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearPharmacyId() {
       pharmacyId = null;
       fieldSetFlags()[2] = false;
       return this;
     }
 
     /**
-     * Gets the value of the 'orderId' field.
-     * @return The value.
-     */
+      * Gets the value of the 'orderId' field.
+      * @return The value.
+      */
     public java.lang.String getOrderId() {
       return orderId;
     }
 
 
     /**
-     * Sets the value of the 'orderId' field.
-     * @param value The value of 'orderId'.
-     * @return This builder.
-     */
+      * Sets the value of the 'orderId' field.
+      * @param value The value of 'orderId'.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setOrderId(java.lang.String value) {
       validate(fields()[3], value);
       this.orderId = value;
@@ -548,18 +546,18 @@
     }
 
     /**
-     * Checks whether the 'orderId' field has been set.
-     * @return True if the 'orderId' field has been set, false otherwise.
-     */
+      * Checks whether the 'orderId' field has been set.
+      * @return True if the 'orderId' field has been set, false otherwise.
+      */
     public boolean hasOrderId() {
       return fieldSetFlags()[3];
     }
 
 
     /**
-     * Clears the value of the 'orderId' field.
-     * @return This builder.
-     */
+      * Clears the value of the 'orderId' field.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearOrderId() {
       orderId = null;
       fieldSetFlags()[3] = false;
@@ -567,19 +565,19 @@
     }
 
     /**
-     * Gets the value of the 'createdAt' field.
-     * @return The value.
-     */
+      * Gets the value of the 'createdAt' field.
+      * @return The value.
+      */
     public java.time.Instant getCreatedAt() {
       return createdAt;
     }
 
 
     /**
-     * Sets the value of the 'createdAt' field.
-     * @param value The value of 'createdAt'.
-     * @return This builder.
-     */
+      * Sets the value of the 'createdAt' field.
+      * @param value The value of 'createdAt'.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setCreatedAt(java.time.Instant value) {
       validate(fields()[4], value);
       this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
@@ -588,37 +586,37 @@
     }
 
     /**
-     * Checks whether the 'createdAt' field has been set.
-     * @return True if the 'createdAt' field has been set, false otherwise.
-     */
+      * Checks whether the 'createdAt' field has been set.
+      * @return True if the 'createdAt' field has been set, false otherwise.
+      */
     public boolean hasCreatedAt() {
       return fieldSetFlags()[4];
     }
 
 
     /**
-     * Clears the value of the 'createdAt' field.
-     * @return This builder.
-     */
+      * Clears the value of the 'createdAt' field.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearCreatedAt() {
       fieldSetFlags()[4] = false;
       return this;
     }
 
     /**
-     * Gets the value of the 'orderApprovalStatus' field.
-     * @return The value.
-     */
+      * Gets the value of the 'orderApprovalStatus' field.
+      * @return The value.
+      */
     public com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus getOrderApprovalStatus() {
       return orderApprovalStatus;
     }
 
 
     /**
-     * Sets the value of the 'orderApprovalStatus' field.
-     * @param value The value of 'orderApprovalStatus'.
-     * @return This builder.
-     */
+      * Sets the value of the 'orderApprovalStatus' field.
+      * @param value The value of 'orderApprovalStatus'.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setOrderApprovalStatus(com.online.medicine.application.kafka.order.avro.model.OrderApprovalStatus value) {
       validate(fields()[5], value);
       this.orderApprovalStatus = value;
@@ -627,18 +625,18 @@
     }
 
     /**
-     * Checks whether the 'orderApprovalStatus' field has been set.
-     * @return True if the 'orderApprovalStatus' field has been set, false otherwise.
-     */
+      * Checks whether the 'orderApprovalStatus' field has been set.
+      * @return True if the 'orderApprovalStatus' field has been set, false otherwise.
+      */
     public boolean hasOrderApprovalStatus() {
       return fieldSetFlags()[5];
     }
 
 
     /**
-     * Clears the value of the 'orderApprovalStatus' field.
-     * @return This builder.
-     */
+      * Clears the value of the 'orderApprovalStatus' field.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearOrderApprovalStatus() {
       orderApprovalStatus = null;
       fieldSetFlags()[5] = false;
@@ -646,19 +644,19 @@
     }
 
     /**
-     * Gets the value of the 'failureMessages' field.
-     * @return The value.
-     */
+      * Gets the value of the 'failureMessages' field.
+      * @return The value.
+      */
     public java.util.List<java.lang.String> getFailureMessages() {
       return failureMessages;
     }
 
 
     /**
-     * Sets the value of the 'failureMessages' field.
-     * @param value The value of 'failureMessages'.
-     * @return This builder.
-     */
+      * Sets the value of the 'failureMessages' field.
+      * @param value The value of 'failureMessages'.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder setFailureMessages(java.util.List<java.lang.String> value) {
       validate(fields()[6], value);
       this.failureMessages = value;
@@ -667,18 +665,18 @@
     }
 
     /**
-     * Checks whether the 'failureMessages' field has been set.
-     * @return True if the 'failureMessages' field has been set, false otherwise.
-     */
+      * Checks whether the 'failureMessages' field has been set.
+      * @return True if the 'failureMessages' field has been set, false otherwise.
+      */
     public boolean hasFailureMessages() {
       return fieldSetFlags()[6];
     }
 
 
     /**
-     * Clears the value of the 'failureMessages' field.
-     * @return This builder.
-     */
+      * Clears the value of the 'failureMessages' field.
+      * @return This builder.
+      */
     public com.online.medicine.application.kafka.order.avro.model.PharmacyApprovalResponseAvroModel.Builder clearFailureMessages() {
       failureMessages = null;
       fieldSetFlags()[6] = false;
@@ -708,21 +706,30 @@
 
   @SuppressWarnings("unchecked")
   private static final org.apache.avro.io.DatumWriter<PharmacyApprovalResponseAvroModel>
-          WRITER$ = (org.apache.avro.io.DatumWriter<PharmacyApprovalResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);
+    WRITER$ = (org.apache.avro.io.DatumWriter<PharmacyApprovalResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);
 
   @Override public void writeExternal(java.io.ObjectOutput out)
-          throws java.io.IOException {
+    throws java.io.IOException {
     WRITER$.write(this, SpecificData.getEncoder(out));
   }
 
   @SuppressWarnings("unchecked")
   private static final org.apache.avro.io.DatumReader<PharmacyApprovalResponseAvroModel>
-          READER$ = (org.apache.avro.io.DatumReader<PharmacyApprovalResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);
+    READER$ = (org.apache.avro.io.DatumReader<PharmacyApprovalResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);
 
   @Override public void readExternal(java.io.ObjectInput in)
-          throws java.io.IOException {
+    throws java.io.IOException {
     READER$.read(this, SpecificData.getDecoder(in));
   }
 
 }
 
+
+
+
+
+
+
+
+
+
